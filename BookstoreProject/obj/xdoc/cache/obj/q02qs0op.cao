id: BookstoreProject
language: CSharp
name:
  Default: BookstoreProject
qualifiedName:
  Default: BookstoreProject
type: Assembly
modifiers: {}
items:
- id: BookstoreProject
  commentId: N:BookstoreProject
  language: CSharp
  name:
    CSharp: BookstoreProject
    VB: BookstoreProject
  nameWithType:
    CSharp: BookstoreProject
    VB: BookstoreProject
  qualifiedName:
    CSharp: BookstoreProject
    VB: BookstoreProject
  type: Namespace
  assemblies:
  - BookstoreProject
  modifiers: {}
  items:
  - id: BookstoreProject.BundleConfig
    commentId: T:BookstoreProject.BundleConfig
    language: CSharp
    name:
      CSharp: BundleConfig
      VB: BundleConfig
    nameWithType:
      CSharp: BundleConfig
      VB: BundleConfig
    qualifiedName:
      CSharp: BookstoreProject.BundleConfig
      VB: BookstoreProject.BundleConfig
    type: Class
    assemblies:
    - BookstoreProject
    namespace: BookstoreProject
    source:
      id: BundleConfig
      path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\App_Start\BundleConfig.cs
      startLine: 5
    syntax:
      content:
        CSharp: public class BundleConfig
        VB: Public Class BundleConfig
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: BookstoreProject.BundleConfig.RegisterBundles(System.Web.Optimization.BundleCollection)
      commentId: M:BookstoreProject.BundleConfig.RegisterBundles(System.Web.Optimization.BundleCollection)
      language: CSharp
      name:
        CSharp: RegisterBundles(BundleCollection)
        VB: RegisterBundles(BundleCollection)
      nameWithType:
        CSharp: BundleConfig.RegisterBundles(BundleCollection)
        VB: BundleConfig.RegisterBundles(BundleCollection)
      qualifiedName:
        CSharp: BookstoreProject.BundleConfig.RegisterBundles(System.Web.Optimization.BundleCollection)
        VB: BookstoreProject.BundleConfig.RegisterBundles(System.Web.Optimization.BundleCollection)
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject
      source:
        id: RegisterBundles
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\App_Start\BundleConfig.cs
        startLine: 8
      syntax:
        content:
          CSharp: public static void RegisterBundles(BundleCollection bundles)
          VB: Public Shared Sub RegisterBundles(bundles As BundleCollection)
        parameters:
        - id: bundles
          type: System.Web.Optimization.BundleCollection
      overload: BookstoreProject.BundleConfig.RegisterBundles*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: BookstoreProject.FilterConfig
    commentId: T:BookstoreProject.FilterConfig
    language: CSharp
    name:
      CSharp: FilterConfig
      VB: FilterConfig
    nameWithType:
      CSharp: FilterConfig
      VB: FilterConfig
    qualifiedName:
      CSharp: BookstoreProject.FilterConfig
      VB: BookstoreProject.FilterConfig
    type: Class
    assemblies:
    - BookstoreProject
    namespace: BookstoreProject
    source:
      id: FilterConfig
      path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\App_Start\FilterConfig.cs
      startLine: 5
    syntax:
      content:
        CSharp: public class FilterConfig
        VB: Public Class FilterConfig
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: BookstoreProject.FilterConfig.RegisterGlobalFilters(System.Web.Mvc.GlobalFilterCollection)
      commentId: M:BookstoreProject.FilterConfig.RegisterGlobalFilters(System.Web.Mvc.GlobalFilterCollection)
      language: CSharp
      name:
        CSharp: RegisterGlobalFilters(GlobalFilterCollection)
        VB: RegisterGlobalFilters(GlobalFilterCollection)
      nameWithType:
        CSharp: FilterConfig.RegisterGlobalFilters(GlobalFilterCollection)
        VB: FilterConfig.RegisterGlobalFilters(GlobalFilterCollection)
      qualifiedName:
        CSharp: BookstoreProject.FilterConfig.RegisterGlobalFilters(System.Web.Mvc.GlobalFilterCollection)
        VB: BookstoreProject.FilterConfig.RegisterGlobalFilters(System.Web.Mvc.GlobalFilterCollection)
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject
      source:
        id: RegisterGlobalFilters
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\App_Start\FilterConfig.cs
        startLine: 7
      syntax:
        content:
          CSharp: public static void RegisterGlobalFilters(GlobalFilterCollection filters)
          VB: Public Shared Sub RegisterGlobalFilters(filters As GlobalFilterCollection)
        parameters:
        - id: filters
          type: System.Web.Mvc.GlobalFilterCollection
      overload: BookstoreProject.FilterConfig.RegisterGlobalFilters*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: BookstoreProject.EmailService
    commentId: T:BookstoreProject.EmailService
    language: CSharp
    name:
      CSharp: EmailService
      VB: EmailService
    nameWithType:
      CSharp: EmailService
      VB: EmailService
    qualifiedName:
      CSharp: BookstoreProject.EmailService
      VB: BookstoreProject.EmailService
    type: Class
    assemblies:
    - BookstoreProject
    namespace: BookstoreProject
    source:
      id: EmailService
      path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\App_Start\IdentityConfig.cs
      startLine: 16
    syntax:
      content:
        CSharp: 'public class EmailService : IIdentityMessageService'
        VB: >-
          Public Class EmailService

              Implements IIdentityMessageService
    inheritance:
    - System.Object
    implements:
    - Microsoft.AspNet.Identity.IIdentityMessageService
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: BookstoreProject.EmailService.SendAsync(Microsoft.AspNet.Identity.IdentityMessage)
      commentId: M:BookstoreProject.EmailService.SendAsync(Microsoft.AspNet.Identity.IdentityMessage)
      language: CSharp
      name:
        CSharp: SendAsync(IdentityMessage)
        VB: SendAsync(IdentityMessage)
      nameWithType:
        CSharp: EmailService.SendAsync(IdentityMessage)
        VB: EmailService.SendAsync(IdentityMessage)
      qualifiedName:
        CSharp: BookstoreProject.EmailService.SendAsync(Microsoft.AspNet.Identity.IdentityMessage)
        VB: BookstoreProject.EmailService.SendAsync(Microsoft.AspNet.Identity.IdentityMessage)
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject
      source:
        id: SendAsync
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\App_Start\IdentityConfig.cs
        startLine: 18
      syntax:
        content:
          CSharp: public Task SendAsync(IdentityMessage message)
          VB: Public Function SendAsync(message As IdentityMessage) As Task
        parameters:
        - id: message
          type: Microsoft.AspNet.Identity.IdentityMessage
        return:
          type: System.Threading.Tasks.Task
      overload: BookstoreProject.EmailService.SendAsync*
      implements:
      - Microsoft.AspNet.Identity.IIdentityMessageService.SendAsync(Microsoft.AspNet.Identity.IdentityMessage)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: BookstoreProject.SmsService
    commentId: T:BookstoreProject.SmsService
    language: CSharp
    name:
      CSharp: SmsService
      VB: SmsService
    nameWithType:
      CSharp: SmsService
      VB: SmsService
    qualifiedName:
      CSharp: BookstoreProject.SmsService
      VB: BookstoreProject.SmsService
    type: Class
    assemblies:
    - BookstoreProject
    namespace: BookstoreProject
    source:
      id: SmsService
      path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\App_Start\IdentityConfig.cs
      startLine: 25
    syntax:
      content:
        CSharp: 'public class SmsService : IIdentityMessageService'
        VB: >-
          Public Class SmsService

              Implements IIdentityMessageService
    inheritance:
    - System.Object
    implements:
    - Microsoft.AspNet.Identity.IIdentityMessageService
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: BookstoreProject.SmsService.SendAsync(Microsoft.AspNet.Identity.IdentityMessage)
      commentId: M:BookstoreProject.SmsService.SendAsync(Microsoft.AspNet.Identity.IdentityMessage)
      language: CSharp
      name:
        CSharp: SendAsync(IdentityMessage)
        VB: SendAsync(IdentityMessage)
      nameWithType:
        CSharp: SmsService.SendAsync(IdentityMessage)
        VB: SmsService.SendAsync(IdentityMessage)
      qualifiedName:
        CSharp: BookstoreProject.SmsService.SendAsync(Microsoft.AspNet.Identity.IdentityMessage)
        VB: BookstoreProject.SmsService.SendAsync(Microsoft.AspNet.Identity.IdentityMessage)
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject
      source:
        id: SendAsync
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\App_Start\IdentityConfig.cs
        startLine: 27
      syntax:
        content:
          CSharp: public Task SendAsync(IdentityMessage message)
          VB: Public Function SendAsync(message As IdentityMessage) As Task
        parameters:
        - id: message
          type: Microsoft.AspNet.Identity.IdentityMessage
        return:
          type: System.Threading.Tasks.Task
      overload: BookstoreProject.SmsService.SendAsync*
      implements:
      - Microsoft.AspNet.Identity.IIdentityMessageService.SendAsync(Microsoft.AspNet.Identity.IdentityMessage)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: BookstoreProject.ApplicationUserManager
    commentId: T:BookstoreProject.ApplicationUserManager
    language: CSharp
    name:
      CSharp: ApplicationUserManager
      VB: ApplicationUserManager
    nameWithType:
      CSharp: ApplicationUserManager
      VB: ApplicationUserManager
    qualifiedName:
      CSharp: BookstoreProject.ApplicationUserManager
      VB: BookstoreProject.ApplicationUserManager
    type: Class
    assemblies:
    - BookstoreProject
    namespace: BookstoreProject
    source:
      id: ApplicationUserManager
      path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\App_Start\IdentityConfig.cs
      startLine: 35
    syntax:
      content:
        CSharp: 'public class ApplicationUserManager : UserManager<ApplicationUser>, IDisposable'
        VB: >-
          Public Class ApplicationUserManager

              Inherits UserManager(Of ApplicationUser)

              Implements IDisposable
    inheritance:
    - System.Object
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser}
    implements:
    - System.IDisposable
    inheritedMembers:
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.Dispose
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.CreateIdentityAsync(BookstoreProject.Models.ApplicationUser,System.String)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.CreateAsync(BookstoreProject.Models.ApplicationUser)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.UpdateAsync(BookstoreProject.Models.ApplicationUser)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.DeleteAsync(BookstoreProject.Models.ApplicationUser)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.FindByIdAsync(System.String)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.FindByNameAsync(System.String)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.CreateAsync(BookstoreProject.Models.ApplicationUser,System.String)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.FindAsync(System.String,System.String)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.CheckPasswordAsync(BookstoreProject.Models.ApplicationUser,System.String)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.HasPasswordAsync(System.String)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.AddPasswordAsync(System.String,System.String)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.ChangePasswordAsync(System.String,System.String,System.String)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.RemovePasswordAsync(System.String)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.UpdatePassword(Microsoft.AspNet.Identity.IUserPasswordStore{BookstoreProject.Models.ApplicationUser,System.String},BookstoreProject.Models.ApplicationUser,System.String)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.VerifyPasswordAsync(Microsoft.AspNet.Identity.IUserPasswordStore{BookstoreProject.Models.ApplicationUser,System.String},BookstoreProject.Models.ApplicationUser,System.String)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.GetSecurityStampAsync(System.String)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.UpdateSecurityStampAsync(System.String)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.GeneratePasswordResetTokenAsync(System.String)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.ResetPasswordAsync(System.String,System.String,System.String)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.FindAsync(Microsoft.AspNet.Identity.UserLoginInfo)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.RemoveLoginAsync(System.String,Microsoft.AspNet.Identity.UserLoginInfo)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.AddLoginAsync(System.String,Microsoft.AspNet.Identity.UserLoginInfo)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.GetLoginsAsync(System.String)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.AddClaimAsync(System.String,System.Security.Claims.Claim)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.RemoveClaimAsync(System.String,System.Security.Claims.Claim)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.GetClaimsAsync(System.String)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.AddToRoleAsync(System.String,System.String)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.AddToRolesAsync(System.String,System.String[])
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.RemoveFromRolesAsync(System.String,System.String[])
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.RemoveFromRoleAsync(System.String,System.String)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.GetRolesAsync(System.String)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.IsInRoleAsync(System.String,System.String)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.GetEmailAsync(System.String)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SetEmailAsync(System.String,System.String)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.FindByEmailAsync(System.String)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.GenerateEmailConfirmationTokenAsync(System.String)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.ConfirmEmailAsync(System.String,System.String)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.IsEmailConfirmedAsync(System.String)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.GetPhoneNumberAsync(System.String)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SetPhoneNumberAsync(System.String,System.String)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.ChangePhoneNumberAsync(System.String,System.String,System.String)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.IsPhoneNumberConfirmedAsync(System.String)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.GenerateChangePhoneNumberTokenAsync(System.String,System.String)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.VerifyChangePhoneNumberTokenAsync(System.String,System.String,System.String)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.VerifyUserTokenAsync(System.String,System.String,System.String)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.GenerateUserTokenAsync(System.String,System.String)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.RegisterTwoFactorProvider(System.String,Microsoft.AspNet.Identity.IUserTokenProvider{BookstoreProject.Models.ApplicationUser,System.String})
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.GetValidTwoFactorProvidersAsync(System.String)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.VerifyTwoFactorTokenAsync(System.String,System.String,System.String)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.GenerateTwoFactorTokenAsync(System.String,System.String)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.NotifyTwoFactorTokenAsync(System.String,System.String,System.String)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.GetTwoFactorEnabledAsync(System.String)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SetTwoFactorEnabledAsync(System.String,System.Boolean)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SendEmailAsync(System.String,System.String,System.String)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SendSmsAsync(System.String,System.String)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.IsLockedOutAsync(System.String)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SetLockoutEnabledAsync(System.String,System.Boolean)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.GetLockoutEnabledAsync(System.String)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.GetLockoutEndDateAsync(System.String)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SetLockoutEndDateAsync(System.String,System.DateTimeOffset)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.AccessFailedAsync(System.String)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.ResetAccessFailedCountAsync(System.String)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.GetAccessFailedCountAsync(System.String)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.Dispose(System.Boolean)
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.Store
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.PasswordHasher
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.UserValidator
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.PasswordValidator
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.ClaimsIdentityFactory
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.EmailService
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SmsService
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.UserTokenProvider
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.UserLockoutEnabledByDefault
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.MaxFailedAccessAttemptsBeforeLockout
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.DefaultAccountLockoutTimeSpan
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SupportsUserTwoFactor
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SupportsUserPassword
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SupportsUserSecurityStamp
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SupportsUserRole
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SupportsUserLogin
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SupportsUserEmail
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SupportsUserPhoneNumber
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SupportsUserClaim
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SupportsUserLockout
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SupportsQueryableUsers
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.Users
    - Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.TwoFactorProviders
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: BookstoreProject.ApplicationUserManager.#ctor(Microsoft.AspNet.Identity.IUserStore{BookstoreProject.Models.ApplicationUser})
      commentId: M:BookstoreProject.ApplicationUserManager.#ctor(Microsoft.AspNet.Identity.IUserStore{BookstoreProject.Models.ApplicationUser})
      language: CSharp
      name:
        CSharp: ApplicationUserManager(IUserStore<ApplicationUser>)
        VB: ApplicationUserManager(IUserStore(Of ApplicationUser))
      nameWithType:
        CSharp: ApplicationUserManager.ApplicationUserManager(IUserStore<ApplicationUser>)
        VB: ApplicationUserManager.ApplicationUserManager(IUserStore(Of ApplicationUser))
      qualifiedName:
        CSharp: BookstoreProject.ApplicationUserManager.ApplicationUserManager(Microsoft.AspNet.Identity.IUserStore<BookstoreProject.Models.ApplicationUser>)
        VB: BookstoreProject.ApplicationUserManager.ApplicationUserManager(Microsoft.AspNet.Identity.IUserStore(Of BookstoreProject.Models.ApplicationUser))
      type: Constructor
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject
      source:
        id: .ctor
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\App_Start\IdentityConfig.cs
        startLine: 37
      syntax:
        content:
          CSharp: public ApplicationUserManager(IUserStore<ApplicationUser> store)
          VB: Public Sub New(store As IUserStore(Of ApplicationUser))
        parameters:
        - id: store
          type: Microsoft.AspNet.Identity.IUserStore{BookstoreProject.Models.ApplicationUser}
      overload: BookstoreProject.ApplicationUserManager.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.ApplicationUserManager.Create(Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions{BookstoreProject.ApplicationUserManager},Microsoft.Owin.IOwinContext)
      commentId: M:BookstoreProject.ApplicationUserManager.Create(Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions{BookstoreProject.ApplicationUserManager},Microsoft.Owin.IOwinContext)
      language: CSharp
      name:
        CSharp: Create(IdentityFactoryOptions<ApplicationUserManager>, IOwinContext)
        VB: Create(IdentityFactoryOptions(Of ApplicationUserManager), IOwinContext)
      nameWithType:
        CSharp: ApplicationUserManager.Create(IdentityFactoryOptions<ApplicationUserManager>, IOwinContext)
        VB: ApplicationUserManager.Create(IdentityFactoryOptions(Of ApplicationUserManager), IOwinContext)
      qualifiedName:
        CSharp: BookstoreProject.ApplicationUserManager.Create(Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions<BookstoreProject.ApplicationUserManager>, Microsoft.Owin.IOwinContext)
        VB: BookstoreProject.ApplicationUserManager.Create(Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions(Of BookstoreProject.ApplicationUserManager), Microsoft.Owin.IOwinContext)
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject
      source:
        id: Create
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\App_Start\IdentityConfig.cs
        startLine: 42
      syntax:
        content:
          CSharp: public static ApplicationUserManager Create(IdentityFactoryOptions<ApplicationUserManager> options, IOwinContext context)
          VB: Public Shared Function Create(options As IdentityFactoryOptions(Of ApplicationUserManager), context As IOwinContext) As ApplicationUserManager
        parameters:
        - id: options
          type: Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions{BookstoreProject.ApplicationUserManager}
        - id: context
          type: Microsoft.Owin.IOwinContext
        return:
          type: BookstoreProject.ApplicationUserManager
      overload: BookstoreProject.ApplicationUserManager.Create*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: BookstoreProject.ApplicationSignInManager
    commentId: T:BookstoreProject.ApplicationSignInManager
    language: CSharp
    name:
      CSharp: ApplicationSignInManager
      VB: ApplicationSignInManager
    nameWithType:
      CSharp: ApplicationSignInManager
      VB: ApplicationSignInManager
    qualifiedName:
      CSharp: BookstoreProject.ApplicationSignInManager
      VB: BookstoreProject.ApplicationSignInManager
    type: Class
    assemblies:
    - BookstoreProject
    namespace: BookstoreProject
    source:
      id: ApplicationSignInManager
      path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\App_Start\IdentityConfig.cs
      startLine: 91
    syntax:
      content:
        CSharp: 'public class ApplicationSignInManager : SignInManager<ApplicationUser, string>, IDisposable'
        VB: >-
          Public Class ApplicationSignInManager

              Inherits SignInManager(Of ApplicationUser, String)

              Implements IDisposable
    inheritance:
    - System.Object
    - Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}
    implements:
    - System.IDisposable
    inheritedMembers:
    - Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}.CreateUserIdentityAsync(BookstoreProject.Models.ApplicationUser)
    - Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}.ConvertIdToString(System.String)
    - Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}.ConvertIdFromString(System.String)
    - Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}.SignInAsync(BookstoreProject.Models.ApplicationUser,System.Boolean,System.Boolean)
    - Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}.SendTwoFactorCodeAsync(System.String)
    - Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}.GetVerifiedUserIdAsync
    - Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}.HasBeenVerifiedAsync
    - Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}.TwoFactorSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
    - Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}.ExternalSignInAsync(Microsoft.AspNet.Identity.Owin.ExternalLoginInfo,System.Boolean)
    - Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}.PasswordSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
    - Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}.Dispose
    - Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}.Dispose(System.Boolean)
    - Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}.AuthenticationType
    - Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}.UserManager
    - Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}.AuthenticationManager
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: BookstoreProject.ApplicationSignInManager.#ctor(BookstoreProject.ApplicationUserManager,Microsoft.Owin.Security.IAuthenticationManager)
      commentId: M:BookstoreProject.ApplicationSignInManager.#ctor(BookstoreProject.ApplicationUserManager,Microsoft.Owin.Security.IAuthenticationManager)
      language: CSharp
      name:
        CSharp: ApplicationSignInManager(ApplicationUserManager, IAuthenticationManager)
        VB: ApplicationSignInManager(ApplicationUserManager, IAuthenticationManager)
      nameWithType:
        CSharp: ApplicationSignInManager.ApplicationSignInManager(ApplicationUserManager, IAuthenticationManager)
        VB: ApplicationSignInManager.ApplicationSignInManager(ApplicationUserManager, IAuthenticationManager)
      qualifiedName:
        CSharp: BookstoreProject.ApplicationSignInManager.ApplicationSignInManager(BookstoreProject.ApplicationUserManager, Microsoft.Owin.Security.IAuthenticationManager)
        VB: BookstoreProject.ApplicationSignInManager.ApplicationSignInManager(BookstoreProject.ApplicationUserManager, Microsoft.Owin.Security.IAuthenticationManager)
      type: Constructor
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject
      source:
        id: .ctor
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\App_Start\IdentityConfig.cs
        startLine: 93
      syntax:
        content:
          CSharp: public ApplicationSignInManager(ApplicationUserManager userManager, IAuthenticationManager authenticationManager)
          VB: Public Sub New(userManager As ApplicationUserManager, authenticationManager As IAuthenticationManager)
        parameters:
        - id: userManager
          type: BookstoreProject.ApplicationUserManager
        - id: authenticationManager
          type: Microsoft.Owin.Security.IAuthenticationManager
      overload: BookstoreProject.ApplicationSignInManager.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.ApplicationSignInManager.CreateUserIdentityAsync(BookstoreProject.Models.ApplicationUser)
      commentId: M:BookstoreProject.ApplicationSignInManager.CreateUserIdentityAsync(BookstoreProject.Models.ApplicationUser)
      language: CSharp
      name:
        CSharp: CreateUserIdentityAsync(ApplicationUser)
        VB: CreateUserIdentityAsync(ApplicationUser)
      nameWithType:
        CSharp: ApplicationSignInManager.CreateUserIdentityAsync(ApplicationUser)
        VB: ApplicationSignInManager.CreateUserIdentityAsync(ApplicationUser)
      qualifiedName:
        CSharp: BookstoreProject.ApplicationSignInManager.CreateUserIdentityAsync(BookstoreProject.Models.ApplicationUser)
        VB: BookstoreProject.ApplicationSignInManager.CreateUserIdentityAsync(BookstoreProject.Models.ApplicationUser)
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject
      source:
        id: CreateUserIdentityAsync
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\App_Start\IdentityConfig.cs
        startLine: 98
      syntax:
        content:
          CSharp: public override Task<ClaimsIdentity> CreateUserIdentityAsync(ApplicationUser user)
          VB: Public Overrides Function CreateUserIdentityAsync(user As ApplicationUser) As Task(Of ClaimsIdentity)
        parameters:
        - id: user
          type: BookstoreProject.Models.ApplicationUser
        return:
          type: System.Threading.Tasks.Task{System.Security.Claims.ClaimsIdentity}
      overload: BookstoreProject.ApplicationSignInManager.CreateUserIdentityAsync*
      overridden: Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}.CreateUserIdentityAsync(BookstoreProject.Models.ApplicationUser)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: BookstoreProject.ApplicationSignInManager.Create(Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions{BookstoreProject.ApplicationSignInManager},Microsoft.Owin.IOwinContext)
      commentId: M:BookstoreProject.ApplicationSignInManager.Create(Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions{BookstoreProject.ApplicationSignInManager},Microsoft.Owin.IOwinContext)
      language: CSharp
      name:
        CSharp: Create(IdentityFactoryOptions<ApplicationSignInManager>, IOwinContext)
        VB: Create(IdentityFactoryOptions(Of ApplicationSignInManager), IOwinContext)
      nameWithType:
        CSharp: ApplicationSignInManager.Create(IdentityFactoryOptions<ApplicationSignInManager>, IOwinContext)
        VB: ApplicationSignInManager.Create(IdentityFactoryOptions(Of ApplicationSignInManager), IOwinContext)
      qualifiedName:
        CSharp: BookstoreProject.ApplicationSignInManager.Create(Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions<BookstoreProject.ApplicationSignInManager>, Microsoft.Owin.IOwinContext)
        VB: BookstoreProject.ApplicationSignInManager.Create(Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions(Of BookstoreProject.ApplicationSignInManager), Microsoft.Owin.IOwinContext)
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject
      source:
        id: Create
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\App_Start\IdentityConfig.cs
        startLine: 103
      syntax:
        content:
          CSharp: public static ApplicationSignInManager Create(IdentityFactoryOptions<ApplicationSignInManager> options, IOwinContext context)
          VB: Public Shared Function Create(options As IdentityFactoryOptions(Of ApplicationSignInManager), context As IOwinContext) As ApplicationSignInManager
        parameters:
        - id: options
          type: Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions{BookstoreProject.ApplicationSignInManager}
        - id: context
          type: Microsoft.Owin.IOwinContext
        return:
          type: BookstoreProject.ApplicationSignInManager
      overload: BookstoreProject.ApplicationSignInManager.Create*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: BookstoreProject.RouteConfig
    commentId: T:BookstoreProject.RouteConfig
    language: CSharp
    name:
      CSharp: RouteConfig
      VB: RouteConfig
    nameWithType:
      CSharp: RouteConfig
      VB: RouteConfig
    qualifiedName:
      CSharp: BookstoreProject.RouteConfig
      VB: BookstoreProject.RouteConfig
    type: Class
    assemblies:
    - BookstoreProject
    namespace: BookstoreProject
    source:
      id: RouteConfig
      path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\App_Start\RouteConfig.cs
      startLine: 9
    syntax:
      content:
        CSharp: public class RouteConfig
        VB: Public Class RouteConfig
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: BookstoreProject.RouteConfig.RegisterRoutes(System.Web.Routing.RouteCollection)
      commentId: M:BookstoreProject.RouteConfig.RegisterRoutes(System.Web.Routing.RouteCollection)
      language: CSharp
      name:
        CSharp: RegisterRoutes(RouteCollection)
        VB: RegisterRoutes(RouteCollection)
      nameWithType:
        CSharp: RouteConfig.RegisterRoutes(RouteCollection)
        VB: RouteConfig.RegisterRoutes(RouteCollection)
      qualifiedName:
        CSharp: BookstoreProject.RouteConfig.RegisterRoutes(System.Web.Routing.RouteCollection)
        VB: BookstoreProject.RouteConfig.RegisterRoutes(System.Web.Routing.RouteCollection)
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject
      source:
        id: RegisterRoutes
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\App_Start\RouteConfig.cs
        startLine: 11
      syntax:
        content:
          CSharp: public static void RegisterRoutes(RouteCollection routes)
          VB: Public Shared Sub RegisterRoutes(routes As RouteCollection)
        parameters:
        - id: routes
          type: System.Web.Routing.RouteCollection
      overload: BookstoreProject.RouteConfig.RegisterRoutes*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: BookstoreProject.Startup
    commentId: T:BookstoreProject.Startup
    language: CSharp
    name:
      CSharp: Startup
      VB: Startup
    nameWithType:
      CSharp: Startup
      VB: Startup
    qualifiedName:
      CSharp: BookstoreProject.Startup
      VB: BookstoreProject.Startup
    type: Class
    assemblies:
    - BookstoreProject
    namespace: BookstoreProject
    source:
      id: Startup
      path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Startup.cs
      startLine: 9
    syntax:
      content:
        CSharp: public class Startup
        VB: Public Class Startup
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: BookstoreProject.Startup.ConfigureAuth(Owin.IAppBuilder)
      commentId: M:BookstoreProject.Startup.ConfigureAuth(Owin.IAppBuilder)
      language: CSharp
      name:
        CSharp: ConfigureAuth(IAppBuilder)
        VB: ConfigureAuth(IAppBuilder)
      nameWithType:
        CSharp: Startup.ConfigureAuth(IAppBuilder)
        VB: Startup.ConfigureAuth(IAppBuilder)
      qualifiedName:
        CSharp: BookstoreProject.Startup.ConfigureAuth(Owin.IAppBuilder)
        VB: BookstoreProject.Startup.ConfigureAuth(Owin.IAppBuilder)
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject
      source:
        id: ConfigureAuth
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\App_Start\Startup.Auth.cs
        startLine: 14
      syntax:
        content:
          CSharp: public void ConfigureAuth(IAppBuilder app)
          VB: Public Sub ConfigureAuth(app As IAppBuilder)
        parameters:
        - id: app
          type: Owin.IAppBuilder
      overload: BookstoreProject.Startup.ConfigureAuth*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Startup.Configuration(Owin.IAppBuilder)
      commentId: M:BookstoreProject.Startup.Configuration(Owin.IAppBuilder)
      language: CSharp
      name:
        CSharp: Configuration(IAppBuilder)
        VB: Configuration(IAppBuilder)
      nameWithType:
        CSharp: Startup.Configuration(IAppBuilder)
        VB: Startup.Configuration(IAppBuilder)
      qualifiedName:
        CSharp: BookstoreProject.Startup.Configuration(Owin.IAppBuilder)
        VB: BookstoreProject.Startup.Configuration(Owin.IAppBuilder)
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject
      source:
        id: Configuration
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Startup.cs
        startLine: 11
      syntax:
        content:
          CSharp: public void Configuration(IAppBuilder app)
          VB: Public Sub Configuration(app As IAppBuilder)
        parameters:
        - id: app
          type: Owin.IAppBuilder
      overload: BookstoreProject.Startup.Configuration*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: BookstoreProject.MvcApplication
    commentId: T:BookstoreProject.MvcApplication
    language: CSharp
    name:
      CSharp: MvcApplication
      VB: MvcApplication
    nameWithType:
      CSharp: MvcApplication
      VB: MvcApplication
    qualifiedName:
      CSharp: BookstoreProject.MvcApplication
      VB: BookstoreProject.MvcApplication
    type: Class
    assemblies:
    - BookstoreProject
    namespace: BookstoreProject
    source:
      id: MvcApplication
      path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Global.asax.cs
      startLine: 10
    syntax:
      content:
        CSharp: 'public class MvcApplication : HttpApplication, IComponent, IDisposable, IHttpAsyncHandler, IHttpHandler, IRequestCompletedNotifier, ISyncContext'
        VB: >-
          Public Class MvcApplication

              Inherits HttpApplication

              Implements IComponent, IDisposable, IHttpAsyncHandler, IHttpHandler, IRequestCompletedNotifier, ISyncContext
    inheritance:
    - System.Object
    - System.Web.HttpApplication
    implements:
    - System.ComponentModel.IComponent
    - System.IDisposable
    - System.Web.IHttpAsyncHandler
    - System.Web.IHttpHandler
    inheritedMembers:
    - System.Web.HttpApplication.CompleteRequest
    - System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
    - System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
    - System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
    - System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
    - System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
    - System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
    - System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
    - System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
    - System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
    - System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
    - System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
    - System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
    - System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
    - System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
    - System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
    - System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
    - System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
    - System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
    - System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
    - System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
    - System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
    - System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
    - System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
    - System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
    - System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
    - System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
    - System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
    - System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
    - System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
    - System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
    - System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
    - System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
    - System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
    - System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
    - System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
    - System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
    - System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
    - System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
    - System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
    - System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
    - System.Web.HttpApplication.Init
    - System.Web.HttpApplication.Dispose
    - System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)
    - System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)
    - System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
    - System.Web.HttpApplication.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)
    - System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)
    - System.Web.HttpApplication.OnExecuteRequestStep(System.Action{System.Web.HttpContextBase,System.Action})
    - System.Web.HttpApplication.RegisterModule(System.Type)
    - System.Web.HttpApplication.Context
    - System.Web.HttpApplication.Events
    - System.Web.HttpApplication.Request
    - System.Web.HttpApplication.Response
    - System.Web.HttpApplication.Session
    - System.Web.HttpApplication.Application
    - System.Web.HttpApplication.Server
    - System.Web.HttpApplication.User
    - System.Web.HttpApplication.Modules
    - System.Web.HttpApplication.Site
    - System.Web.HttpApplication.System#Web#IHttpHandler#IsReusable
    - System.Web.HttpApplication.Disposed
    - System.Web.HttpApplication.BeginRequest
    - System.Web.HttpApplication.AuthenticateRequest
    - System.Web.HttpApplication.PostAuthenticateRequest
    - System.Web.HttpApplication.AuthorizeRequest
    - System.Web.HttpApplication.PostAuthorizeRequest
    - System.Web.HttpApplication.ResolveRequestCache
    - System.Web.HttpApplication.PostResolveRequestCache
    - System.Web.HttpApplication.MapRequestHandler
    - System.Web.HttpApplication.PostMapRequestHandler
    - System.Web.HttpApplication.AcquireRequestState
    - System.Web.HttpApplication.PostAcquireRequestState
    - System.Web.HttpApplication.PreRequestHandlerExecute
    - System.Web.HttpApplication.PostRequestHandlerExecute
    - System.Web.HttpApplication.ReleaseRequestState
    - System.Web.HttpApplication.PostReleaseRequestState
    - System.Web.HttpApplication.UpdateRequestCache
    - System.Web.HttpApplication.PostUpdateRequestCache
    - System.Web.HttpApplication.LogRequest
    - System.Web.HttpApplication.PostLogRequest
    - System.Web.HttpApplication.EndRequest
    - System.Web.HttpApplication.Error
    - System.Web.HttpApplication.RequestCompleted
    - System.Web.HttpApplication.PreSendRequestHeaders
    - System.Web.HttpApplication.PreSendRequestContent
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: BookstoreProject.MvcApplication.Application_Start
      commentId: M:BookstoreProject.MvcApplication.Application_Start
      language: CSharp
      name:
        CSharp: Application_Start()
        VB: Application_Start()
      nameWithType:
        CSharp: MvcApplication.Application_Start()
        VB: MvcApplication.Application_Start()
      qualifiedName:
        CSharp: BookstoreProject.MvcApplication.Application_Start()
        VB: BookstoreProject.MvcApplication.Application_Start()
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject
      source:
        id: Application_Start
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Global.asax.cs
        startLine: 12
      syntax:
        content:
          CSharp: protected void Application_Start()
          VB: Protected Sub Application_Start
      overload: BookstoreProject.MvcApplication.Application_Start*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
- id: BookstoreProject.Controllers
  commentId: N:BookstoreProject.Controllers
  language: CSharp
  name:
    CSharp: BookstoreProject.Controllers
    VB: BookstoreProject.Controllers
  nameWithType:
    CSharp: BookstoreProject.Controllers
    VB: BookstoreProject.Controllers
  qualifiedName:
    CSharp: BookstoreProject.Controllers
    VB: BookstoreProject.Controllers
  type: Namespace
  assemblies:
  - BookstoreProject
  modifiers: {}
  items:
  - id: BookstoreProject.Controllers.AccountController
    commentId: T:BookstoreProject.Controllers.AccountController
    language: CSharp
    name:
      CSharp: AccountController
      VB: AccountController
    nameWithType:
      CSharp: AccountController
      VB: AccountController
    qualifiedName:
      CSharp: BookstoreProject.Controllers.AccountController
      VB: BookstoreProject.Controllers.AccountController
    type: Class
    assemblies:
    - BookstoreProject
    namespace: BookstoreProject.Controllers
    source:
      id: AccountController
      path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\AccountController.cs
      startLine: 14
    syntax:
      content:
        CSharp: >-
          [Authorize]

          public class AccountController : Controller, IActionFilter, IAuthenticationFilter, IAuthorizationFilter, IDisposable, IExceptionFilter, IResultFilter, IAsyncController, IController, IAsyncManagerContainer
        VB: >-
          <Authorize>

          Public Class AccountController

              Inherits Controller

              Implements IActionFilter, IAuthenticationFilter, IAuthorizationFilter, IDisposable, IExceptionFilter, IResultFilter, IAsyncController, IController, IAsyncManagerContainer
    inheritance:
    - System.Object
    - System.Web.Mvc.ControllerBase
    - System.Web.Mvc.Controller
    implements:
    - System.Web.Mvc.IActionFilter
    - System.Web.Mvc.Filters.IAuthenticationFilter
    - System.Web.Mvc.IAuthorizationFilter
    - System.IDisposable
    - System.Web.Mvc.IExceptionFilter
    - System.Web.Mvc.IResultFilter
    - System.Web.Mvc.Async.IAsyncController
    - System.Web.Mvc.IController
    - System.Web.Mvc.Async.IAsyncManagerContainer
    inheritedMembers:
    - System.Web.Mvc.Controller.Content(System.String)
    - System.Web.Mvc.Controller.Content(System.String,System.String)
    - System.Web.Mvc.Controller.Content(System.String,System.String,System.Text.Encoding)
    - System.Web.Mvc.Controller.CreateActionInvoker
    - System.Web.Mvc.Controller.CreateTempDataProvider
    - System.Web.Mvc.Controller.Dispose
    - System.Web.Mvc.Controller.ExecuteCore
    - System.Web.Mvc.Controller.File(System.Byte[],System.String)
    - System.Web.Mvc.Controller.File(System.Byte[],System.String,System.String)
    - System.Web.Mvc.Controller.File(System.IO.Stream,System.String)
    - System.Web.Mvc.Controller.File(System.IO.Stream,System.String,System.String)
    - System.Web.Mvc.Controller.File(System.String,System.String)
    - System.Web.Mvc.Controller.File(System.String,System.String,System.String)
    - System.Web.Mvc.Controller.HandleUnknownAction(System.String)
    - System.Web.Mvc.Controller.HttpNotFound
    - System.Web.Mvc.Controller.HttpNotFound(System.String)
    - System.Web.Mvc.Controller.JavaScript(System.String)
    - System.Web.Mvc.Controller.Json(System.Object)
    - System.Web.Mvc.Controller.Json(System.Object,System.String)
    - System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding)
    - System.Web.Mvc.Controller.Json(System.Object,System.Web.Mvc.JsonRequestBehavior)
    - System.Web.Mvc.Controller.Json(System.Object,System.String,System.Web.Mvc.JsonRequestBehavior)
    - System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding,System.Web.Mvc.JsonRequestBehavior)
    - System.Web.Mvc.Controller.Initialize(System.Web.Routing.RequestContext)
    - System.Web.Mvc.Controller.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)
    - System.Web.Mvc.Controller.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)
    - System.Web.Mvc.Controller.OnAuthentication(System.Web.Mvc.Filters.AuthenticationContext)
    - System.Web.Mvc.Controller.OnAuthenticationChallenge(System.Web.Mvc.Filters.AuthenticationChallengeContext)
    - System.Web.Mvc.Controller.OnAuthorization(System.Web.Mvc.AuthorizationContext)
    - System.Web.Mvc.Controller.OnException(System.Web.Mvc.ExceptionContext)
    - System.Web.Mvc.Controller.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)
    - System.Web.Mvc.Controller.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)
    - System.Web.Mvc.Controller.PartialView
    - System.Web.Mvc.Controller.PartialView(System.Object)
    - System.Web.Mvc.Controller.PartialView(System.String)
    - System.Web.Mvc.Controller.PartialView(System.String,System.Object)
    - System.Web.Mvc.Controller.Redirect(System.String)
    - System.Web.Mvc.Controller.RedirectPermanent(System.String)
    - System.Web.Mvc.Controller.RedirectToAction(System.String)
    - System.Web.Mvc.Controller.RedirectToAction(System.String,System.Object)
    - System.Web.Mvc.Controller.RedirectToAction(System.String,System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.RedirectToAction(System.String,System.String)
    - System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Object)
    - System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.RedirectToActionPermanent(System.String)
    - System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.Object)
    - System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String)
    - System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String,System.Object)
    - System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String,System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.RedirectToRoute(System.Object)
    - System.Web.Mvc.Controller.RedirectToRoute(System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.RedirectToRoute(System.String)
    - System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Object)
    - System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Object)
    - System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String)
    - System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String,System.Object)
    - System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel})
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String)
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String[])
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String,System.String[])
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String,System.String[],System.String[])
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String,System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String[],System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String,System.String[],System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.TryValidateModel(System.Object)
    - System.Web.Mvc.Controller.TryValidateModel(System.Object,System.String)
    - System.Web.Mvc.Controller.UpdateModel``1({TModel})
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String)
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String[])
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String,System.String[])
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String,System.String[],System.String[])
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String,System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String[],System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String,System.String[],System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.ValidateModel(System.Object)
    - System.Web.Mvc.Controller.ValidateModel(System.Object,System.String)
    - System.Web.Mvc.Controller.View
    - System.Web.Mvc.Controller.View(System.Object)
    - System.Web.Mvc.Controller.View(System.String)
    - System.Web.Mvc.Controller.View(System.String,System.String)
    - System.Web.Mvc.Controller.View(System.String,System.Object)
    - System.Web.Mvc.Controller.View(System.String,System.String,System.Object)
    - System.Web.Mvc.Controller.View(System.Web.Mvc.IView)
    - System.Web.Mvc.Controller.View(System.Web.Mvc.IView,System.Object)
    - System.Web.Mvc.Controller.System#Web#Mvc#Async#IAsyncController#BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)
    - System.Web.Mvc.Controller.System#Web#Mvc#Async#IAsyncController#EndExecute(System.IAsyncResult)
    - System.Web.Mvc.Controller.BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)
    - System.Web.Mvc.Controller.BeginExecuteCore(System.AsyncCallback,System.Object)
    - System.Web.Mvc.Controller.EndExecute(System.IAsyncResult)
    - System.Web.Mvc.Controller.EndExecuteCore(System.IAsyncResult)
    - System.Web.Mvc.Controller.System#Web#Mvc#IActionFilter#OnActionExecuting(System.Web.Mvc.ActionExecutingContext)
    - System.Web.Mvc.Controller.System#Web#Mvc#IActionFilter#OnActionExecuted(System.Web.Mvc.ActionExecutedContext)
    - System.Web.Mvc.Controller.System#Web#Mvc#Filters#IAuthenticationFilter#OnAuthentication(System.Web.Mvc.Filters.AuthenticationContext)
    - System.Web.Mvc.Controller.System#Web#Mvc#Filters#IAuthenticationFilter#OnAuthenticationChallenge(System.Web.Mvc.Filters.AuthenticationChallengeContext)
    - System.Web.Mvc.Controller.System#Web#Mvc#IAuthorizationFilter#OnAuthorization(System.Web.Mvc.AuthorizationContext)
    - System.Web.Mvc.Controller.System#Web#Mvc#IExceptionFilter#OnException(System.Web.Mvc.ExceptionContext)
    - System.Web.Mvc.Controller.System#Web#Mvc#IResultFilter#OnResultExecuting(System.Web.Mvc.ResultExecutingContext)
    - System.Web.Mvc.Controller.System#Web#Mvc#IResultFilter#OnResultExecuted(System.Web.Mvc.ResultExecutedContext)
    - System.Web.Mvc.Controller.Resolver
    - System.Web.Mvc.Controller.AsyncManager
    - System.Web.Mvc.Controller.DisableAsyncSupport
    - System.Web.Mvc.Controller.ActionInvoker
    - System.Web.Mvc.Controller.Binders
    - System.Web.Mvc.Controller.HttpContext
    - System.Web.Mvc.Controller.ModelState
    - System.Web.Mvc.Controller.Profile
    - System.Web.Mvc.Controller.Request
    - System.Web.Mvc.Controller.Response
    - System.Web.Mvc.Controller.RouteData
    - System.Web.Mvc.Controller.Server
    - System.Web.Mvc.Controller.Session
    - System.Web.Mvc.Controller.TempDataProvider
    - System.Web.Mvc.Controller.Url
    - System.Web.Mvc.Controller.User
    - System.Web.Mvc.Controller.ViewEngineCollection
    - System.Web.Mvc.ControllerBase.Execute(System.Web.Routing.RequestContext)
    - System.Web.Mvc.ControllerBase.System#Web#Mvc#IController#Execute(System.Web.Routing.RequestContext)
    - System.Web.Mvc.ControllerBase.ControllerContext
    - System.Web.Mvc.ControllerBase.TempData
    - System.Web.Mvc.ControllerBase.ValidateRequest
    - System.Web.Mvc.ControllerBase.ValueProvider
    - System.Web.Mvc.ControllerBase.ViewBag
    - System.Web.Mvc.ControllerBase.ViewData
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    attributes:
    - type: System.Web.Mvc.AuthorizeAttribute
      ctor: System.Web.Mvc.AuthorizeAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: BookstoreProject.Controllers.AccountController.#ctor
      commentId: M:BookstoreProject.Controllers.AccountController.#ctor
      language: CSharp
      name:
        CSharp: AccountController()
        VB: AccountController()
      nameWithType:
        CSharp: AccountController.AccountController()
        VB: AccountController.AccountController()
      qualifiedName:
        CSharp: BookstoreProject.Controllers.AccountController.AccountController()
        VB: BookstoreProject.Controllers.AccountController.AccountController()
      type: Constructor
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: .ctor
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\AccountController.cs
        startLine: 20
      syntax:
        content:
          CSharp: public AccountController()
          VB: Public Sub New
      overload: BookstoreProject.Controllers.AccountController.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.AccountController.#ctor(BookstoreProject.ApplicationUserManager,BookstoreProject.ApplicationSignInManager)
      commentId: M:BookstoreProject.Controllers.AccountController.#ctor(BookstoreProject.ApplicationUserManager,BookstoreProject.ApplicationSignInManager)
      language: CSharp
      name:
        CSharp: AccountController(ApplicationUserManager, ApplicationSignInManager)
        VB: AccountController(ApplicationUserManager, ApplicationSignInManager)
      nameWithType:
        CSharp: AccountController.AccountController(ApplicationUserManager, ApplicationSignInManager)
        VB: AccountController.AccountController(ApplicationUserManager, ApplicationSignInManager)
      qualifiedName:
        CSharp: BookstoreProject.Controllers.AccountController.AccountController(BookstoreProject.ApplicationUserManager, BookstoreProject.ApplicationSignInManager)
        VB: BookstoreProject.Controllers.AccountController.AccountController(BookstoreProject.ApplicationUserManager, BookstoreProject.ApplicationSignInManager)
      type: Constructor
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: .ctor
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\AccountController.cs
        startLine: 24
      syntax:
        content:
          CSharp: public AccountController(ApplicationUserManager userManager, ApplicationSignInManager signInManager)
          VB: Public Sub New(userManager As ApplicationUserManager, signInManager As ApplicationSignInManager)
        parameters:
        - id: userManager
          type: BookstoreProject.ApplicationUserManager
        - id: signInManager
          type: BookstoreProject.ApplicationSignInManager
      overload: BookstoreProject.Controllers.AccountController.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.AccountController.SignInManager
      commentId: P:BookstoreProject.Controllers.AccountController.SignInManager
      language: CSharp
      name:
        CSharp: SignInManager
        VB: SignInManager
      nameWithType:
        CSharp: AccountController.SignInManager
        VB: AccountController.SignInManager
      qualifiedName:
        CSharp: BookstoreProject.Controllers.AccountController.SignInManager
        VB: BookstoreProject.Controllers.AccountController.SignInManager
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: SignInManager
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\AccountController.cs
        startLine: 30
      syntax:
        content:
          CSharp: public ApplicationSignInManager SignInManager { get; }
          VB: Public ReadOnly Property SignInManager As ApplicationSignInManager
        parameters: []
        return:
          type: BookstoreProject.ApplicationSignInManager
      overload: BookstoreProject.Controllers.AccountController.SignInManager*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: BookstoreProject.Controllers.AccountController.UserManager
      commentId: P:BookstoreProject.Controllers.AccountController.UserManager
      language: CSharp
      name:
        CSharp: UserManager
        VB: UserManager
      nameWithType:
        CSharp: AccountController.UserManager
        VB: AccountController.UserManager
      qualifiedName:
        CSharp: BookstoreProject.Controllers.AccountController.UserManager
        VB: BookstoreProject.Controllers.AccountController.UserManager
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: UserManager
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\AccountController.cs
        startLine: 42
      syntax:
        content:
          CSharp: public ApplicationUserManager UserManager { get; }
          VB: Public ReadOnly Property UserManager As ApplicationUserManager
        parameters: []
        return:
          type: BookstoreProject.ApplicationUserManager
      overload: BookstoreProject.Controllers.AccountController.UserManager*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: BookstoreProject.Controllers.AccountController.Login(System.String)
      commentId: M:BookstoreProject.Controllers.AccountController.Login(System.String)
      language: CSharp
      name:
        CSharp: Login(String)
        VB: Login(String)
      nameWithType:
        CSharp: AccountController.Login(String)
        VB: AccountController.Login(String)
      qualifiedName:
        CSharp: BookstoreProject.Controllers.AccountController.Login(System.String)
        VB: BookstoreProject.Controllers.AccountController.Login(System.String)
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: Login
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\AccountController.cs
        startLine: 56
      syntax:
        content:
          CSharp: >-
            [AllowAnonymous]

            public ActionResult Login(string returnUrl)
          VB: >-
            <AllowAnonymous>

            Public Function Login(returnUrl As String) As ActionResult
        parameters:
        - id: returnUrl
          type: System.String
        return:
          type: System.Web.Mvc.ActionResult
      overload: BookstoreProject.Controllers.AccountController.Login*
      attributes:
      - type: System.Web.Mvc.AllowAnonymousAttribute
        ctor: System.Web.Mvc.AllowAnonymousAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.AccountController.Login(BookstoreProject.Models.LoginViewModel,System.String)
      commentId: M:BookstoreProject.Controllers.AccountController.Login(BookstoreProject.Models.LoginViewModel,System.String)
      language: CSharp
      name:
        CSharp: Login(LoginViewModel, String)
        VB: Login(LoginViewModel, String)
      nameWithType:
        CSharp: AccountController.Login(LoginViewModel, String)
        VB: AccountController.Login(LoginViewModel, String)
      qualifiedName:
        CSharp: BookstoreProject.Controllers.AccountController.Login(BookstoreProject.Models.LoginViewModel, System.String)
        VB: BookstoreProject.Controllers.AccountController.Login(BookstoreProject.Models.LoginViewModel, System.String)
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: Login
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\AccountController.cs
        startLine: 65
      syntax:
        content:
          CSharp: >-
            [HttpPost]

            [AllowAnonymous]

            [ValidateAntiForgeryToken]

            public Task<ActionResult> Login(LoginViewModel model, string returnUrl)
          VB: >-
            <HttpPost>

            <AllowAnonymous>

            <ValidateAntiForgeryToken>

            Public Function Login(model As LoginViewModel, returnUrl As String) As Task(Of ActionResult)
        parameters:
        - id: model
          type: BookstoreProject.Models.LoginViewModel
        - id: returnUrl
          type: System.String
        return:
          type: System.Threading.Tasks.Task{System.Web.Mvc.ActionResult}
      overload: BookstoreProject.Controllers.AccountController.Login*
      attributes:
      - type: System.Web.Mvc.HttpPostAttribute
        ctor: System.Web.Mvc.HttpPostAttribute.#ctor
        arguments: []
      - type: System.Web.Mvc.AllowAnonymousAttribute
        ctor: System.Web.Mvc.AllowAnonymousAttribute.#ctor
        arguments: []
      - type: System.Web.Mvc.ValidateAntiForgeryTokenAttribute
        ctor: System.Web.Mvc.ValidateAntiForgeryTokenAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.AccountController.VerifyCode(System.String,System.String,System.Boolean)
      commentId: M:BookstoreProject.Controllers.AccountController.VerifyCode(System.String,System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: VerifyCode(String, String, Boolean)
        VB: VerifyCode(String, String, Boolean)
      nameWithType:
        CSharp: AccountController.VerifyCode(String, String, Boolean)
        VB: AccountController.VerifyCode(String, String, Boolean)
      qualifiedName:
        CSharp: BookstoreProject.Controllers.AccountController.VerifyCode(System.String, System.String, System.Boolean)
        VB: BookstoreProject.Controllers.AccountController.VerifyCode(System.String, System.String, System.Boolean)
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: VerifyCode
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\AccountController.cs
        startLine: 95
      syntax:
        content:
          CSharp: >-
            [AllowAnonymous]

            public Task<ActionResult> VerifyCode(string provider, string returnUrl, bool rememberMe)
          VB: >-
            <AllowAnonymous>

            Public Function VerifyCode(provider As String, returnUrl As String, rememberMe As Boolean) As Task(Of ActionResult)
        parameters:
        - id: provider
          type: System.String
        - id: returnUrl
          type: System.String
        - id: rememberMe
          type: System.Boolean
        return:
          type: System.Threading.Tasks.Task{System.Web.Mvc.ActionResult}
      overload: BookstoreProject.Controllers.AccountController.VerifyCode*
      attributes:
      - type: System.Web.Mvc.AllowAnonymousAttribute
        ctor: System.Web.Mvc.AllowAnonymousAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.AccountController.VerifyCode(BookstoreProject.Models.VerifyCodeViewModel)
      commentId: M:BookstoreProject.Controllers.AccountController.VerifyCode(BookstoreProject.Models.VerifyCodeViewModel)
      language: CSharp
      name:
        CSharp: VerifyCode(VerifyCodeViewModel)
        VB: VerifyCode(VerifyCodeViewModel)
      nameWithType:
        CSharp: AccountController.VerifyCode(VerifyCodeViewModel)
        VB: AccountController.VerifyCode(VerifyCodeViewModel)
      qualifiedName:
        CSharp: BookstoreProject.Controllers.AccountController.VerifyCode(BookstoreProject.Models.VerifyCodeViewModel)
        VB: BookstoreProject.Controllers.AccountController.VerifyCode(BookstoreProject.Models.VerifyCodeViewModel)
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: VerifyCode
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\AccountController.cs
        startLine: 108
      syntax:
        content:
          CSharp: >-
            [HttpPost]

            [AllowAnonymous]

            [ValidateAntiForgeryToken]

            public Task<ActionResult> VerifyCode(VerifyCodeViewModel model)
          VB: >-
            <HttpPost>

            <AllowAnonymous>

            <ValidateAntiForgeryToken>

            Public Function VerifyCode(model As VerifyCodeViewModel) As Task(Of ActionResult)
        parameters:
        - id: model
          type: BookstoreProject.Models.VerifyCodeViewModel
        return:
          type: System.Threading.Tasks.Task{System.Web.Mvc.ActionResult}
      overload: BookstoreProject.Controllers.AccountController.VerifyCode*
      attributes:
      - type: System.Web.Mvc.HttpPostAttribute
        ctor: System.Web.Mvc.HttpPostAttribute.#ctor
        arguments: []
      - type: System.Web.Mvc.AllowAnonymousAttribute
        ctor: System.Web.Mvc.AllowAnonymousAttribute.#ctor
        arguments: []
      - type: System.Web.Mvc.ValidateAntiForgeryTokenAttribute
        ctor: System.Web.Mvc.ValidateAntiForgeryTokenAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.AccountController.Register
      commentId: M:BookstoreProject.Controllers.AccountController.Register
      language: CSharp
      name:
        CSharp: Register()
        VB: Register()
      nameWithType:
        CSharp: AccountController.Register()
        VB: AccountController.Register()
      qualifiedName:
        CSharp: BookstoreProject.Controllers.AccountController.Register()
        VB: BookstoreProject.Controllers.AccountController.Register()
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: Register
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\AccountController.cs
        startLine: 138
      syntax:
        content:
          CSharp: >-
            [AllowAnonymous]

            public ActionResult Register()
          VB: >-
            <AllowAnonymous>

            Public Function Register As ActionResult
        return:
          type: System.Web.Mvc.ActionResult
      overload: BookstoreProject.Controllers.AccountController.Register*
      attributes:
      - type: System.Web.Mvc.AllowAnonymousAttribute
        ctor: System.Web.Mvc.AllowAnonymousAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.AccountController.Register(BookstoreProject.Models.RegisterViewModel)
      commentId: M:BookstoreProject.Controllers.AccountController.Register(BookstoreProject.Models.RegisterViewModel)
      language: CSharp
      name:
        CSharp: Register(RegisterViewModel)
        VB: Register(RegisterViewModel)
      nameWithType:
        CSharp: AccountController.Register(RegisterViewModel)
        VB: AccountController.Register(RegisterViewModel)
      qualifiedName:
        CSharp: BookstoreProject.Controllers.AccountController.Register(BookstoreProject.Models.RegisterViewModel)
        VB: BookstoreProject.Controllers.AccountController.Register(BookstoreProject.Models.RegisterViewModel)
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: Register
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\AccountController.cs
        startLine: 146
      syntax:
        content:
          CSharp: >-
            [HttpPost]

            [AllowAnonymous]

            [ValidateAntiForgeryToken]

            public Task<ActionResult> Register(RegisterViewModel model)
          VB: >-
            <HttpPost>

            <AllowAnonymous>

            <ValidateAntiForgeryToken>

            Public Function Register(model As RegisterViewModel) As Task(Of ActionResult)
        parameters:
        - id: model
          type: BookstoreProject.Models.RegisterViewModel
        return:
          type: System.Threading.Tasks.Task{System.Web.Mvc.ActionResult}
      overload: BookstoreProject.Controllers.AccountController.Register*
      attributes:
      - type: System.Web.Mvc.HttpPostAttribute
        ctor: System.Web.Mvc.HttpPostAttribute.#ctor
        arguments: []
      - type: System.Web.Mvc.AllowAnonymousAttribute
        ctor: System.Web.Mvc.AllowAnonymousAttribute.#ctor
        arguments: []
      - type: System.Web.Mvc.ValidateAntiForgeryTokenAttribute
        ctor: System.Web.Mvc.ValidateAntiForgeryTokenAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.AccountController.ConfirmEmail(System.String,System.String)
      commentId: M:BookstoreProject.Controllers.AccountController.ConfirmEmail(System.String,System.String)
      language: CSharp
      name:
        CSharp: ConfirmEmail(String, String)
        VB: ConfirmEmail(String, String)
      nameWithType:
        CSharp: AccountController.ConfirmEmail(String, String)
        VB: AccountController.ConfirmEmail(String, String)
      qualifiedName:
        CSharp: BookstoreProject.Controllers.AccountController.ConfirmEmail(System.String, System.String)
        VB: BookstoreProject.Controllers.AccountController.ConfirmEmail(System.String, System.String)
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: ConfirmEmail
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\AccountController.cs
        startLine: 176
      syntax:
        content:
          CSharp: >-
            [AllowAnonymous]

            public Task<ActionResult> ConfirmEmail(string userId, string code)
          VB: >-
            <AllowAnonymous>

            Public Function ConfirmEmail(userId As String, code As String) As Task(Of ActionResult)
        parameters:
        - id: userId
          type: System.String
        - id: code
          type: System.String
        return:
          type: System.Threading.Tasks.Task{System.Web.Mvc.ActionResult}
      overload: BookstoreProject.Controllers.AccountController.ConfirmEmail*
      attributes:
      - type: System.Web.Mvc.AllowAnonymousAttribute
        ctor: System.Web.Mvc.AllowAnonymousAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.AccountController.ForgotPassword
      commentId: M:BookstoreProject.Controllers.AccountController.ForgotPassword
      language: CSharp
      name:
        CSharp: ForgotPassword()
        VB: ForgotPassword()
      nameWithType:
        CSharp: AccountController.ForgotPassword()
        VB: AccountController.ForgotPassword()
      qualifiedName:
        CSharp: BookstoreProject.Controllers.AccountController.ForgotPassword()
        VB: BookstoreProject.Controllers.AccountController.ForgotPassword()
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: ForgotPassword
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\AccountController.cs
        startLine: 189
      syntax:
        content:
          CSharp: >-
            [AllowAnonymous]

            public ActionResult ForgotPassword()
          VB: >-
            <AllowAnonymous>

            Public Function ForgotPassword As ActionResult
        return:
          type: System.Web.Mvc.ActionResult
      overload: BookstoreProject.Controllers.AccountController.ForgotPassword*
      attributes:
      - type: System.Web.Mvc.AllowAnonymousAttribute
        ctor: System.Web.Mvc.AllowAnonymousAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.AccountController.ForgotPassword(BookstoreProject.Models.ForgotPasswordViewModel)
      commentId: M:BookstoreProject.Controllers.AccountController.ForgotPassword(BookstoreProject.Models.ForgotPasswordViewModel)
      language: CSharp
      name:
        CSharp: ForgotPassword(ForgotPasswordViewModel)
        VB: ForgotPassword(ForgotPasswordViewModel)
      nameWithType:
        CSharp: AccountController.ForgotPassword(ForgotPasswordViewModel)
        VB: AccountController.ForgotPassword(ForgotPasswordViewModel)
      qualifiedName:
        CSharp: BookstoreProject.Controllers.AccountController.ForgotPassword(BookstoreProject.Models.ForgotPasswordViewModel)
        VB: BookstoreProject.Controllers.AccountController.ForgotPassword(BookstoreProject.Models.ForgotPasswordViewModel)
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: ForgotPassword
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\AccountController.cs
        startLine: 197
      syntax:
        content:
          CSharp: >-
            [HttpPost]

            [AllowAnonymous]

            [ValidateAntiForgeryToken]

            public Task<ActionResult> ForgotPassword(ForgotPasswordViewModel model)
          VB: >-
            <HttpPost>

            <AllowAnonymous>

            <ValidateAntiForgeryToken>

            Public Function ForgotPassword(model As ForgotPasswordViewModel) As Task(Of ActionResult)
        parameters:
        - id: model
          type: BookstoreProject.Models.ForgotPasswordViewModel
        return:
          type: System.Threading.Tasks.Task{System.Web.Mvc.ActionResult}
      overload: BookstoreProject.Controllers.AccountController.ForgotPassword*
      attributes:
      - type: System.Web.Mvc.HttpPostAttribute
        ctor: System.Web.Mvc.HttpPostAttribute.#ctor
        arguments: []
      - type: System.Web.Mvc.AllowAnonymousAttribute
        ctor: System.Web.Mvc.AllowAnonymousAttribute.#ctor
        arguments: []
      - type: System.Web.Mvc.ValidateAntiForgeryTokenAttribute
        ctor: System.Web.Mvc.ValidateAntiForgeryTokenAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.AccountController.ForgotPasswordConfirmation
      commentId: M:BookstoreProject.Controllers.AccountController.ForgotPasswordConfirmation
      language: CSharp
      name:
        CSharp: ForgotPasswordConfirmation()
        VB: ForgotPasswordConfirmation()
      nameWithType:
        CSharp: AccountController.ForgotPasswordConfirmation()
        VB: AccountController.ForgotPasswordConfirmation()
      qualifiedName:
        CSharp: BookstoreProject.Controllers.AccountController.ForgotPasswordConfirmation()
        VB: BookstoreProject.Controllers.AccountController.ForgotPasswordConfirmation()
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: ForgotPasswordConfirmation
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\AccountController.cs
        startLine: 225
      syntax:
        content:
          CSharp: >-
            [AllowAnonymous]

            public ActionResult ForgotPasswordConfirmation()
          VB: >-
            <AllowAnonymous>

            Public Function ForgotPasswordConfirmation As ActionResult
        return:
          type: System.Web.Mvc.ActionResult
      overload: BookstoreProject.Controllers.AccountController.ForgotPasswordConfirmation*
      attributes:
      - type: System.Web.Mvc.AllowAnonymousAttribute
        ctor: System.Web.Mvc.AllowAnonymousAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.AccountController.ResetPassword(System.String)
      commentId: M:BookstoreProject.Controllers.AccountController.ResetPassword(System.String)
      language: CSharp
      name:
        CSharp: ResetPassword(String)
        VB: ResetPassword(String)
      nameWithType:
        CSharp: AccountController.ResetPassword(String)
        VB: AccountController.ResetPassword(String)
      qualifiedName:
        CSharp: BookstoreProject.Controllers.AccountController.ResetPassword(System.String)
        VB: BookstoreProject.Controllers.AccountController.ResetPassword(System.String)
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: ResetPassword
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\AccountController.cs
        startLine: 233
      syntax:
        content:
          CSharp: >-
            [AllowAnonymous]

            public ActionResult ResetPassword(string code)
          VB: >-
            <AllowAnonymous>

            Public Function ResetPassword(code As String) As ActionResult
        parameters:
        - id: code
          type: System.String
        return:
          type: System.Web.Mvc.ActionResult
      overload: BookstoreProject.Controllers.AccountController.ResetPassword*
      attributes:
      - type: System.Web.Mvc.AllowAnonymousAttribute
        ctor: System.Web.Mvc.AllowAnonymousAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.AccountController.ResetPassword(BookstoreProject.Models.ResetPasswordViewModel)
      commentId: M:BookstoreProject.Controllers.AccountController.ResetPassword(BookstoreProject.Models.ResetPasswordViewModel)
      language: CSharp
      name:
        CSharp: ResetPassword(ResetPasswordViewModel)
        VB: ResetPassword(ResetPasswordViewModel)
      nameWithType:
        CSharp: AccountController.ResetPassword(ResetPasswordViewModel)
        VB: AccountController.ResetPassword(ResetPasswordViewModel)
      qualifiedName:
        CSharp: BookstoreProject.Controllers.AccountController.ResetPassword(BookstoreProject.Models.ResetPasswordViewModel)
        VB: BookstoreProject.Controllers.AccountController.ResetPassword(BookstoreProject.Models.ResetPasswordViewModel)
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: ResetPassword
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\AccountController.cs
        startLine: 241
      syntax:
        content:
          CSharp: >-
            [HttpPost]

            [AllowAnonymous]

            [ValidateAntiForgeryToken]

            public Task<ActionResult> ResetPassword(ResetPasswordViewModel model)
          VB: >-
            <HttpPost>

            <AllowAnonymous>

            <ValidateAntiForgeryToken>

            Public Function ResetPassword(model As ResetPasswordViewModel) As Task(Of ActionResult)
        parameters:
        - id: model
          type: BookstoreProject.Models.ResetPasswordViewModel
        return:
          type: System.Threading.Tasks.Task{System.Web.Mvc.ActionResult}
      overload: BookstoreProject.Controllers.AccountController.ResetPassword*
      attributes:
      - type: System.Web.Mvc.HttpPostAttribute
        ctor: System.Web.Mvc.HttpPostAttribute.#ctor
        arguments: []
      - type: System.Web.Mvc.AllowAnonymousAttribute
        ctor: System.Web.Mvc.AllowAnonymousAttribute.#ctor
        arguments: []
      - type: System.Web.Mvc.ValidateAntiForgeryTokenAttribute
        ctor: System.Web.Mvc.ValidateAntiForgeryTokenAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.AccountController.ResetPasswordConfirmation
      commentId: M:BookstoreProject.Controllers.AccountController.ResetPasswordConfirmation
      language: CSharp
      name:
        CSharp: ResetPasswordConfirmation()
        VB: ResetPasswordConfirmation()
      nameWithType:
        CSharp: AccountController.ResetPasswordConfirmation()
        VB: AccountController.ResetPasswordConfirmation()
      qualifiedName:
        CSharp: BookstoreProject.Controllers.AccountController.ResetPasswordConfirmation()
        VB: BookstoreProject.Controllers.AccountController.ResetPasswordConfirmation()
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: ResetPasswordConfirmation
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\AccountController.cs
        startLine: 267
      syntax:
        content:
          CSharp: >-
            [AllowAnonymous]

            public ActionResult ResetPasswordConfirmation()
          VB: >-
            <AllowAnonymous>

            Public Function ResetPasswordConfirmation As ActionResult
        return:
          type: System.Web.Mvc.ActionResult
      overload: BookstoreProject.Controllers.AccountController.ResetPasswordConfirmation*
      attributes:
      - type: System.Web.Mvc.AllowAnonymousAttribute
        ctor: System.Web.Mvc.AllowAnonymousAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.AccountController.ExternalLogin(System.String,System.String)
      commentId: M:BookstoreProject.Controllers.AccountController.ExternalLogin(System.String,System.String)
      language: CSharp
      name:
        CSharp: ExternalLogin(String, String)
        VB: ExternalLogin(String, String)
      nameWithType:
        CSharp: AccountController.ExternalLogin(String, String)
        VB: AccountController.ExternalLogin(String, String)
      qualifiedName:
        CSharp: BookstoreProject.Controllers.AccountController.ExternalLogin(System.String, System.String)
        VB: BookstoreProject.Controllers.AccountController.ExternalLogin(System.String, System.String)
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: ExternalLogin
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\AccountController.cs
        startLine: 275
      syntax:
        content:
          CSharp: >-
            [HttpPost]

            [AllowAnonymous]

            [ValidateAntiForgeryToken]

            public ActionResult ExternalLogin(string provider, string returnUrl)
          VB: >-
            <HttpPost>

            <AllowAnonymous>

            <ValidateAntiForgeryToken>

            Public Function ExternalLogin(provider As String, returnUrl As String) As ActionResult
        parameters:
        - id: provider
          type: System.String
        - id: returnUrl
          type: System.String
        return:
          type: System.Web.Mvc.ActionResult
      overload: BookstoreProject.Controllers.AccountController.ExternalLogin*
      attributes:
      - type: System.Web.Mvc.HttpPostAttribute
        ctor: System.Web.Mvc.HttpPostAttribute.#ctor
        arguments: []
      - type: System.Web.Mvc.AllowAnonymousAttribute
        ctor: System.Web.Mvc.AllowAnonymousAttribute.#ctor
        arguments: []
      - type: System.Web.Mvc.ValidateAntiForgeryTokenAttribute
        ctor: System.Web.Mvc.ValidateAntiForgeryTokenAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.AccountController.SendCode(System.String,System.Boolean)
      commentId: M:BookstoreProject.Controllers.AccountController.SendCode(System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: SendCode(String, Boolean)
        VB: SendCode(String, Boolean)
      nameWithType:
        CSharp: AccountController.SendCode(String, Boolean)
        VB: AccountController.SendCode(String, Boolean)
      qualifiedName:
        CSharp: BookstoreProject.Controllers.AccountController.SendCode(System.String, System.Boolean)
        VB: BookstoreProject.Controllers.AccountController.SendCode(System.String, System.Boolean)
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: SendCode
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\AccountController.cs
        startLine: 286
      syntax:
        content:
          CSharp: >-
            [AllowAnonymous]

            public Task<ActionResult> SendCode(string returnUrl, bool rememberMe)
          VB: >-
            <AllowAnonymous>

            Public Function SendCode(returnUrl As String, rememberMe As Boolean) As Task(Of ActionResult)
        parameters:
        - id: returnUrl
          type: System.String
        - id: rememberMe
          type: System.Boolean
        return:
          type: System.Threading.Tasks.Task{System.Web.Mvc.ActionResult}
      overload: BookstoreProject.Controllers.AccountController.SendCode*
      attributes:
      - type: System.Web.Mvc.AllowAnonymousAttribute
        ctor: System.Web.Mvc.AllowAnonymousAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.AccountController.SendCode(BookstoreProject.Models.SendCodeViewModel)
      commentId: M:BookstoreProject.Controllers.AccountController.SendCode(BookstoreProject.Models.SendCodeViewModel)
      language: CSharp
      name:
        CSharp: SendCode(SendCodeViewModel)
        VB: SendCode(SendCodeViewModel)
      nameWithType:
        CSharp: AccountController.SendCode(SendCodeViewModel)
        VB: AccountController.SendCode(SendCodeViewModel)
      qualifiedName:
        CSharp: BookstoreProject.Controllers.AccountController.SendCode(BookstoreProject.Models.SendCodeViewModel)
        VB: BookstoreProject.Controllers.AccountController.SendCode(BookstoreProject.Models.SendCodeViewModel)
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: SendCode
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\AccountController.cs
        startLine: 301
      syntax:
        content:
          CSharp: >-
            [HttpPost]

            [AllowAnonymous]

            [ValidateAntiForgeryToken]

            public Task<ActionResult> SendCode(SendCodeViewModel model)
          VB: >-
            <HttpPost>

            <AllowAnonymous>

            <ValidateAntiForgeryToken>

            Public Function SendCode(model As SendCodeViewModel) As Task(Of ActionResult)
        parameters:
        - id: model
          type: BookstoreProject.Models.SendCodeViewModel
        return:
          type: System.Threading.Tasks.Task{System.Web.Mvc.ActionResult}
      overload: BookstoreProject.Controllers.AccountController.SendCode*
      attributes:
      - type: System.Web.Mvc.HttpPostAttribute
        ctor: System.Web.Mvc.HttpPostAttribute.#ctor
        arguments: []
      - type: System.Web.Mvc.AllowAnonymousAttribute
        ctor: System.Web.Mvc.AllowAnonymousAttribute.#ctor
        arguments: []
      - type: System.Web.Mvc.ValidateAntiForgeryTokenAttribute
        ctor: System.Web.Mvc.ValidateAntiForgeryTokenAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.AccountController.ExternalLoginCallback(System.String)
      commentId: M:BookstoreProject.Controllers.AccountController.ExternalLoginCallback(System.String)
      language: CSharp
      name:
        CSharp: ExternalLoginCallback(String)
        VB: ExternalLoginCallback(String)
      nameWithType:
        CSharp: AccountController.ExternalLoginCallback(String)
        VB: AccountController.ExternalLoginCallback(String)
      qualifiedName:
        CSharp: BookstoreProject.Controllers.AccountController.ExternalLoginCallback(System.String)
        VB: BookstoreProject.Controllers.AccountController.ExternalLoginCallback(System.String)
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: ExternalLoginCallback
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\AccountController.cs
        startLine: 321
      syntax:
        content:
          CSharp: >-
            [AllowAnonymous]

            public Task<ActionResult> ExternalLoginCallback(string returnUrl)
          VB: >-
            <AllowAnonymous>

            Public Function ExternalLoginCallback(returnUrl As String) As Task(Of ActionResult)
        parameters:
        - id: returnUrl
          type: System.String
        return:
          type: System.Threading.Tasks.Task{System.Web.Mvc.ActionResult}
      overload: BookstoreProject.Controllers.AccountController.ExternalLoginCallback*
      attributes:
      - type: System.Web.Mvc.AllowAnonymousAttribute
        ctor: System.Web.Mvc.AllowAnonymousAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.AccountController.ExternalLoginConfirmation(BookstoreProject.Models.ExternalLoginConfirmationViewModel,System.String)
      commentId: M:BookstoreProject.Controllers.AccountController.ExternalLoginConfirmation(BookstoreProject.Models.ExternalLoginConfirmationViewModel,System.String)
      language: CSharp
      name:
        CSharp: ExternalLoginConfirmation(ExternalLoginConfirmationViewModel, String)
        VB: ExternalLoginConfirmation(ExternalLoginConfirmationViewModel, String)
      nameWithType:
        CSharp: AccountController.ExternalLoginConfirmation(ExternalLoginConfirmationViewModel, String)
        VB: AccountController.ExternalLoginConfirmation(ExternalLoginConfirmationViewModel, String)
      qualifiedName:
        CSharp: BookstoreProject.Controllers.AccountController.ExternalLoginConfirmation(BookstoreProject.Models.ExternalLoginConfirmationViewModel, System.String)
        VB: BookstoreProject.Controllers.AccountController.ExternalLoginConfirmation(BookstoreProject.Models.ExternalLoginConfirmationViewModel, System.String)
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: ExternalLoginConfirmation
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\AccountController.cs
        startLine: 351
      syntax:
        content:
          CSharp: >-
            [HttpPost]

            [AllowAnonymous]

            [ValidateAntiForgeryToken]

            public Task<ActionResult> ExternalLoginConfirmation(ExternalLoginConfirmationViewModel model, string returnUrl)
          VB: >-
            <HttpPost>

            <AllowAnonymous>

            <ValidateAntiForgeryToken>

            Public Function ExternalLoginConfirmation(model As ExternalLoginConfirmationViewModel, returnUrl As String) As Task(Of ActionResult)
        parameters:
        - id: model
          type: BookstoreProject.Models.ExternalLoginConfirmationViewModel
        - id: returnUrl
          type: System.String
        return:
          type: System.Threading.Tasks.Task{System.Web.Mvc.ActionResult}
      overload: BookstoreProject.Controllers.AccountController.ExternalLoginConfirmation*
      attributes:
      - type: System.Web.Mvc.HttpPostAttribute
        ctor: System.Web.Mvc.HttpPostAttribute.#ctor
        arguments: []
      - type: System.Web.Mvc.AllowAnonymousAttribute
        ctor: System.Web.Mvc.AllowAnonymousAttribute.#ctor
        arguments: []
      - type: System.Web.Mvc.ValidateAntiForgeryTokenAttribute
        ctor: System.Web.Mvc.ValidateAntiForgeryTokenAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.AccountController.LogOff
      commentId: M:BookstoreProject.Controllers.AccountController.LogOff
      language: CSharp
      name:
        CSharp: LogOff()
        VB: LogOff()
      nameWithType:
        CSharp: AccountController.LogOff()
        VB: AccountController.LogOff()
      qualifiedName:
        CSharp: BookstoreProject.Controllers.AccountController.LogOff()
        VB: BookstoreProject.Controllers.AccountController.LogOff()
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: LogOff
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\AccountController.cs
        startLine: 389
      syntax:
        content:
          CSharp: >-
            [HttpPost]

            [ValidateAntiForgeryToken]

            public ActionResult LogOff()
          VB: >-
            <HttpPost>

            <ValidateAntiForgeryToken>

            Public Function LogOff As ActionResult
        return:
          type: System.Web.Mvc.ActionResult
      overload: BookstoreProject.Controllers.AccountController.LogOff*
      attributes:
      - type: System.Web.Mvc.HttpPostAttribute
        ctor: System.Web.Mvc.HttpPostAttribute.#ctor
        arguments: []
      - type: System.Web.Mvc.ValidateAntiForgeryTokenAttribute
        ctor: System.Web.Mvc.ValidateAntiForgeryTokenAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.AccountController.ExternalLoginFailure
      commentId: M:BookstoreProject.Controllers.AccountController.ExternalLoginFailure
      language: CSharp
      name:
        CSharp: ExternalLoginFailure()
        VB: ExternalLoginFailure()
      nameWithType:
        CSharp: AccountController.ExternalLoginFailure()
        VB: AccountController.ExternalLoginFailure()
      qualifiedName:
        CSharp: BookstoreProject.Controllers.AccountController.ExternalLoginFailure()
        VB: BookstoreProject.Controllers.AccountController.ExternalLoginFailure()
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: ExternalLoginFailure
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\AccountController.cs
        startLine: 399
      syntax:
        content:
          CSharp: >-
            [AllowAnonymous]

            public ActionResult ExternalLoginFailure()
          VB: >-
            <AllowAnonymous>

            Public Function ExternalLoginFailure As ActionResult
        return:
          type: System.Web.Mvc.ActionResult
      overload: BookstoreProject.Controllers.AccountController.ExternalLoginFailure*
      attributes:
      - type: System.Web.Mvc.AllowAnonymousAttribute
        ctor: System.Web.Mvc.AllowAnonymousAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.AccountController.Dispose(System.Boolean)
      commentId: M:BookstoreProject.Controllers.AccountController.Dispose(System.Boolean)
      language: CSharp
      name:
        CSharp: Dispose(Boolean)
        VB: Dispose(Boolean)
      nameWithType:
        CSharp: AccountController.Dispose(Boolean)
        VB: AccountController.Dispose(Boolean)
      qualifiedName:
        CSharp: BookstoreProject.Controllers.AccountController.Dispose(System.Boolean)
        VB: BookstoreProject.Controllers.AccountController.Dispose(System.Boolean)
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: Dispose
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\AccountController.cs
        startLine: 405
      syntax:
        content:
          CSharp: protected override void Dispose(bool disposing)
          VB: Protected Overrides Sub Dispose(disposing As Boolean)
        parameters:
        - id: disposing
          type: System.Boolean
      overload: BookstoreProject.Controllers.AccountController.Dispose*
      overridden: System.Web.Mvc.Controller.Dispose(System.Boolean)
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: BookstoreProject.Controllers.BooksController
    commentId: T:BookstoreProject.Controllers.BooksController
    language: CSharp
    name:
      CSharp: BooksController
      VB: BooksController
    nameWithType:
      CSharp: BooksController
      VB: BooksController
    qualifiedName:
      CSharp: BookstoreProject.Controllers.BooksController
      VB: BookstoreProject.Controllers.BooksController
    type: Class
    assemblies:
    - BookstoreProject
    namespace: BookstoreProject.Controllers
    source:
      id: BooksController
      path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\BooksController.cs
      startLine: 12
    syntax:
      content:
        CSharp: >-
          [Authorize]

          public class BooksController : Controller, IActionFilter, IAuthenticationFilter, IAuthorizationFilter, IDisposable, IExceptionFilter, IResultFilter, IAsyncController, IController, IAsyncManagerContainer
        VB: >-
          <Authorize>

          Public Class BooksController

              Inherits Controller

              Implements IActionFilter, IAuthenticationFilter, IAuthorizationFilter, IDisposable, IExceptionFilter, IResultFilter, IAsyncController, IController, IAsyncManagerContainer
    inheritance:
    - System.Object
    - System.Web.Mvc.ControllerBase
    - System.Web.Mvc.Controller
    implements:
    - System.Web.Mvc.IActionFilter
    - System.Web.Mvc.Filters.IAuthenticationFilter
    - System.Web.Mvc.IAuthorizationFilter
    - System.IDisposable
    - System.Web.Mvc.IExceptionFilter
    - System.Web.Mvc.IResultFilter
    - System.Web.Mvc.Async.IAsyncController
    - System.Web.Mvc.IController
    - System.Web.Mvc.Async.IAsyncManagerContainer
    inheritedMembers:
    - System.Web.Mvc.Controller.Content(System.String)
    - System.Web.Mvc.Controller.Content(System.String,System.String)
    - System.Web.Mvc.Controller.Content(System.String,System.String,System.Text.Encoding)
    - System.Web.Mvc.Controller.CreateActionInvoker
    - System.Web.Mvc.Controller.CreateTempDataProvider
    - System.Web.Mvc.Controller.Dispose
    - System.Web.Mvc.Controller.ExecuteCore
    - System.Web.Mvc.Controller.File(System.Byte[],System.String)
    - System.Web.Mvc.Controller.File(System.Byte[],System.String,System.String)
    - System.Web.Mvc.Controller.File(System.IO.Stream,System.String)
    - System.Web.Mvc.Controller.File(System.IO.Stream,System.String,System.String)
    - System.Web.Mvc.Controller.File(System.String,System.String)
    - System.Web.Mvc.Controller.File(System.String,System.String,System.String)
    - System.Web.Mvc.Controller.HandleUnknownAction(System.String)
    - System.Web.Mvc.Controller.HttpNotFound
    - System.Web.Mvc.Controller.HttpNotFound(System.String)
    - System.Web.Mvc.Controller.JavaScript(System.String)
    - System.Web.Mvc.Controller.Json(System.Object)
    - System.Web.Mvc.Controller.Json(System.Object,System.String)
    - System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding)
    - System.Web.Mvc.Controller.Json(System.Object,System.Web.Mvc.JsonRequestBehavior)
    - System.Web.Mvc.Controller.Json(System.Object,System.String,System.Web.Mvc.JsonRequestBehavior)
    - System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding,System.Web.Mvc.JsonRequestBehavior)
    - System.Web.Mvc.Controller.Initialize(System.Web.Routing.RequestContext)
    - System.Web.Mvc.Controller.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)
    - System.Web.Mvc.Controller.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)
    - System.Web.Mvc.Controller.OnAuthentication(System.Web.Mvc.Filters.AuthenticationContext)
    - System.Web.Mvc.Controller.OnAuthenticationChallenge(System.Web.Mvc.Filters.AuthenticationChallengeContext)
    - System.Web.Mvc.Controller.OnAuthorization(System.Web.Mvc.AuthorizationContext)
    - System.Web.Mvc.Controller.OnException(System.Web.Mvc.ExceptionContext)
    - System.Web.Mvc.Controller.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)
    - System.Web.Mvc.Controller.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)
    - System.Web.Mvc.Controller.PartialView
    - System.Web.Mvc.Controller.PartialView(System.Object)
    - System.Web.Mvc.Controller.PartialView(System.String)
    - System.Web.Mvc.Controller.PartialView(System.String,System.Object)
    - System.Web.Mvc.Controller.Redirect(System.String)
    - System.Web.Mvc.Controller.RedirectPermanent(System.String)
    - System.Web.Mvc.Controller.RedirectToAction(System.String)
    - System.Web.Mvc.Controller.RedirectToAction(System.String,System.Object)
    - System.Web.Mvc.Controller.RedirectToAction(System.String,System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.RedirectToAction(System.String,System.String)
    - System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Object)
    - System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.RedirectToActionPermanent(System.String)
    - System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.Object)
    - System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String)
    - System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String,System.Object)
    - System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String,System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.RedirectToRoute(System.Object)
    - System.Web.Mvc.Controller.RedirectToRoute(System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.RedirectToRoute(System.String)
    - System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Object)
    - System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Object)
    - System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String)
    - System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String,System.Object)
    - System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel})
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String)
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String[])
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String,System.String[])
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String,System.String[],System.String[])
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String,System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String[],System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String,System.String[],System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.TryValidateModel(System.Object)
    - System.Web.Mvc.Controller.TryValidateModel(System.Object,System.String)
    - System.Web.Mvc.Controller.UpdateModel``1({TModel})
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String)
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String[])
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String,System.String[])
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String,System.String[],System.String[])
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String,System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String[],System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String,System.String[],System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.ValidateModel(System.Object)
    - System.Web.Mvc.Controller.ValidateModel(System.Object,System.String)
    - System.Web.Mvc.Controller.View
    - System.Web.Mvc.Controller.View(System.Object)
    - System.Web.Mvc.Controller.View(System.String)
    - System.Web.Mvc.Controller.View(System.String,System.String)
    - System.Web.Mvc.Controller.View(System.String,System.Object)
    - System.Web.Mvc.Controller.View(System.String,System.String,System.Object)
    - System.Web.Mvc.Controller.View(System.Web.Mvc.IView)
    - System.Web.Mvc.Controller.View(System.Web.Mvc.IView,System.Object)
    - System.Web.Mvc.Controller.System#Web#Mvc#Async#IAsyncController#BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)
    - System.Web.Mvc.Controller.System#Web#Mvc#Async#IAsyncController#EndExecute(System.IAsyncResult)
    - System.Web.Mvc.Controller.BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)
    - System.Web.Mvc.Controller.BeginExecuteCore(System.AsyncCallback,System.Object)
    - System.Web.Mvc.Controller.EndExecute(System.IAsyncResult)
    - System.Web.Mvc.Controller.EndExecuteCore(System.IAsyncResult)
    - System.Web.Mvc.Controller.System#Web#Mvc#IActionFilter#OnActionExecuting(System.Web.Mvc.ActionExecutingContext)
    - System.Web.Mvc.Controller.System#Web#Mvc#IActionFilter#OnActionExecuted(System.Web.Mvc.ActionExecutedContext)
    - System.Web.Mvc.Controller.System#Web#Mvc#Filters#IAuthenticationFilter#OnAuthentication(System.Web.Mvc.Filters.AuthenticationContext)
    - System.Web.Mvc.Controller.System#Web#Mvc#Filters#IAuthenticationFilter#OnAuthenticationChallenge(System.Web.Mvc.Filters.AuthenticationChallengeContext)
    - System.Web.Mvc.Controller.System#Web#Mvc#IAuthorizationFilter#OnAuthorization(System.Web.Mvc.AuthorizationContext)
    - System.Web.Mvc.Controller.System#Web#Mvc#IExceptionFilter#OnException(System.Web.Mvc.ExceptionContext)
    - System.Web.Mvc.Controller.System#Web#Mvc#IResultFilter#OnResultExecuting(System.Web.Mvc.ResultExecutingContext)
    - System.Web.Mvc.Controller.System#Web#Mvc#IResultFilter#OnResultExecuted(System.Web.Mvc.ResultExecutedContext)
    - System.Web.Mvc.Controller.Resolver
    - System.Web.Mvc.Controller.AsyncManager
    - System.Web.Mvc.Controller.DisableAsyncSupport
    - System.Web.Mvc.Controller.ActionInvoker
    - System.Web.Mvc.Controller.Binders
    - System.Web.Mvc.Controller.HttpContext
    - System.Web.Mvc.Controller.ModelState
    - System.Web.Mvc.Controller.Profile
    - System.Web.Mvc.Controller.Request
    - System.Web.Mvc.Controller.Response
    - System.Web.Mvc.Controller.RouteData
    - System.Web.Mvc.Controller.Server
    - System.Web.Mvc.Controller.Session
    - System.Web.Mvc.Controller.TempDataProvider
    - System.Web.Mvc.Controller.Url
    - System.Web.Mvc.Controller.User
    - System.Web.Mvc.Controller.ViewEngineCollection
    - System.Web.Mvc.ControllerBase.Execute(System.Web.Routing.RequestContext)
    - System.Web.Mvc.ControllerBase.System#Web#Mvc#IController#Execute(System.Web.Routing.RequestContext)
    - System.Web.Mvc.ControllerBase.ControllerContext
    - System.Web.Mvc.ControllerBase.TempData
    - System.Web.Mvc.ControllerBase.ValidateRequest
    - System.Web.Mvc.ControllerBase.ValueProvider
    - System.Web.Mvc.ControllerBase.ViewBag
    - System.Web.Mvc.ControllerBase.ViewData
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    attributes:
    - type: System.Web.Mvc.AuthorizeAttribute
      ctor: System.Web.Mvc.AuthorizeAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: BookstoreProject.Controllers.BooksController.Index
      commentId: M:BookstoreProject.Controllers.BooksController.Index
      language: CSharp
      name:
        CSharp: Index()
        VB: Index()
      nameWithType:
        CSharp: BooksController.Index()
        VB: BooksController.Index()
      qualifiedName:
        CSharp: BookstoreProject.Controllers.BooksController.Index()
        VB: BookstoreProject.Controllers.BooksController.Index()
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: Index
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\BooksController.cs
        startLine: 26
      summary: "\nActionResult which returns a index of Books\n"
      example: []
      syntax:
        content:
          CSharp: public ActionResult Index()
          VB: Public Function Index As ActionResult
        return:
          type: System.Web.Mvc.ActionResult
          description: "\nThe list of Books\n"
      overload: BookstoreProject.Controllers.BooksController.Index*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.BooksController.Details(System.Nullable{System.Int32})
      commentId: M:BookstoreProject.Controllers.BooksController.Details(System.Nullable{System.Int32})
      language: CSharp
      name:
        CSharp: Details(Nullable<Int32>)
        VB: Details(Nullable(Of Int32))
      nameWithType:
        CSharp: BooksController.Details(Nullable<Int32>)
        VB: BooksController.Details(Nullable(Of Int32))
      qualifiedName:
        CSharp: BookstoreProject.Controllers.BooksController.Details(System.Nullable<System.Int32>)
        VB: BookstoreProject.Controllers.BooksController.Details(System.Nullable(Of System.Int32))
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: Details
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\BooksController.cs
        startLine: 41
      summary: "\nDetails which returns an a View of individual book details\n"
      example: []
      syntax:
        content:
          CSharp: public ActionResult Details(int? id)
          VB: Public Function Details(id As Integer?) As ActionResult
        parameters:
        - id: id
          type: System.Nullable{System.Int32}
          description: ''
        return:
          type: System.Web.Mvc.ActionResult
          description: "\nStatus code if id is null\nif there is no book associated with the given id and HTTPNotFound will be returned\nelse details of a book will be returned\n"
      overload: BookstoreProject.Controllers.BooksController.Details*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.BooksController.Create
      commentId: M:BookstoreProject.Controllers.BooksController.Create
      language: CSharp
      name:
        CSharp: Create()
        VB: Create()
      nameWithType:
        CSharp: BooksController.Create()
        VB: BooksController.Create()
      qualifiedName:
        CSharp: BookstoreProject.Controllers.BooksController.Create()
        VB: BookstoreProject.Controllers.BooksController.Create()
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: Create
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\BooksController.cs
        startLine: 62
      summary: "\nCreate method with return type ActionResult\n"
      example: []
      syntax:
        content:
          CSharp: public ActionResult Create()
          VB: Public Function Create As ActionResult
        return:
          type: System.Web.Mvc.ActionResult
          description: "\nReturns a create view\n"
      overload: BookstoreProject.Controllers.BooksController.Create*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.BooksController.Create(BookstoreProject.Models.Book)
      commentId: M:BookstoreProject.Controllers.BooksController.Create(BookstoreProject.Models.Book)
      language: CSharp
      name:
        CSharp: Create(Book)
        VB: Create(Book)
      nameWithType:
        CSharp: BooksController.Create(Book)
        VB: BooksController.Create(Book)
      qualifiedName:
        CSharp: BookstoreProject.Controllers.BooksController.Create(BookstoreProject.Models.Book)
        VB: BookstoreProject.Controllers.BooksController.Create(BookstoreProject.Models.Book)
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: Create
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\BooksController.cs
        startLine: 79
      summary: "\nSaves the creation of a book to database\n"
      example: []
      syntax:
        content:
          CSharp: >-
            [HttpPost]

            [ValidateAntiForgeryToken]

            public ActionResult Create([Bind(Include = "ID,Title,Author,Price,ReleaseDate")] Book book)
          VB: >-
            <HttpPost>

            <ValidateAntiForgeryToken>

            Public Function Create(book As Book) As ActionResult
        parameters:
        - id: book
          type: BookstoreProject.Models.Book
          description: ''
          attributes:
          - type: System.Web.Mvc.BindAttribute
            ctor: System.Web.Mvc.BindAttribute.#ctor
            arguments: []
            namedArguments:
            - name: Include
              type: System.String
              value: ID,Title,Author,Price,ReleaseDate
        return:
          type: System.Web.Mvc.ActionResult
          description: "\nIf model is valid \nredirects to index action\nelse redisplay the current view with the same book object.\n"
      overload: BookstoreProject.Controllers.BooksController.Create*
      attributes:
      - type: System.Web.Mvc.HttpPostAttribute
        ctor: System.Web.Mvc.HttpPostAttribute.#ctor
        arguments: []
      - type: System.Web.Mvc.ValidateAntiForgeryTokenAttribute
        ctor: System.Web.Mvc.ValidateAntiForgeryTokenAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.BooksController.Edit(System.Nullable{System.Int32})
      commentId: M:BookstoreProject.Controllers.BooksController.Edit(System.Nullable{System.Int32})
      language: CSharp
      name:
        CSharp: Edit(Nullable<Int32>)
        VB: Edit(Nullable(Of Int32))
      nameWithType:
        CSharp: BooksController.Edit(Nullable<Int32>)
        VB: BooksController.Edit(Nullable(Of Int32))
      qualifiedName:
        CSharp: BookstoreProject.Controllers.BooksController.Edit(System.Nullable<System.Int32>)
        VB: BookstoreProject.Controllers.BooksController.Edit(System.Nullable(Of System.Int32))
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: Edit
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\BooksController.cs
        startLine: 103
      summary: "\nAllows editing of a book\n"
      example: []
      syntax:
        content:
          CSharp: public ActionResult Edit(int? id)
          VB: Public Function Edit(id As Integer?) As ActionResult
        parameters:
        - id: id
          type: System.Nullable{System.Int32}
          description: ''
        return:
          type: System.Web.Mvc.ActionResult
          description: "\nStatus code if id is null\nif there is no book associated with the given id and HTTPNotFound will be returned\nelse a view will return with the given book\n"
      overload: BookstoreProject.Controllers.BooksController.Edit*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.BooksController.Edit(BookstoreProject.Models.Book)
      commentId: M:BookstoreProject.Controllers.BooksController.Edit(BookstoreProject.Models.Book)
      language: CSharp
      name:
        CSharp: Edit(Book)
        VB: Edit(Book)
      nameWithType:
        CSharp: BooksController.Edit(Book)
        VB: BooksController.Edit(Book)
      qualifiedName:
        CSharp: BookstoreProject.Controllers.BooksController.Edit(BookstoreProject.Models.Book)
        VB: BookstoreProject.Controllers.BooksController.Edit(BookstoreProject.Models.Book)
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: Edit
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\BooksController.cs
        startLine: 129
      summary: "\nEdit method which returns an ActionResult\n"
      example: []
      syntax:
        content:
          CSharp: >-
            [HttpPost]

            [ValidateAntiForgeryToken]

            public ActionResult Edit([Bind(Include = "ID,Title,Author,Price,ReleaseDate")] Book book)
          VB: >-
            <HttpPost>

            <ValidateAntiForgeryToken>

            Public Function Edit(book As Book) As ActionResult
        parameters:
        - id: book
          type: BookstoreProject.Models.Book
          description: ''
          attributes:
          - type: System.Web.Mvc.BindAttribute
            ctor: System.Web.Mvc.BindAttribute.#ctor
            arguments: []
            namedArguments:
            - name: Include
              type: System.String
              value: ID,Title,Author,Price,ReleaseDate
        return:
          type: System.Web.Mvc.ActionResult
          description: "\nIf model is valid \nredirects to index action\nelse redisplay the current view with the same book object.\n"
      overload: BookstoreProject.Controllers.BooksController.Edit*
      attributes:
      - type: System.Web.Mvc.HttpPostAttribute
        ctor: System.Web.Mvc.HttpPostAttribute.#ctor
        arguments: []
      - type: System.Web.Mvc.ValidateAntiForgeryTokenAttribute
        ctor: System.Web.Mvc.ValidateAntiForgeryTokenAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.BooksController.Delete(System.Nullable{System.Int32})
      commentId: M:BookstoreProject.Controllers.BooksController.Delete(System.Nullable{System.Int32})
      language: CSharp
      name:
        CSharp: Delete(Nullable<Int32>)
        VB: Delete(Nullable(Of Int32))
      nameWithType:
        CSharp: BooksController.Delete(Nullable<Int32>)
        VB: BooksController.Delete(Nullable(Of Int32))
      qualifiedName:
        CSharp: BookstoreProject.Controllers.BooksController.Delete(System.Nullable<System.Int32>)
        VB: BookstoreProject.Controllers.BooksController.Delete(System.Nullable(Of System.Int32))
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: Delete
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\BooksController.cs
        startLine: 152
      summary: "\nDelete to remove the specfied book by id\n"
      example: []
      syntax:
        content:
          CSharp: public ActionResult Delete(int? id)
          VB: Public Function Delete(id As Integer?) As ActionResult
        parameters:
        - id: id
          type: System.Nullable{System.Int32}
          description: ''
        return:
          type: System.Web.Mvc.ActionResult
          description: "\nStatus code if id is null\nif there is no book associated with the given id and HTTPNotFound will be returned\nelse a view will return with the given book\n"
      overload: BookstoreProject.Controllers.BooksController.Delete*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.BooksController.DeleteConfirmed(System.Int32)
      commentId: M:BookstoreProject.Controllers.BooksController.DeleteConfirmed(System.Int32)
      language: CSharp
      name:
        CSharp: DeleteConfirmed(Int32)
        VB: DeleteConfirmed(Int32)
      nameWithType:
        CSharp: BooksController.DeleteConfirmed(Int32)
        VB: BooksController.DeleteConfirmed(Int32)
      qualifiedName:
        CSharp: BookstoreProject.Controllers.BooksController.DeleteConfirmed(System.Int32)
        VB: BookstoreProject.Controllers.BooksController.DeleteConfirmed(System.Int32)
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: DeleteConfirmed
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\BooksController.cs
        startLine: 174
      summary: "\nConfirms deletion of a book\n"
      example: []
      syntax:
        content:
          CSharp: >-
            [HttpPost]

            [ActionName("Delete")]

            [ValidateAntiForgeryToken]

            public ActionResult DeleteConfirmed(int id)
          VB: >-
            <HttpPost>

            <ActionName("Delete")>

            <ValidateAntiForgeryToken>

            Public Function DeleteConfirmed(id As Integer) As ActionResult
        parameters:
        - id: id
          type: System.Int32
          description: ''
        return:
          type: System.Web.Mvc.ActionResult
          description: "\nRedirection to index action\n"
      overload: BookstoreProject.Controllers.BooksController.DeleteConfirmed*
      attributes:
      - type: System.Web.Mvc.HttpPostAttribute
        ctor: System.Web.Mvc.HttpPostAttribute.#ctor
        arguments: []
      - type: System.Web.Mvc.ActionNameAttribute
        ctor: System.Web.Mvc.ActionNameAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: Delete
      - type: System.Web.Mvc.ValidateAntiForgeryTokenAttribute
        ctor: System.Web.Mvc.ValidateAntiForgeryTokenAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.BooksController.Dispose(System.Boolean)
      commentId: M:BookstoreProject.Controllers.BooksController.Dispose(System.Boolean)
      language: CSharp
      name:
        CSharp: Dispose(Boolean)
        VB: Dispose(Boolean)
      nameWithType:
        CSharp: BooksController.Dispose(Boolean)
        VB: BooksController.Dispose(Boolean)
      qualifiedName:
        CSharp: BookstoreProject.Controllers.BooksController.Dispose(System.Boolean)
        VB: BookstoreProject.Controllers.BooksController.Dispose(System.Boolean)
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: Dispose
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\BooksController.cs
        startLine: 184
      syntax:
        content:
          CSharp: protected override void Dispose(bool disposing)
          VB: Protected Overrides Sub Dispose(disposing As Boolean)
        parameters:
        - id: disposing
          type: System.Boolean
      overload: BookstoreProject.Controllers.BooksController.Dispose*
      overridden: System.Web.Mvc.Controller.Dispose(System.Boolean)
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: BookstoreProject.Controllers.HomeController
    commentId: T:BookstoreProject.Controllers.HomeController
    language: CSharp
    name:
      CSharp: HomeController
      VB: HomeController
    nameWithType:
      CSharp: HomeController
      VB: HomeController
    qualifiedName:
      CSharp: BookstoreProject.Controllers.HomeController
      VB: BookstoreProject.Controllers.HomeController
    type: Class
    assemblies:
    - BookstoreProject
    namespace: BookstoreProject.Controllers
    source:
      id: HomeController
      path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\HomeController.cs
      startLine: 10
    syntax:
      content:
        CSharp: 'public class HomeController : Controller, IActionFilter, IAuthenticationFilter, IAuthorizationFilter, IDisposable, IExceptionFilter, IResultFilter, IAsyncController, IController, IAsyncManagerContainer'
        VB: >-
          Public Class HomeController

              Inherits Controller

              Implements IActionFilter, IAuthenticationFilter, IAuthorizationFilter, IDisposable, IExceptionFilter, IResultFilter, IAsyncController, IController, IAsyncManagerContainer
    inheritance:
    - System.Object
    - System.Web.Mvc.ControllerBase
    - System.Web.Mvc.Controller
    implements:
    - System.Web.Mvc.IActionFilter
    - System.Web.Mvc.Filters.IAuthenticationFilter
    - System.Web.Mvc.IAuthorizationFilter
    - System.IDisposable
    - System.Web.Mvc.IExceptionFilter
    - System.Web.Mvc.IResultFilter
    - System.Web.Mvc.Async.IAsyncController
    - System.Web.Mvc.IController
    - System.Web.Mvc.Async.IAsyncManagerContainer
    inheritedMembers:
    - System.Web.Mvc.Controller.Content(System.String)
    - System.Web.Mvc.Controller.Content(System.String,System.String)
    - System.Web.Mvc.Controller.Content(System.String,System.String,System.Text.Encoding)
    - System.Web.Mvc.Controller.CreateActionInvoker
    - System.Web.Mvc.Controller.CreateTempDataProvider
    - System.Web.Mvc.Controller.Dispose
    - System.Web.Mvc.Controller.Dispose(System.Boolean)
    - System.Web.Mvc.Controller.ExecuteCore
    - System.Web.Mvc.Controller.File(System.Byte[],System.String)
    - System.Web.Mvc.Controller.File(System.Byte[],System.String,System.String)
    - System.Web.Mvc.Controller.File(System.IO.Stream,System.String)
    - System.Web.Mvc.Controller.File(System.IO.Stream,System.String,System.String)
    - System.Web.Mvc.Controller.File(System.String,System.String)
    - System.Web.Mvc.Controller.File(System.String,System.String,System.String)
    - System.Web.Mvc.Controller.HandleUnknownAction(System.String)
    - System.Web.Mvc.Controller.HttpNotFound
    - System.Web.Mvc.Controller.HttpNotFound(System.String)
    - System.Web.Mvc.Controller.JavaScript(System.String)
    - System.Web.Mvc.Controller.Json(System.Object)
    - System.Web.Mvc.Controller.Json(System.Object,System.String)
    - System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding)
    - System.Web.Mvc.Controller.Json(System.Object,System.Web.Mvc.JsonRequestBehavior)
    - System.Web.Mvc.Controller.Json(System.Object,System.String,System.Web.Mvc.JsonRequestBehavior)
    - System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding,System.Web.Mvc.JsonRequestBehavior)
    - System.Web.Mvc.Controller.Initialize(System.Web.Routing.RequestContext)
    - System.Web.Mvc.Controller.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)
    - System.Web.Mvc.Controller.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)
    - System.Web.Mvc.Controller.OnAuthentication(System.Web.Mvc.Filters.AuthenticationContext)
    - System.Web.Mvc.Controller.OnAuthenticationChallenge(System.Web.Mvc.Filters.AuthenticationChallengeContext)
    - System.Web.Mvc.Controller.OnAuthorization(System.Web.Mvc.AuthorizationContext)
    - System.Web.Mvc.Controller.OnException(System.Web.Mvc.ExceptionContext)
    - System.Web.Mvc.Controller.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)
    - System.Web.Mvc.Controller.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)
    - System.Web.Mvc.Controller.PartialView
    - System.Web.Mvc.Controller.PartialView(System.Object)
    - System.Web.Mvc.Controller.PartialView(System.String)
    - System.Web.Mvc.Controller.PartialView(System.String,System.Object)
    - System.Web.Mvc.Controller.Redirect(System.String)
    - System.Web.Mvc.Controller.RedirectPermanent(System.String)
    - System.Web.Mvc.Controller.RedirectToAction(System.String)
    - System.Web.Mvc.Controller.RedirectToAction(System.String,System.Object)
    - System.Web.Mvc.Controller.RedirectToAction(System.String,System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.RedirectToAction(System.String,System.String)
    - System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Object)
    - System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.RedirectToActionPermanent(System.String)
    - System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.Object)
    - System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String)
    - System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String,System.Object)
    - System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String,System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.RedirectToRoute(System.Object)
    - System.Web.Mvc.Controller.RedirectToRoute(System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.RedirectToRoute(System.String)
    - System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Object)
    - System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Object)
    - System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String)
    - System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String,System.Object)
    - System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel})
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String)
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String[])
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String,System.String[])
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String,System.String[],System.String[])
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String,System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String[],System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String,System.String[],System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.TryValidateModel(System.Object)
    - System.Web.Mvc.Controller.TryValidateModel(System.Object,System.String)
    - System.Web.Mvc.Controller.UpdateModel``1({TModel})
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String)
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String[])
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String,System.String[])
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String,System.String[],System.String[])
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String,System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String[],System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String,System.String[],System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.ValidateModel(System.Object)
    - System.Web.Mvc.Controller.ValidateModel(System.Object,System.String)
    - System.Web.Mvc.Controller.View
    - System.Web.Mvc.Controller.View(System.Object)
    - System.Web.Mvc.Controller.View(System.String)
    - System.Web.Mvc.Controller.View(System.String,System.String)
    - System.Web.Mvc.Controller.View(System.String,System.Object)
    - System.Web.Mvc.Controller.View(System.String,System.String,System.Object)
    - System.Web.Mvc.Controller.View(System.Web.Mvc.IView)
    - System.Web.Mvc.Controller.View(System.Web.Mvc.IView,System.Object)
    - System.Web.Mvc.Controller.System#Web#Mvc#Async#IAsyncController#BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)
    - System.Web.Mvc.Controller.System#Web#Mvc#Async#IAsyncController#EndExecute(System.IAsyncResult)
    - System.Web.Mvc.Controller.BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)
    - System.Web.Mvc.Controller.BeginExecuteCore(System.AsyncCallback,System.Object)
    - System.Web.Mvc.Controller.EndExecute(System.IAsyncResult)
    - System.Web.Mvc.Controller.EndExecuteCore(System.IAsyncResult)
    - System.Web.Mvc.Controller.System#Web#Mvc#IActionFilter#OnActionExecuting(System.Web.Mvc.ActionExecutingContext)
    - System.Web.Mvc.Controller.System#Web#Mvc#IActionFilter#OnActionExecuted(System.Web.Mvc.ActionExecutedContext)
    - System.Web.Mvc.Controller.System#Web#Mvc#Filters#IAuthenticationFilter#OnAuthentication(System.Web.Mvc.Filters.AuthenticationContext)
    - System.Web.Mvc.Controller.System#Web#Mvc#Filters#IAuthenticationFilter#OnAuthenticationChallenge(System.Web.Mvc.Filters.AuthenticationChallengeContext)
    - System.Web.Mvc.Controller.System#Web#Mvc#IAuthorizationFilter#OnAuthorization(System.Web.Mvc.AuthorizationContext)
    - System.Web.Mvc.Controller.System#Web#Mvc#IExceptionFilter#OnException(System.Web.Mvc.ExceptionContext)
    - System.Web.Mvc.Controller.System#Web#Mvc#IResultFilter#OnResultExecuting(System.Web.Mvc.ResultExecutingContext)
    - System.Web.Mvc.Controller.System#Web#Mvc#IResultFilter#OnResultExecuted(System.Web.Mvc.ResultExecutedContext)
    - System.Web.Mvc.Controller.Resolver
    - System.Web.Mvc.Controller.AsyncManager
    - System.Web.Mvc.Controller.DisableAsyncSupport
    - System.Web.Mvc.Controller.ActionInvoker
    - System.Web.Mvc.Controller.Binders
    - System.Web.Mvc.Controller.HttpContext
    - System.Web.Mvc.Controller.ModelState
    - System.Web.Mvc.Controller.Profile
    - System.Web.Mvc.Controller.Request
    - System.Web.Mvc.Controller.Response
    - System.Web.Mvc.Controller.RouteData
    - System.Web.Mvc.Controller.Server
    - System.Web.Mvc.Controller.Session
    - System.Web.Mvc.Controller.TempDataProvider
    - System.Web.Mvc.Controller.Url
    - System.Web.Mvc.Controller.User
    - System.Web.Mvc.Controller.ViewEngineCollection
    - System.Web.Mvc.ControllerBase.Execute(System.Web.Routing.RequestContext)
    - System.Web.Mvc.ControllerBase.System#Web#Mvc#IController#Execute(System.Web.Routing.RequestContext)
    - System.Web.Mvc.ControllerBase.ControllerContext
    - System.Web.Mvc.ControllerBase.TempData
    - System.Web.Mvc.ControllerBase.ValidateRequest
    - System.Web.Mvc.ControllerBase.ValueProvider
    - System.Web.Mvc.ControllerBase.ViewBag
    - System.Web.Mvc.ControllerBase.ViewData
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: BookstoreProject.Controllers.HomeController.Index
      commentId: M:BookstoreProject.Controllers.HomeController.Index
      language: CSharp
      name:
        CSharp: Index()
        VB: Index()
      nameWithType:
        CSharp: HomeController.Index()
        VB: HomeController.Index()
      qualifiedName:
        CSharp: BookstoreProject.Controllers.HomeController.Index()
        VB: BookstoreProject.Controllers.HomeController.Index()
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: Index
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\HomeController.cs
        startLine: 13
      syntax:
        content:
          CSharp: public ActionResult Index()
          VB: Public Function Index As ActionResult
        return:
          type: System.Web.Mvc.ActionResult
      overload: BookstoreProject.Controllers.HomeController.Index*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.HomeController.About
      commentId: M:BookstoreProject.Controllers.HomeController.About
      language: CSharp
      name:
        CSharp: About()
        VB: About()
      nameWithType:
        CSharp: HomeController.About()
        VB: HomeController.About()
      qualifiedName:
        CSharp: BookstoreProject.Controllers.HomeController.About()
        VB: BookstoreProject.Controllers.HomeController.About()
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: About
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\HomeController.cs
        startLine: 18
      syntax:
        content:
          CSharp: public ActionResult About()
          VB: Public Function About As ActionResult
        return:
          type: System.Web.Mvc.ActionResult
      overload: BookstoreProject.Controllers.HomeController.About*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.HomeController.Contact
      commentId: M:BookstoreProject.Controllers.HomeController.Contact
      language: CSharp
      name:
        CSharp: Contact()
        VB: Contact()
      nameWithType:
        CSharp: HomeController.Contact()
        VB: HomeController.Contact()
      qualifiedName:
        CSharp: BookstoreProject.Controllers.HomeController.Contact()
        VB: BookstoreProject.Controllers.HomeController.Contact()
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: Contact
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\HomeController.cs
        startLine: 25
      syntax:
        content:
          CSharp: public ActionResult Contact()
          VB: Public Function Contact As ActionResult
        return:
          type: System.Web.Mvc.ActionResult
      overload: BookstoreProject.Controllers.HomeController.Contact*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.HomeController.Store
      commentId: M:BookstoreProject.Controllers.HomeController.Store
      language: CSharp
      name:
        CSharp: Store()
        VB: Store()
      nameWithType:
        CSharp: HomeController.Store()
        VB: HomeController.Store()
      qualifiedName:
        CSharp: BookstoreProject.Controllers.HomeController.Store()
        VB: BookstoreProject.Controllers.HomeController.Store()
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: Store
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\HomeController.cs
        startLine: 32
      syntax:
        content:
          CSharp: public ActionResult Store()
          VB: Public Function Store As ActionResult
        return:
          type: System.Web.Mvc.ActionResult
      overload: BookstoreProject.Controllers.HomeController.Store*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.HomeController.ProductPage(System.Nullable{System.Int32})
      commentId: M:BookstoreProject.Controllers.HomeController.ProductPage(System.Nullable{System.Int32})
      language: CSharp
      name:
        CSharp: ProductPage(Nullable<Int32>)
        VB: ProductPage(Nullable(Of Int32))
      nameWithType:
        CSharp: HomeController.ProductPage(Nullable<Int32>)
        VB: HomeController.ProductPage(Nullable(Of Int32))
      qualifiedName:
        CSharp: BookstoreProject.Controllers.HomeController.ProductPage(System.Nullable<System.Int32>)
        VB: BookstoreProject.Controllers.HomeController.ProductPage(System.Nullable(Of System.Int32))
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: ProductPage
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\HomeController.cs
        startLine: 37
      syntax:
        content:
          CSharp: public ActionResult ProductPage(int? id)
          VB: Public Function ProductPage(id As Integer?) As ActionResult
        parameters:
        - id: id
          type: System.Nullable{System.Int32}
        return:
          type: System.Web.Mvc.ActionResult
      overload: BookstoreProject.Controllers.HomeController.ProductPage*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: BookstoreProject.Controllers.ManageController
    commentId: T:BookstoreProject.Controllers.ManageController
    language: CSharp
    name:
      CSharp: ManageController
      VB: ManageController
    nameWithType:
      CSharp: ManageController
      VB: ManageController
    qualifiedName:
      CSharp: BookstoreProject.Controllers.ManageController
      VB: BookstoreProject.Controllers.ManageController
    type: Class
    assemblies:
    - BookstoreProject
    namespace: BookstoreProject.Controllers
    source:
      id: ManageController
      path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\ManageController.cs
      startLine: 12
    syntax:
      content:
        CSharp: >-
          [Authorize]

          public class ManageController : Controller, IActionFilter, IAuthenticationFilter, IAuthorizationFilter, IDisposable, IExceptionFilter, IResultFilter, IAsyncController, IController, IAsyncManagerContainer
        VB: >-
          <Authorize>

          Public Class ManageController

              Inherits Controller

              Implements IActionFilter, IAuthenticationFilter, IAuthorizationFilter, IDisposable, IExceptionFilter, IResultFilter, IAsyncController, IController, IAsyncManagerContainer
    inheritance:
    - System.Object
    - System.Web.Mvc.ControllerBase
    - System.Web.Mvc.Controller
    implements:
    - System.Web.Mvc.IActionFilter
    - System.Web.Mvc.Filters.IAuthenticationFilter
    - System.Web.Mvc.IAuthorizationFilter
    - System.IDisposable
    - System.Web.Mvc.IExceptionFilter
    - System.Web.Mvc.IResultFilter
    - System.Web.Mvc.Async.IAsyncController
    - System.Web.Mvc.IController
    - System.Web.Mvc.Async.IAsyncManagerContainer
    inheritedMembers:
    - System.Web.Mvc.Controller.Content(System.String)
    - System.Web.Mvc.Controller.Content(System.String,System.String)
    - System.Web.Mvc.Controller.Content(System.String,System.String,System.Text.Encoding)
    - System.Web.Mvc.Controller.CreateActionInvoker
    - System.Web.Mvc.Controller.CreateTempDataProvider
    - System.Web.Mvc.Controller.Dispose
    - System.Web.Mvc.Controller.ExecuteCore
    - System.Web.Mvc.Controller.File(System.Byte[],System.String)
    - System.Web.Mvc.Controller.File(System.Byte[],System.String,System.String)
    - System.Web.Mvc.Controller.File(System.IO.Stream,System.String)
    - System.Web.Mvc.Controller.File(System.IO.Stream,System.String,System.String)
    - System.Web.Mvc.Controller.File(System.String,System.String)
    - System.Web.Mvc.Controller.File(System.String,System.String,System.String)
    - System.Web.Mvc.Controller.HandleUnknownAction(System.String)
    - System.Web.Mvc.Controller.HttpNotFound
    - System.Web.Mvc.Controller.HttpNotFound(System.String)
    - System.Web.Mvc.Controller.JavaScript(System.String)
    - System.Web.Mvc.Controller.Json(System.Object)
    - System.Web.Mvc.Controller.Json(System.Object,System.String)
    - System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding)
    - System.Web.Mvc.Controller.Json(System.Object,System.Web.Mvc.JsonRequestBehavior)
    - System.Web.Mvc.Controller.Json(System.Object,System.String,System.Web.Mvc.JsonRequestBehavior)
    - System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding,System.Web.Mvc.JsonRequestBehavior)
    - System.Web.Mvc.Controller.Initialize(System.Web.Routing.RequestContext)
    - System.Web.Mvc.Controller.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)
    - System.Web.Mvc.Controller.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)
    - System.Web.Mvc.Controller.OnAuthentication(System.Web.Mvc.Filters.AuthenticationContext)
    - System.Web.Mvc.Controller.OnAuthenticationChallenge(System.Web.Mvc.Filters.AuthenticationChallengeContext)
    - System.Web.Mvc.Controller.OnAuthorization(System.Web.Mvc.AuthorizationContext)
    - System.Web.Mvc.Controller.OnException(System.Web.Mvc.ExceptionContext)
    - System.Web.Mvc.Controller.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)
    - System.Web.Mvc.Controller.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)
    - System.Web.Mvc.Controller.PartialView
    - System.Web.Mvc.Controller.PartialView(System.Object)
    - System.Web.Mvc.Controller.PartialView(System.String)
    - System.Web.Mvc.Controller.PartialView(System.String,System.Object)
    - System.Web.Mvc.Controller.Redirect(System.String)
    - System.Web.Mvc.Controller.RedirectPermanent(System.String)
    - System.Web.Mvc.Controller.RedirectToAction(System.String)
    - System.Web.Mvc.Controller.RedirectToAction(System.String,System.Object)
    - System.Web.Mvc.Controller.RedirectToAction(System.String,System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.RedirectToAction(System.String,System.String)
    - System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Object)
    - System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.RedirectToActionPermanent(System.String)
    - System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.Object)
    - System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String)
    - System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String,System.Object)
    - System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String,System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.RedirectToRoute(System.Object)
    - System.Web.Mvc.Controller.RedirectToRoute(System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.RedirectToRoute(System.String)
    - System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Object)
    - System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Object)
    - System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String)
    - System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String,System.Object)
    - System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel})
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String)
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String[])
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String,System.String[])
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String,System.String[],System.String[])
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String,System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String[],System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String,System.String[],System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.TryValidateModel(System.Object)
    - System.Web.Mvc.Controller.TryValidateModel(System.Object,System.String)
    - System.Web.Mvc.Controller.UpdateModel``1({TModel})
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String)
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String[])
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String,System.String[])
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String,System.String[],System.String[])
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String,System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String[],System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String,System.String[],System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)
    - System.Web.Mvc.Controller.ValidateModel(System.Object)
    - System.Web.Mvc.Controller.ValidateModel(System.Object,System.String)
    - System.Web.Mvc.Controller.View
    - System.Web.Mvc.Controller.View(System.Object)
    - System.Web.Mvc.Controller.View(System.String)
    - System.Web.Mvc.Controller.View(System.String,System.String)
    - System.Web.Mvc.Controller.View(System.String,System.Object)
    - System.Web.Mvc.Controller.View(System.String,System.String,System.Object)
    - System.Web.Mvc.Controller.View(System.Web.Mvc.IView)
    - System.Web.Mvc.Controller.View(System.Web.Mvc.IView,System.Object)
    - System.Web.Mvc.Controller.System#Web#Mvc#Async#IAsyncController#BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)
    - System.Web.Mvc.Controller.System#Web#Mvc#Async#IAsyncController#EndExecute(System.IAsyncResult)
    - System.Web.Mvc.Controller.BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)
    - System.Web.Mvc.Controller.BeginExecuteCore(System.AsyncCallback,System.Object)
    - System.Web.Mvc.Controller.EndExecute(System.IAsyncResult)
    - System.Web.Mvc.Controller.EndExecuteCore(System.IAsyncResult)
    - System.Web.Mvc.Controller.System#Web#Mvc#IActionFilter#OnActionExecuting(System.Web.Mvc.ActionExecutingContext)
    - System.Web.Mvc.Controller.System#Web#Mvc#IActionFilter#OnActionExecuted(System.Web.Mvc.ActionExecutedContext)
    - System.Web.Mvc.Controller.System#Web#Mvc#Filters#IAuthenticationFilter#OnAuthentication(System.Web.Mvc.Filters.AuthenticationContext)
    - System.Web.Mvc.Controller.System#Web#Mvc#Filters#IAuthenticationFilter#OnAuthenticationChallenge(System.Web.Mvc.Filters.AuthenticationChallengeContext)
    - System.Web.Mvc.Controller.System#Web#Mvc#IAuthorizationFilter#OnAuthorization(System.Web.Mvc.AuthorizationContext)
    - System.Web.Mvc.Controller.System#Web#Mvc#IExceptionFilter#OnException(System.Web.Mvc.ExceptionContext)
    - System.Web.Mvc.Controller.System#Web#Mvc#IResultFilter#OnResultExecuting(System.Web.Mvc.ResultExecutingContext)
    - System.Web.Mvc.Controller.System#Web#Mvc#IResultFilter#OnResultExecuted(System.Web.Mvc.ResultExecutedContext)
    - System.Web.Mvc.Controller.Resolver
    - System.Web.Mvc.Controller.AsyncManager
    - System.Web.Mvc.Controller.DisableAsyncSupport
    - System.Web.Mvc.Controller.ActionInvoker
    - System.Web.Mvc.Controller.Binders
    - System.Web.Mvc.Controller.HttpContext
    - System.Web.Mvc.Controller.ModelState
    - System.Web.Mvc.Controller.Profile
    - System.Web.Mvc.Controller.Request
    - System.Web.Mvc.Controller.Response
    - System.Web.Mvc.Controller.RouteData
    - System.Web.Mvc.Controller.Server
    - System.Web.Mvc.Controller.Session
    - System.Web.Mvc.Controller.TempDataProvider
    - System.Web.Mvc.Controller.Url
    - System.Web.Mvc.Controller.User
    - System.Web.Mvc.Controller.ViewEngineCollection
    - System.Web.Mvc.ControllerBase.Execute(System.Web.Routing.RequestContext)
    - System.Web.Mvc.ControllerBase.System#Web#Mvc#IController#Execute(System.Web.Routing.RequestContext)
    - System.Web.Mvc.ControllerBase.ControllerContext
    - System.Web.Mvc.ControllerBase.TempData
    - System.Web.Mvc.ControllerBase.ValidateRequest
    - System.Web.Mvc.ControllerBase.ValueProvider
    - System.Web.Mvc.ControllerBase.ViewBag
    - System.Web.Mvc.ControllerBase.ViewData
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    attributes:
    - type: System.Web.Mvc.AuthorizeAttribute
      ctor: System.Web.Mvc.AuthorizeAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: BookstoreProject.Controllers.ManageController.#ctor
      commentId: M:BookstoreProject.Controllers.ManageController.#ctor
      language: CSharp
      name:
        CSharp: ManageController()
        VB: ManageController()
      nameWithType:
        CSharp: ManageController.ManageController()
        VB: ManageController.ManageController()
      qualifiedName:
        CSharp: BookstoreProject.Controllers.ManageController.ManageController()
        VB: BookstoreProject.Controllers.ManageController.ManageController()
      type: Constructor
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: .ctor
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\ManageController.cs
        startLine: 18
      syntax:
        content:
          CSharp: public ManageController()
          VB: Public Sub New
      overload: BookstoreProject.Controllers.ManageController.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.ManageController.#ctor(BookstoreProject.ApplicationUserManager,BookstoreProject.ApplicationSignInManager)
      commentId: M:BookstoreProject.Controllers.ManageController.#ctor(BookstoreProject.ApplicationUserManager,BookstoreProject.ApplicationSignInManager)
      language: CSharp
      name:
        CSharp: ManageController(ApplicationUserManager, ApplicationSignInManager)
        VB: ManageController(ApplicationUserManager, ApplicationSignInManager)
      nameWithType:
        CSharp: ManageController.ManageController(ApplicationUserManager, ApplicationSignInManager)
        VB: ManageController.ManageController(ApplicationUserManager, ApplicationSignInManager)
      qualifiedName:
        CSharp: BookstoreProject.Controllers.ManageController.ManageController(BookstoreProject.ApplicationUserManager, BookstoreProject.ApplicationSignInManager)
        VB: BookstoreProject.Controllers.ManageController.ManageController(BookstoreProject.ApplicationUserManager, BookstoreProject.ApplicationSignInManager)
      type: Constructor
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: .ctor
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\ManageController.cs
        startLine: 22
      syntax:
        content:
          CSharp: public ManageController(ApplicationUserManager userManager, ApplicationSignInManager signInManager)
          VB: Public Sub New(userManager As ApplicationUserManager, signInManager As ApplicationSignInManager)
        parameters:
        - id: userManager
          type: BookstoreProject.ApplicationUserManager
        - id: signInManager
          type: BookstoreProject.ApplicationSignInManager
      overload: BookstoreProject.Controllers.ManageController.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.ManageController.SignInManager
      commentId: P:BookstoreProject.Controllers.ManageController.SignInManager
      language: CSharp
      name:
        CSharp: SignInManager
        VB: SignInManager
      nameWithType:
        CSharp: ManageController.SignInManager
        VB: ManageController.SignInManager
      qualifiedName:
        CSharp: BookstoreProject.Controllers.ManageController.SignInManager
        VB: BookstoreProject.Controllers.ManageController.SignInManager
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: SignInManager
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\ManageController.cs
        startLine: 28
      syntax:
        content:
          CSharp: public ApplicationSignInManager SignInManager { get; }
          VB: Public ReadOnly Property SignInManager As ApplicationSignInManager
        parameters: []
        return:
          type: BookstoreProject.ApplicationSignInManager
      overload: BookstoreProject.Controllers.ManageController.SignInManager*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: BookstoreProject.Controllers.ManageController.UserManager
      commentId: P:BookstoreProject.Controllers.ManageController.UserManager
      language: CSharp
      name:
        CSharp: UserManager
        VB: UserManager
      nameWithType:
        CSharp: ManageController.UserManager
        VB: ManageController.UserManager
      qualifiedName:
        CSharp: BookstoreProject.Controllers.ManageController.UserManager
        VB: BookstoreProject.Controllers.ManageController.UserManager
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: UserManager
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\ManageController.cs
        startLine: 40
      syntax:
        content:
          CSharp: public ApplicationUserManager UserManager { get; }
          VB: Public ReadOnly Property UserManager As ApplicationUserManager
        parameters: []
        return:
          type: BookstoreProject.ApplicationUserManager
      overload: BookstoreProject.Controllers.ManageController.UserManager*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: BookstoreProject.Controllers.ManageController.Index(System.Nullable{BookstoreProject.Controllers.ManageController.ManageMessageId})
      commentId: M:BookstoreProject.Controllers.ManageController.Index(System.Nullable{BookstoreProject.Controllers.ManageController.ManageMessageId})
      language: CSharp
      name:
        CSharp: Index(Nullable<ManageController.ManageMessageId>)
        VB: Index(Nullable(Of ManageController.ManageMessageId))
      nameWithType:
        CSharp: ManageController.Index(Nullable<ManageController.ManageMessageId>)
        VB: ManageController.Index(Nullable(Of ManageController.ManageMessageId))
      qualifiedName:
        CSharp: BookstoreProject.Controllers.ManageController.Index(System.Nullable<BookstoreProject.Controllers.ManageController.ManageMessageId>)
        VB: BookstoreProject.Controllers.ManageController.Index(System.Nullable(Of BookstoreProject.Controllers.ManageController.ManageMessageId))
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: Index
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\ManageController.cs
        startLine: 54
      syntax:
        content:
          CSharp: public Task<ActionResult> Index(ManageController.ManageMessageId? message)
          VB: Public Function Index(message As ManageController.ManageMessageId?) As Task(Of ActionResult)
        parameters:
        - id: message
          type: System.Nullable{BookstoreProject.Controllers.ManageController.ManageMessageId}
        return:
          type: System.Threading.Tasks.Task{System.Web.Mvc.ActionResult}
      overload: BookstoreProject.Controllers.ManageController.Index*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.ManageController.RemoveLogin(System.String,System.String)
      commentId: M:BookstoreProject.Controllers.ManageController.RemoveLogin(System.String,System.String)
      language: CSharp
      name:
        CSharp: RemoveLogin(String, String)
        VB: RemoveLogin(String, String)
      nameWithType:
        CSharp: ManageController.RemoveLogin(String, String)
        VB: ManageController.RemoveLogin(String, String)
      qualifiedName:
        CSharp: BookstoreProject.Controllers.ManageController.RemoveLogin(System.String, System.String)
        VB: BookstoreProject.Controllers.ManageController.RemoveLogin(System.String, System.String)
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: RemoveLogin
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\ManageController.cs
        startLine: 79
      syntax:
        content:
          CSharp: >-
            [HttpPost]

            [ValidateAntiForgeryToken]

            public Task<ActionResult> RemoveLogin(string loginProvider, string providerKey)
          VB: >-
            <HttpPost>

            <ValidateAntiForgeryToken>

            Public Function RemoveLogin(loginProvider As String, providerKey As String) As Task(Of ActionResult)
        parameters:
        - id: loginProvider
          type: System.String
        - id: providerKey
          type: System.String
        return:
          type: System.Threading.Tasks.Task{System.Web.Mvc.ActionResult}
      overload: BookstoreProject.Controllers.ManageController.RemoveLogin*
      attributes:
      - type: System.Web.Mvc.HttpPostAttribute
        ctor: System.Web.Mvc.HttpPostAttribute.#ctor
        arguments: []
      - type: System.Web.Mvc.ValidateAntiForgeryTokenAttribute
        ctor: System.Web.Mvc.ValidateAntiForgeryTokenAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.ManageController.AddPhoneNumber
      commentId: M:BookstoreProject.Controllers.ManageController.AddPhoneNumber
      language: CSharp
      name:
        CSharp: AddPhoneNumber()
        VB: AddPhoneNumber()
      nameWithType:
        CSharp: ManageController.AddPhoneNumber()
        VB: ManageController.AddPhoneNumber()
      qualifiedName:
        CSharp: BookstoreProject.Controllers.ManageController.AddPhoneNumber()
        VB: BookstoreProject.Controllers.ManageController.AddPhoneNumber()
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: AddPhoneNumber
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\ManageController.cs
        startLine: 103
      syntax:
        content:
          CSharp: public ActionResult AddPhoneNumber()
          VB: Public Function AddPhoneNumber As ActionResult
        return:
          type: System.Web.Mvc.ActionResult
      overload: BookstoreProject.Controllers.ManageController.AddPhoneNumber*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.ManageController.AddPhoneNumber(BookstoreProject.Models.AddPhoneNumberViewModel)
      commentId: M:BookstoreProject.Controllers.ManageController.AddPhoneNumber(BookstoreProject.Models.AddPhoneNumberViewModel)
      language: CSharp
      name:
        CSharp: AddPhoneNumber(AddPhoneNumberViewModel)
        VB: AddPhoneNumber(AddPhoneNumberViewModel)
      nameWithType:
        CSharp: ManageController.AddPhoneNumber(AddPhoneNumberViewModel)
        VB: ManageController.AddPhoneNumber(AddPhoneNumberViewModel)
      qualifiedName:
        CSharp: BookstoreProject.Controllers.ManageController.AddPhoneNumber(BookstoreProject.Models.AddPhoneNumberViewModel)
        VB: BookstoreProject.Controllers.ManageController.AddPhoneNumber(BookstoreProject.Models.AddPhoneNumberViewModel)
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: AddPhoneNumber
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\ManageController.cs
        startLine: 110
      syntax:
        content:
          CSharp: >-
            [HttpPost]

            [ValidateAntiForgeryToken]

            public Task<ActionResult> AddPhoneNumber(AddPhoneNumberViewModel model)
          VB: >-
            <HttpPost>

            <ValidateAntiForgeryToken>

            Public Function AddPhoneNumber(model As AddPhoneNumberViewModel) As Task(Of ActionResult)
        parameters:
        - id: model
          type: BookstoreProject.Models.AddPhoneNumberViewModel
        return:
          type: System.Threading.Tasks.Task{System.Web.Mvc.ActionResult}
      overload: BookstoreProject.Controllers.ManageController.AddPhoneNumber*
      attributes:
      - type: System.Web.Mvc.HttpPostAttribute
        ctor: System.Web.Mvc.HttpPostAttribute.#ctor
        arguments: []
      - type: System.Web.Mvc.ValidateAntiForgeryTokenAttribute
        ctor: System.Web.Mvc.ValidateAntiForgeryTokenAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.ManageController.EnableTwoFactorAuthentication
      commentId: M:BookstoreProject.Controllers.ManageController.EnableTwoFactorAuthentication
      language: CSharp
      name:
        CSharp: EnableTwoFactorAuthentication()
        VB: EnableTwoFactorAuthentication()
      nameWithType:
        CSharp: ManageController.EnableTwoFactorAuthentication()
        VB: ManageController.EnableTwoFactorAuthentication()
      qualifiedName:
        CSharp: BookstoreProject.Controllers.ManageController.EnableTwoFactorAuthentication()
        VB: BookstoreProject.Controllers.ManageController.EnableTwoFactorAuthentication()
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: EnableTwoFactorAuthentication
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\ManageController.cs
        startLine: 134
      syntax:
        content:
          CSharp: >-
            [HttpPost]

            [ValidateAntiForgeryToken]

            public Task<ActionResult> EnableTwoFactorAuthentication()
          VB: >-
            <HttpPost>

            <ValidateAntiForgeryToken>

            Public Function EnableTwoFactorAuthentication As Task(Of ActionResult)
        return:
          type: System.Threading.Tasks.Task{System.Web.Mvc.ActionResult}
      overload: BookstoreProject.Controllers.ManageController.EnableTwoFactorAuthentication*
      attributes:
      - type: System.Web.Mvc.HttpPostAttribute
        ctor: System.Web.Mvc.HttpPostAttribute.#ctor
        arguments: []
      - type: System.Web.Mvc.ValidateAntiForgeryTokenAttribute
        ctor: System.Web.Mvc.ValidateAntiForgeryTokenAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.ManageController.DisableTwoFactorAuthentication
      commentId: M:BookstoreProject.Controllers.ManageController.DisableTwoFactorAuthentication
      language: CSharp
      name:
        CSharp: DisableTwoFactorAuthentication()
        VB: DisableTwoFactorAuthentication()
      nameWithType:
        CSharp: ManageController.DisableTwoFactorAuthentication()
        VB: ManageController.DisableTwoFactorAuthentication()
      qualifiedName:
        CSharp: BookstoreProject.Controllers.ManageController.DisableTwoFactorAuthentication()
        VB: BookstoreProject.Controllers.ManageController.DisableTwoFactorAuthentication()
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: DisableTwoFactorAuthentication
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\ManageController.cs
        startLine: 149
      syntax:
        content:
          CSharp: >-
            [HttpPost]

            [ValidateAntiForgeryToken]

            public Task<ActionResult> DisableTwoFactorAuthentication()
          VB: >-
            <HttpPost>

            <ValidateAntiForgeryToken>

            Public Function DisableTwoFactorAuthentication As Task(Of ActionResult)
        return:
          type: System.Threading.Tasks.Task{System.Web.Mvc.ActionResult}
      overload: BookstoreProject.Controllers.ManageController.DisableTwoFactorAuthentication*
      attributes:
      - type: System.Web.Mvc.HttpPostAttribute
        ctor: System.Web.Mvc.HttpPostAttribute.#ctor
        arguments: []
      - type: System.Web.Mvc.ValidateAntiForgeryTokenAttribute
        ctor: System.Web.Mvc.ValidateAntiForgeryTokenAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.ManageController.VerifyPhoneNumber(System.String)
      commentId: M:BookstoreProject.Controllers.ManageController.VerifyPhoneNumber(System.String)
      language: CSharp
      name:
        CSharp: VerifyPhoneNumber(String)
        VB: VerifyPhoneNumber(String)
      nameWithType:
        CSharp: ManageController.VerifyPhoneNumber(String)
        VB: ManageController.VerifyPhoneNumber(String)
      qualifiedName:
        CSharp: BookstoreProject.Controllers.ManageController.VerifyPhoneNumber(System.String)
        VB: BookstoreProject.Controllers.ManageController.VerifyPhoneNumber(System.String)
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: VerifyPhoneNumber
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\ManageController.cs
        startLine: 164
      syntax:
        content:
          CSharp: public Task<ActionResult> VerifyPhoneNumber(string phoneNumber)
          VB: Public Function VerifyPhoneNumber(phoneNumber As String) As Task(Of ActionResult)
        parameters:
        - id: phoneNumber
          type: System.String
        return:
          type: System.Threading.Tasks.Task{System.Web.Mvc.ActionResult}
      overload: BookstoreProject.Controllers.ManageController.VerifyPhoneNumber*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.ManageController.VerifyPhoneNumber(BookstoreProject.Models.VerifyPhoneNumberViewModel)
      commentId: M:BookstoreProject.Controllers.ManageController.VerifyPhoneNumber(BookstoreProject.Models.VerifyPhoneNumberViewModel)
      language: CSharp
      name:
        CSharp: VerifyPhoneNumber(VerifyPhoneNumberViewModel)
        VB: VerifyPhoneNumber(VerifyPhoneNumberViewModel)
      nameWithType:
        CSharp: ManageController.VerifyPhoneNumber(VerifyPhoneNumberViewModel)
        VB: ManageController.VerifyPhoneNumber(VerifyPhoneNumberViewModel)
      qualifiedName:
        CSharp: BookstoreProject.Controllers.ManageController.VerifyPhoneNumber(BookstoreProject.Models.VerifyPhoneNumberViewModel)
        VB: BookstoreProject.Controllers.ManageController.VerifyPhoneNumber(BookstoreProject.Models.VerifyPhoneNumberViewModel)
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: VerifyPhoneNumber
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\ManageController.cs
        startLine: 173
      syntax:
        content:
          CSharp: >-
            [HttpPost]

            [ValidateAntiForgeryToken]

            public Task<ActionResult> VerifyPhoneNumber(VerifyPhoneNumberViewModel model)
          VB: >-
            <HttpPost>

            <ValidateAntiForgeryToken>

            Public Function VerifyPhoneNumber(model As VerifyPhoneNumberViewModel) As Task(Of ActionResult)
        parameters:
        - id: model
          type: BookstoreProject.Models.VerifyPhoneNumberViewModel
        return:
          type: System.Threading.Tasks.Task{System.Web.Mvc.ActionResult}
      overload: BookstoreProject.Controllers.ManageController.VerifyPhoneNumber*
      attributes:
      - type: System.Web.Mvc.HttpPostAttribute
        ctor: System.Web.Mvc.HttpPostAttribute.#ctor
        arguments: []
      - type: System.Web.Mvc.ValidateAntiForgeryTokenAttribute
        ctor: System.Web.Mvc.ValidateAntiForgeryTokenAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.ManageController.RemovePhoneNumber
      commentId: M:BookstoreProject.Controllers.ManageController.RemovePhoneNumber
      language: CSharp
      name:
        CSharp: RemovePhoneNumber()
        VB: RemovePhoneNumber()
      nameWithType:
        CSharp: ManageController.RemovePhoneNumber()
        VB: ManageController.RemovePhoneNumber()
      qualifiedName:
        CSharp: BookstoreProject.Controllers.ManageController.RemovePhoneNumber()
        VB: BookstoreProject.Controllers.ManageController.RemovePhoneNumber()
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: RemovePhoneNumber
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\ManageController.cs
        startLine: 198
      syntax:
        content:
          CSharp: >-
            [HttpPost]

            [ValidateAntiForgeryToken]

            public Task<ActionResult> RemovePhoneNumber()
          VB: >-
            <HttpPost>

            <ValidateAntiForgeryToken>

            Public Function RemovePhoneNumber As Task(Of ActionResult)
        return:
          type: System.Threading.Tasks.Task{System.Web.Mvc.ActionResult}
      overload: BookstoreProject.Controllers.ManageController.RemovePhoneNumber*
      attributes:
      - type: System.Web.Mvc.HttpPostAttribute
        ctor: System.Web.Mvc.HttpPostAttribute.#ctor
        arguments: []
      - type: System.Web.Mvc.ValidateAntiForgeryTokenAttribute
        ctor: System.Web.Mvc.ValidateAntiForgeryTokenAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.ManageController.ChangePassword
      commentId: M:BookstoreProject.Controllers.ManageController.ChangePassword
      language: CSharp
      name:
        CSharp: ChangePassword()
        VB: ChangePassword()
      nameWithType:
        CSharp: ManageController.ChangePassword()
        VB: ManageController.ChangePassword()
      qualifiedName:
        CSharp: BookstoreProject.Controllers.ManageController.ChangePassword()
        VB: BookstoreProject.Controllers.ManageController.ChangePassword()
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: ChangePassword
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\ManageController.cs
        startLine: 217
      syntax:
        content:
          CSharp: public ActionResult ChangePassword()
          VB: Public Function ChangePassword As ActionResult
        return:
          type: System.Web.Mvc.ActionResult
      overload: BookstoreProject.Controllers.ManageController.ChangePassword*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.ManageController.ChangePassword(BookstoreProject.Models.ChangePasswordViewModel)
      commentId: M:BookstoreProject.Controllers.ManageController.ChangePassword(BookstoreProject.Models.ChangePasswordViewModel)
      language: CSharp
      name:
        CSharp: ChangePassword(ChangePasswordViewModel)
        VB: ChangePassword(ChangePasswordViewModel)
      nameWithType:
        CSharp: ManageController.ChangePassword(ChangePasswordViewModel)
        VB: ManageController.ChangePassword(ChangePasswordViewModel)
      qualifiedName:
        CSharp: BookstoreProject.Controllers.ManageController.ChangePassword(BookstoreProject.Models.ChangePasswordViewModel)
        VB: BookstoreProject.Controllers.ManageController.ChangePassword(BookstoreProject.Models.ChangePasswordViewModel)
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: ChangePassword
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\ManageController.cs
        startLine: 224
      syntax:
        content:
          CSharp: >-
            [HttpPost]

            [ValidateAntiForgeryToken]

            public Task<ActionResult> ChangePassword(ChangePasswordViewModel model)
          VB: >-
            <HttpPost>

            <ValidateAntiForgeryToken>

            Public Function ChangePassword(model As ChangePasswordViewModel) As Task(Of ActionResult)
        parameters:
        - id: model
          type: BookstoreProject.Models.ChangePasswordViewModel
        return:
          type: System.Threading.Tasks.Task{System.Web.Mvc.ActionResult}
      overload: BookstoreProject.Controllers.ManageController.ChangePassword*
      attributes:
      - type: System.Web.Mvc.HttpPostAttribute
        ctor: System.Web.Mvc.HttpPostAttribute.#ctor
        arguments: []
      - type: System.Web.Mvc.ValidateAntiForgeryTokenAttribute
        ctor: System.Web.Mvc.ValidateAntiForgeryTokenAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.ManageController.SetPassword
      commentId: M:BookstoreProject.Controllers.ManageController.SetPassword
      language: CSharp
      name:
        CSharp: SetPassword()
        VB: SetPassword()
      nameWithType:
        CSharp: ManageController.SetPassword()
        VB: ManageController.SetPassword()
      qualifiedName:
        CSharp: BookstoreProject.Controllers.ManageController.SetPassword()
        VB: BookstoreProject.Controllers.ManageController.SetPassword()
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: SetPassword
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\ManageController.cs
        startLine: 248
      syntax:
        content:
          CSharp: public ActionResult SetPassword()
          VB: Public Function SetPassword As ActionResult
        return:
          type: System.Web.Mvc.ActionResult
      overload: BookstoreProject.Controllers.ManageController.SetPassword*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.ManageController.SetPassword(BookstoreProject.Models.SetPasswordViewModel)
      commentId: M:BookstoreProject.Controllers.ManageController.SetPassword(BookstoreProject.Models.SetPasswordViewModel)
      language: CSharp
      name:
        CSharp: SetPassword(SetPasswordViewModel)
        VB: SetPassword(SetPasswordViewModel)
      nameWithType:
        CSharp: ManageController.SetPassword(SetPasswordViewModel)
        VB: ManageController.SetPassword(SetPasswordViewModel)
      qualifiedName:
        CSharp: BookstoreProject.Controllers.ManageController.SetPassword(BookstoreProject.Models.SetPasswordViewModel)
        VB: BookstoreProject.Controllers.ManageController.SetPassword(BookstoreProject.Models.SetPasswordViewModel)
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: SetPassword
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\ManageController.cs
        startLine: 255
      syntax:
        content:
          CSharp: >-
            [HttpPost]

            [ValidateAntiForgeryToken]

            public Task<ActionResult> SetPassword(SetPasswordViewModel model)
          VB: >-
            <HttpPost>

            <ValidateAntiForgeryToken>

            Public Function SetPassword(model As SetPasswordViewModel) As Task(Of ActionResult)
        parameters:
        - id: model
          type: BookstoreProject.Models.SetPasswordViewModel
        return:
          type: System.Threading.Tasks.Task{System.Web.Mvc.ActionResult}
      overload: BookstoreProject.Controllers.ManageController.SetPassword*
      attributes:
      - type: System.Web.Mvc.HttpPostAttribute
        ctor: System.Web.Mvc.HttpPostAttribute.#ctor
        arguments: []
      - type: System.Web.Mvc.ValidateAntiForgeryTokenAttribute
        ctor: System.Web.Mvc.ValidateAntiForgeryTokenAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.ManageController.ManageLogins(System.Nullable{BookstoreProject.Controllers.ManageController.ManageMessageId})
      commentId: M:BookstoreProject.Controllers.ManageController.ManageLogins(System.Nullable{BookstoreProject.Controllers.ManageController.ManageMessageId})
      language: CSharp
      name:
        CSharp: ManageLogins(Nullable<ManageController.ManageMessageId>)
        VB: ManageLogins(Nullable(Of ManageController.ManageMessageId))
      nameWithType:
        CSharp: ManageController.ManageLogins(Nullable<ManageController.ManageMessageId>)
        VB: ManageController.ManageLogins(Nullable(Of ManageController.ManageMessageId))
      qualifiedName:
        CSharp: BookstoreProject.Controllers.ManageController.ManageLogins(System.Nullable<BookstoreProject.Controllers.ManageController.ManageMessageId>)
        VB: BookstoreProject.Controllers.ManageController.ManageLogins(System.Nullable(Of BookstoreProject.Controllers.ManageController.ManageMessageId))
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: ManageLogins
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\ManageController.cs
        startLine: 280
      syntax:
        content:
          CSharp: public Task<ActionResult> ManageLogins(ManageController.ManageMessageId? message)
          VB: Public Function ManageLogins(message As ManageController.ManageMessageId?) As Task(Of ActionResult)
        parameters:
        - id: message
          type: System.Nullable{BookstoreProject.Controllers.ManageController.ManageMessageId}
        return:
          type: System.Threading.Tasks.Task{System.Web.Mvc.ActionResult}
      overload: BookstoreProject.Controllers.ManageController.ManageLogins*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.ManageController.LinkLogin(System.String)
      commentId: M:BookstoreProject.Controllers.ManageController.LinkLogin(System.String)
      language: CSharp
      name:
        CSharp: LinkLogin(String)
        VB: LinkLogin(String)
      nameWithType:
        CSharp: ManageController.LinkLogin(String)
        VB: ManageController.LinkLogin(String)
      qualifiedName:
        CSharp: BookstoreProject.Controllers.ManageController.LinkLogin(System.String)
        VB: BookstoreProject.Controllers.ManageController.LinkLogin(System.String)
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: LinkLogin
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\ManageController.cs
        startLine: 303
      syntax:
        content:
          CSharp: >-
            [HttpPost]

            [ValidateAntiForgeryToken]

            public ActionResult LinkLogin(string provider)
          VB: >-
            <HttpPost>

            <ValidateAntiForgeryToken>

            Public Function LinkLogin(provider As String) As ActionResult
        parameters:
        - id: provider
          type: System.String
        return:
          type: System.Web.Mvc.ActionResult
      overload: BookstoreProject.Controllers.ManageController.LinkLogin*
      attributes:
      - type: System.Web.Mvc.HttpPostAttribute
        ctor: System.Web.Mvc.HttpPostAttribute.#ctor
        arguments: []
      - type: System.Web.Mvc.ValidateAntiForgeryTokenAttribute
        ctor: System.Web.Mvc.ValidateAntiForgeryTokenAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.ManageController.LinkLoginCallback
      commentId: M:BookstoreProject.Controllers.ManageController.LinkLoginCallback
      language: CSharp
      name:
        CSharp: LinkLoginCallback()
        VB: LinkLoginCallback()
      nameWithType:
        CSharp: ManageController.LinkLoginCallback()
        VB: ManageController.LinkLoginCallback()
      qualifiedName:
        CSharp: BookstoreProject.Controllers.ManageController.LinkLoginCallback()
        VB: BookstoreProject.Controllers.ManageController.LinkLoginCallback()
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: LinkLoginCallback
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\ManageController.cs
        startLine: 313
      syntax:
        content:
          CSharp: public Task<ActionResult> LinkLoginCallback()
          VB: Public Function LinkLoginCallback As Task(Of ActionResult)
        return:
          type: System.Threading.Tasks.Task{System.Web.Mvc.ActionResult}
      overload: BookstoreProject.Controllers.ManageController.LinkLoginCallback*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Controllers.ManageController.Dispose(System.Boolean)
      commentId: M:BookstoreProject.Controllers.ManageController.Dispose(System.Boolean)
      language: CSharp
      name:
        CSharp: Dispose(Boolean)
        VB: Dispose(Boolean)
      nameWithType:
        CSharp: ManageController.Dispose(Boolean)
        VB: ManageController.Dispose(Boolean)
      qualifiedName:
        CSharp: BookstoreProject.Controllers.ManageController.Dispose(System.Boolean)
        VB: BookstoreProject.Controllers.ManageController.Dispose(System.Boolean)
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: Dispose
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\ManageController.cs
        startLine: 324
      syntax:
        content:
          CSharp: protected override void Dispose(bool disposing)
          VB: Protected Overrides Sub Dispose(disposing As Boolean)
        parameters:
        - id: disposing
          type: System.Boolean
      overload: BookstoreProject.Controllers.ManageController.Dispose*
      overridden: System.Web.Mvc.Controller.Dispose(System.Boolean)
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: BookstoreProject.Controllers.ManageController.ManageMessageId
    commentId: T:BookstoreProject.Controllers.ManageController.ManageMessageId
    language: CSharp
    name:
      CSharp: ManageController.ManageMessageId
      VB: ManageController.ManageMessageId
    nameWithType:
      CSharp: ManageController.ManageMessageId
      VB: ManageController.ManageMessageId
    qualifiedName:
      CSharp: BookstoreProject.Controllers.ManageController.ManageMessageId
      VB: BookstoreProject.Controllers.ManageController.ManageMessageId
    type: Enum
    assemblies:
    - BookstoreProject
    namespace: BookstoreProject.Controllers
    source:
      id: ManageMessageId
      path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\ManageController.cs
      startLine: 375
    syntax:
      content:
        CSharp: public enum ManageMessageId
        VB: Public Enum ManageMessageId
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: BookstoreProject.Controllers.ManageController.ManageMessageId.AddPhoneSuccess
      commentId: F:BookstoreProject.Controllers.ManageController.ManageMessageId.AddPhoneSuccess
      language: CSharp
      name:
        CSharp: AddPhoneSuccess
        VB: AddPhoneSuccess
      nameWithType:
        CSharp: ManageController.ManageMessageId.AddPhoneSuccess
        VB: ManageController.ManageMessageId.AddPhoneSuccess
      qualifiedName:
        CSharp: BookstoreProject.Controllers.ManageController.ManageMessageId.AddPhoneSuccess
        VB: BookstoreProject.Controllers.ManageController.ManageMessageId.AddPhoneSuccess
      type: Field
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: AddPhoneSuccess
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\ManageController.cs
        startLine: 377
      syntax:
        content:
          CSharp: AddPhoneSuccess = 0
          VB: AddPhoneSuccess = 0
        return:
          type: BookstoreProject.Controllers.ManageController.ManageMessageId
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: BookstoreProject.Controllers.ManageController.ManageMessageId.ChangePasswordSuccess
      commentId: F:BookstoreProject.Controllers.ManageController.ManageMessageId.ChangePasswordSuccess
      language: CSharp
      name:
        CSharp: ChangePasswordSuccess
        VB: ChangePasswordSuccess
      nameWithType:
        CSharp: ManageController.ManageMessageId.ChangePasswordSuccess
        VB: ManageController.ManageMessageId.ChangePasswordSuccess
      qualifiedName:
        CSharp: BookstoreProject.Controllers.ManageController.ManageMessageId.ChangePasswordSuccess
        VB: BookstoreProject.Controllers.ManageController.ManageMessageId.ChangePasswordSuccess
      type: Field
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: ChangePasswordSuccess
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\ManageController.cs
        startLine: 378
      syntax:
        content:
          CSharp: ChangePasswordSuccess = 1
          VB: ChangePasswordSuccess = 1
        return:
          type: BookstoreProject.Controllers.ManageController.ManageMessageId
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: BookstoreProject.Controllers.ManageController.ManageMessageId.SetTwoFactorSuccess
      commentId: F:BookstoreProject.Controllers.ManageController.ManageMessageId.SetTwoFactorSuccess
      language: CSharp
      name:
        CSharp: SetTwoFactorSuccess
        VB: SetTwoFactorSuccess
      nameWithType:
        CSharp: ManageController.ManageMessageId.SetTwoFactorSuccess
        VB: ManageController.ManageMessageId.SetTwoFactorSuccess
      qualifiedName:
        CSharp: BookstoreProject.Controllers.ManageController.ManageMessageId.SetTwoFactorSuccess
        VB: BookstoreProject.Controllers.ManageController.ManageMessageId.SetTwoFactorSuccess
      type: Field
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: SetTwoFactorSuccess
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\ManageController.cs
        startLine: 379
      syntax:
        content:
          CSharp: SetTwoFactorSuccess = 2
          VB: SetTwoFactorSuccess = 2
        return:
          type: BookstoreProject.Controllers.ManageController.ManageMessageId
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: BookstoreProject.Controllers.ManageController.ManageMessageId.SetPasswordSuccess
      commentId: F:BookstoreProject.Controllers.ManageController.ManageMessageId.SetPasswordSuccess
      language: CSharp
      name:
        CSharp: SetPasswordSuccess
        VB: SetPasswordSuccess
      nameWithType:
        CSharp: ManageController.ManageMessageId.SetPasswordSuccess
        VB: ManageController.ManageMessageId.SetPasswordSuccess
      qualifiedName:
        CSharp: BookstoreProject.Controllers.ManageController.ManageMessageId.SetPasswordSuccess
        VB: BookstoreProject.Controllers.ManageController.ManageMessageId.SetPasswordSuccess
      type: Field
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: SetPasswordSuccess
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\ManageController.cs
        startLine: 380
      syntax:
        content:
          CSharp: SetPasswordSuccess = 3
          VB: SetPasswordSuccess = 3
        return:
          type: BookstoreProject.Controllers.ManageController.ManageMessageId
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: BookstoreProject.Controllers.ManageController.ManageMessageId.RemoveLoginSuccess
      commentId: F:BookstoreProject.Controllers.ManageController.ManageMessageId.RemoveLoginSuccess
      language: CSharp
      name:
        CSharp: RemoveLoginSuccess
        VB: RemoveLoginSuccess
      nameWithType:
        CSharp: ManageController.ManageMessageId.RemoveLoginSuccess
        VB: ManageController.ManageMessageId.RemoveLoginSuccess
      qualifiedName:
        CSharp: BookstoreProject.Controllers.ManageController.ManageMessageId.RemoveLoginSuccess
        VB: BookstoreProject.Controllers.ManageController.ManageMessageId.RemoveLoginSuccess
      type: Field
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: RemoveLoginSuccess
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\ManageController.cs
        startLine: 381
      syntax:
        content:
          CSharp: RemoveLoginSuccess = 4
          VB: RemoveLoginSuccess = 4
        return:
          type: BookstoreProject.Controllers.ManageController.ManageMessageId
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: BookstoreProject.Controllers.ManageController.ManageMessageId.RemovePhoneSuccess
      commentId: F:BookstoreProject.Controllers.ManageController.ManageMessageId.RemovePhoneSuccess
      language: CSharp
      name:
        CSharp: RemovePhoneSuccess
        VB: RemovePhoneSuccess
      nameWithType:
        CSharp: ManageController.ManageMessageId.RemovePhoneSuccess
        VB: ManageController.ManageMessageId.RemovePhoneSuccess
      qualifiedName:
        CSharp: BookstoreProject.Controllers.ManageController.ManageMessageId.RemovePhoneSuccess
        VB: BookstoreProject.Controllers.ManageController.ManageMessageId.RemovePhoneSuccess
      type: Field
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: RemovePhoneSuccess
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\ManageController.cs
        startLine: 382
      syntax:
        content:
          CSharp: RemovePhoneSuccess = 5
          VB: RemovePhoneSuccess = 5
        return:
          type: BookstoreProject.Controllers.ManageController.ManageMessageId
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: BookstoreProject.Controllers.ManageController.ManageMessageId.Error
      commentId: F:BookstoreProject.Controllers.ManageController.ManageMessageId.Error
      language: CSharp
      name:
        CSharp: Error
        VB: Error
      nameWithType:
        CSharp: ManageController.ManageMessageId.Error
        VB: ManageController.ManageMessageId.Error
      qualifiedName:
        CSharp: BookstoreProject.Controllers.ManageController.ManageMessageId.Error
        VB: BookstoreProject.Controllers.ManageController.ManageMessageId.Error
      type: Field
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Controllers
      source:
        id: Error
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Controllers\ManageController.cs
        startLine: 383
      syntax:
        content:
          CSharp: Error = 6
          VB: Error = 6
        return:
          type: BookstoreProject.Controllers.ManageController.ManageMessageId
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
- id: BookstoreProject.Migrations
  commentId: N:BookstoreProject.Migrations
  language: CSharp
  name:
    CSharp: BookstoreProject.Migrations
    VB: BookstoreProject.Migrations
  nameWithType:
    CSharp: BookstoreProject.Migrations
    VB: BookstoreProject.Migrations
  qualifiedName:
    CSharp: BookstoreProject.Migrations
    VB: BookstoreProject.Migrations
  type: Namespace
  assemblies:
  - BookstoreProject
  modifiers: {}
  items:
  - id: BookstoreProject.Migrations.bookproperties
    commentId: T:BookstoreProject.Migrations.bookproperties
    language: CSharp
    name:
      CSharp: bookproperties
      VB: bookproperties
    nameWithType:
      CSharp: bookproperties
      VB: bookproperties
    qualifiedName:
      CSharp: BookstoreProject.Migrations.bookproperties
      VB: BookstoreProject.Migrations.bookproperties
    type: Class
    assemblies:
    - BookstoreProject
    namespace: BookstoreProject.Migrations
    source:
      id: bookproperties
      path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Migrations\202105030328277_book-properties.Designer.cs
      startLine: 8
    syntax:
      content:
        CSharp: 'public sealed class bookproperties : DbMigration, IDbMigration, IMigrationMetadata'
        VB: >-
          Public NotInheritable Class bookproperties

              Inherits DbMigration

              Implements IDbMigration, IMigrationMetadata
    inheritance:
    - System.Object
    - System.Data.Entity.Migrations.DbMigration
    implements:
    - System.Data.Entity.Migrations.Infrastructure.IDbMigration
    - System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata
    inheritedMembers:
    - System.Data.Entity.Migrations.DbMigration.CreateStoredProcedure(System.String,System.String,System.Object)
    - System.Data.Entity.Migrations.DbMigration.CreateStoredProcedure``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ParameterBuilder,{TParameters}},System.String,System.Object)
    - System.Data.Entity.Migrations.DbMigration.AlterStoredProcedure(System.String,System.String,System.Object)
    - System.Data.Entity.Migrations.DbMigration.AlterStoredProcedure``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ParameterBuilder,{TParameters}},System.String,System.Object)
    - System.Data.Entity.Migrations.DbMigration.DropStoredProcedure(System.String,System.Object)
    - System.Data.Entity.Migrations.DbMigration.CreateTable``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,{TColumns}},System.Object)
    - System.Data.Entity.Migrations.DbMigration.CreateTable``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,{TColumns}},System.Collections.Generic.IDictionary{System.String,System.Object},System.Object)
    - System.Data.Entity.Migrations.DbMigration.AlterTableAnnotations``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,{TColumns}},System.Collections.Generic.IDictionary{System.String,System.Data.Entity.Infrastructure.Annotations.AnnotationValues},System.Object)
    - System.Data.Entity.Migrations.DbMigration.AddForeignKey(System.String,System.String,System.String,System.String,System.Boolean,System.String,System.Object)
    - System.Data.Entity.Migrations.DbMigration.AddForeignKey(System.String,System.String[],System.String,System.String[],System.Boolean,System.String,System.Object)
    - System.Data.Entity.Migrations.DbMigration.DropForeignKey(System.String,System.String,System.Object)
    - System.Data.Entity.Migrations.DbMigration.DropForeignKey(System.String,System.String,System.String,System.Object)
    - System.Data.Entity.Migrations.DbMigration.DropForeignKey(System.String,System.String,System.String,System.String,System.Object)
    - System.Data.Entity.Migrations.DbMigration.DropForeignKey(System.String,System.String[],System.String,System.Object)
    - System.Data.Entity.Migrations.DbMigration.DropTable(System.String,System.Object)
    - System.Data.Entity.Migrations.DbMigration.DropTable(System.String,System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IDictionary{System.String,System.Object}},System.Object)
    - System.Data.Entity.Migrations.DbMigration.DropTable(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Object)
    - System.Data.Entity.Migrations.DbMigration.DropTable(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IDictionary{System.String,System.Object}},System.Object)
    - System.Data.Entity.Migrations.DbMigration.MoveTable(System.String,System.String,System.Object)
    - System.Data.Entity.Migrations.DbMigration.MoveStoredProcedure(System.String,System.String,System.Object)
    - System.Data.Entity.Migrations.DbMigration.RenameTable(System.String,System.String,System.Object)
    - System.Data.Entity.Migrations.DbMigration.RenameStoredProcedure(System.String,System.String,System.Object)
    - System.Data.Entity.Migrations.DbMigration.RenameColumn(System.String,System.String,System.String,System.Object)
    - System.Data.Entity.Migrations.DbMigration.AddColumn(System.String,System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,System.Data.Entity.Migrations.Model.ColumnModel},System.Object)
    - System.Data.Entity.Migrations.DbMigration.DropColumn(System.String,System.String,System.Object)
    - System.Data.Entity.Migrations.DbMigration.DropColumn(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Object)
    - System.Data.Entity.Migrations.DbMigration.AlterColumn(System.String,System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,System.Data.Entity.Migrations.Model.ColumnModel},System.Object)
    - System.Data.Entity.Migrations.DbMigration.AddPrimaryKey(System.String,System.String,System.String,System.Boolean,System.Object)
    - System.Data.Entity.Migrations.DbMigration.AddPrimaryKey(System.String,System.String[],System.String,System.Boolean,System.Object)
    - System.Data.Entity.Migrations.DbMigration.DropPrimaryKey(System.String,System.String,System.Object)
    - System.Data.Entity.Migrations.DbMigration.DropPrimaryKey(System.String,System.Object)
    - System.Data.Entity.Migrations.DbMigration.CreateIndex(System.String,System.String,System.Boolean,System.String,System.Boolean,System.Object)
    - System.Data.Entity.Migrations.DbMigration.CreateIndex(System.String,System.String[],System.Boolean,System.String,System.Boolean,System.Object)
    - System.Data.Entity.Migrations.DbMigration.DropIndex(System.String,System.String,System.Object)
    - System.Data.Entity.Migrations.DbMigration.DropIndex(System.String,System.String[],System.Object)
    - System.Data.Entity.Migrations.DbMigration.RenameIndex(System.String,System.String,System.String,System.Object)
    - System.Data.Entity.Migrations.DbMigration.Sql(System.String,System.Boolean,System.Object)
    - System.Data.Entity.Migrations.DbMigration.SqlFile(System.String,System.Boolean,System.Object)
    - System.Data.Entity.Migrations.DbMigration.SqlResource(System.String,System.Reflection.Assembly,System.Boolean,System.Object)
    - System.Data.Entity.Migrations.DbMigration.System#Data#Entity#Migrations#Infrastructure#IDbMigration#AddOperation(System.Data.Entity.Migrations.Model.MigrationOperation)
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: BookstoreProject.Migrations.bookproperties.Up
      commentId: M:BookstoreProject.Migrations.bookproperties.Up
      language: CSharp
      name:
        CSharp: Up()
        VB: Up()
      nameWithType:
        CSharp: bookproperties.Up()
        VB: bookproperties.Up()
      qualifiedName:
        CSharp: BookstoreProject.Migrations.bookproperties.Up()
        VB: BookstoreProject.Migrations.bookproperties.Up()
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Migrations
      source:
        id: Up
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Migrations\202105030328277_book-properties.cs
        startLine: 7
      syntax:
        content:
          CSharp: public override void Up()
          VB: Public Overrides Sub Up
      overload: BookstoreProject.Migrations.bookproperties.Up*
      overridden: System.Data.Entity.Migrations.DbMigration.Up
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: BookstoreProject.Migrations.bookproperties.Down
      commentId: M:BookstoreProject.Migrations.bookproperties.Down
      language: CSharp
      name:
        CSharp: Down()
        VB: Down()
      nameWithType:
        CSharp: bookproperties.Down()
        VB: bookproperties.Down()
      qualifiedName:
        CSharp: BookstoreProject.Migrations.bookproperties.Down()
        VB: BookstoreProject.Migrations.bookproperties.Down()
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Migrations
      source:
        id: Down
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Migrations\202105030328277_book-properties.cs
        startLine: 23
      syntax:
        content:
          CSharp: public override void Down()
          VB: Public Overrides Sub Down
      overload: BookstoreProject.Migrations.bookproperties.Down*
      overridden: System.Data.Entity.Migrations.DbMigration.Down
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - isEii: true
      id: BookstoreProject.Migrations.bookproperties.System#Data#Entity#Migrations#Infrastructure#IMigrationMetadata#Id
      commentId: P:BookstoreProject.Migrations.bookproperties.System#Data#Entity#Migrations#Infrastructure#IMigrationMetadata#Id
      language: CSharp
      name:
        CSharp: IMigrationMetadata.Id
        VB: System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Id
      nameWithType:
        CSharp: bookproperties.IMigrationMetadata.Id
        VB: bookproperties.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Id
      qualifiedName:
        CSharp: BookstoreProject.Migrations.bookproperties.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Id
        VB: BookstoreProject.Migrations.bookproperties.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Id
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Migrations
      source:
        id: System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Id
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Migrations\202105030328277_book-properties.Designer.cs
        startLine: 13
      syntax:
        content:
          CSharp: string IMigrationMetadata.Id { get; }
          VB: ReadOnly WriteOnly Property System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Id As String Implements IMigrationMetadata.Id
        parameters: []
        return:
          type: System.String
      overload: BookstoreProject.Migrations.bookproperties.System#Data#Entity#Migrations#Infrastructure#IMigrationMetadata#Id*
      implements:
      - System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Id
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - isEii: true
      id: BookstoreProject.Migrations.bookproperties.System#Data#Entity#Migrations#Infrastructure#IMigrationMetadata#Source
      commentId: P:BookstoreProject.Migrations.bookproperties.System#Data#Entity#Migrations#Infrastructure#IMigrationMetadata#Source
      language: CSharp
      name:
        CSharp: IMigrationMetadata.Source
        VB: System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Source
      nameWithType:
        CSharp: bookproperties.IMigrationMetadata.Source
        VB: bookproperties.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Source
      qualifiedName:
        CSharp: BookstoreProject.Migrations.bookproperties.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Source
        VB: BookstoreProject.Migrations.bookproperties.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Source
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Migrations
      source:
        id: System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Source
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Migrations\202105030328277_book-properties.Designer.cs
        startLine: 18
      syntax:
        content:
          CSharp: string IMigrationMetadata.Source { get; }
          VB: ReadOnly WriteOnly Property System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Source As String Implements IMigrationMetadata.Source
        parameters: []
        return:
          type: System.String
      overload: BookstoreProject.Migrations.bookproperties.System#Data#Entity#Migrations#Infrastructure#IMigrationMetadata#Source*
      implements:
      - System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Source
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - isEii: true
      id: BookstoreProject.Migrations.bookproperties.System#Data#Entity#Migrations#Infrastructure#IMigrationMetadata#Target
      commentId: P:BookstoreProject.Migrations.bookproperties.System#Data#Entity#Migrations#Infrastructure#IMigrationMetadata#Target
      language: CSharp
      name:
        CSharp: IMigrationMetadata.Target
        VB: System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Target
      nameWithType:
        CSharp: bookproperties.IMigrationMetadata.Target
        VB: bookproperties.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Target
      qualifiedName:
        CSharp: BookstoreProject.Migrations.bookproperties.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Target
        VB: BookstoreProject.Migrations.bookproperties.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Target
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Migrations
      source:
        id: System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Target
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Migrations\202105030328277_book-properties.Designer.cs
        startLine: 23
      syntax:
        content:
          CSharp: string IMigrationMetadata.Target { get; }
          VB: ReadOnly WriteOnly Property System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Target As String Implements IMigrationMetadata.Target
        parameters: []
        return:
          type: System.String
      overload: BookstoreProject.Migrations.bookproperties.System#Data#Entity#Migrations#Infrastructure#IMigrationMetadata#Target*
      implements:
      - System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Target
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
- id: BookstoreProject.Models
  commentId: N:BookstoreProject.Models
  language: CSharp
  name:
    CSharp: BookstoreProject.Models
    VB: BookstoreProject.Models
  nameWithType:
    CSharp: BookstoreProject.Models
    VB: BookstoreProject.Models
  qualifiedName:
    CSharp: BookstoreProject.Models
    VB: BookstoreProject.Models
  type: Namespace
  assemblies:
  - BookstoreProject
  modifiers: {}
  items:
  - id: BookstoreProject.Models.ExternalLoginConfirmationViewModel
    commentId: T:BookstoreProject.Models.ExternalLoginConfirmationViewModel
    language: CSharp
    name:
      CSharp: ExternalLoginConfirmationViewModel
      VB: ExternalLoginConfirmationViewModel
    nameWithType:
      CSharp: ExternalLoginConfirmationViewModel
      VB: ExternalLoginConfirmationViewModel
    qualifiedName:
      CSharp: BookstoreProject.Models.ExternalLoginConfirmationViewModel
      VB: BookstoreProject.Models.ExternalLoginConfirmationViewModel
    type: Class
    assemblies:
    - BookstoreProject
    namespace: BookstoreProject.Models
    source:
      id: ExternalLoginConfirmationViewModel
      path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\AccountViewModels.cs
      startLine: 5
    syntax:
      content:
        CSharp: public class ExternalLoginConfirmationViewModel
        VB: Public Class ExternalLoginConfirmationViewModel
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: BookstoreProject.Models.ExternalLoginConfirmationViewModel.Email
      commentId: P:BookstoreProject.Models.ExternalLoginConfirmationViewModel.Email
      language: CSharp
      name:
        CSharp: Email
        VB: Email
      nameWithType:
        CSharp: ExternalLoginConfirmationViewModel.Email
        VB: ExternalLoginConfirmationViewModel.Email
      qualifiedName:
        CSharp: BookstoreProject.Models.ExternalLoginConfirmationViewModel.Email
        VB: BookstoreProject.Models.ExternalLoginConfirmationViewModel.Email
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Models
      source:
        id: Email
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\AccountViewModels.cs
        startLine: 7
      syntax:
        content:
          CSharp: >-
            [Required]

            [Display(Name = "Email")]

            public string Email { get; set; }
          VB: >-
            <Required>

            <Display(Name:="Email")>

            Public Property Email As String
        parameters: []
        return:
          type: System.String
      overload: BookstoreProject.Models.ExternalLoginConfirmationViewModel.Email*
      attributes:
      - type: System.ComponentModel.DataAnnotations.RequiredAttribute
        ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
        arguments: []
      - type: System.ComponentModel.DataAnnotations.DisplayAttribute
        ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Name
          type: System.String
          value: Email
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: BookstoreProject.Models.ExternalLoginListViewModel
    commentId: T:BookstoreProject.Models.ExternalLoginListViewModel
    language: CSharp
    name:
      CSharp: ExternalLoginListViewModel
      VB: ExternalLoginListViewModel
    nameWithType:
      CSharp: ExternalLoginListViewModel
      VB: ExternalLoginListViewModel
    qualifiedName:
      CSharp: BookstoreProject.Models.ExternalLoginListViewModel
      VB: BookstoreProject.Models.ExternalLoginListViewModel
    type: Class
    assemblies:
    - BookstoreProject
    namespace: BookstoreProject.Models
    source:
      id: ExternalLoginListViewModel
      path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\AccountViewModels.cs
      startLine: 12
    syntax:
      content:
        CSharp: public class ExternalLoginListViewModel
        VB: Public Class ExternalLoginListViewModel
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: BookstoreProject.Models.ExternalLoginListViewModel.ReturnUrl
      commentId: P:BookstoreProject.Models.ExternalLoginListViewModel.ReturnUrl
      language: CSharp
      name:
        CSharp: ReturnUrl
        VB: ReturnUrl
      nameWithType:
        CSharp: ExternalLoginListViewModel.ReturnUrl
        VB: ExternalLoginListViewModel.ReturnUrl
      qualifiedName:
        CSharp: BookstoreProject.Models.ExternalLoginListViewModel.ReturnUrl
        VB: BookstoreProject.Models.ExternalLoginListViewModel.ReturnUrl
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Models
      source:
        id: ReturnUrl
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\AccountViewModels.cs
        startLine: 14
      syntax:
        content:
          CSharp: public string ReturnUrl { get; set; }
          VB: Public Property ReturnUrl As String
        parameters: []
        return:
          type: System.String
      overload: BookstoreProject.Models.ExternalLoginListViewModel.ReturnUrl*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: BookstoreProject.Models.SendCodeViewModel
    commentId: T:BookstoreProject.Models.SendCodeViewModel
    language: CSharp
    name:
      CSharp: SendCodeViewModel
      VB: SendCodeViewModel
    nameWithType:
      CSharp: SendCodeViewModel
      VB: SendCodeViewModel
    qualifiedName:
      CSharp: BookstoreProject.Models.SendCodeViewModel
      VB: BookstoreProject.Models.SendCodeViewModel
    type: Class
    assemblies:
    - BookstoreProject
    namespace: BookstoreProject.Models
    source:
      id: SendCodeViewModel
      path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\AccountViewModels.cs
      startLine: 17
    syntax:
      content:
        CSharp: public class SendCodeViewModel
        VB: Public Class SendCodeViewModel
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: BookstoreProject.Models.SendCodeViewModel.SelectedProvider
      commentId: P:BookstoreProject.Models.SendCodeViewModel.SelectedProvider
      language: CSharp
      name:
        CSharp: SelectedProvider
        VB: SelectedProvider
      nameWithType:
        CSharp: SendCodeViewModel.SelectedProvider
        VB: SendCodeViewModel.SelectedProvider
      qualifiedName:
        CSharp: BookstoreProject.Models.SendCodeViewModel.SelectedProvider
        VB: BookstoreProject.Models.SendCodeViewModel.SelectedProvider
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Models
      source:
        id: SelectedProvider
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\AccountViewModels.cs
        startLine: 19
      syntax:
        content:
          CSharp: public string SelectedProvider { get; set; }
          VB: Public Property SelectedProvider As String
        parameters: []
        return:
          type: System.String
      overload: BookstoreProject.Models.SendCodeViewModel.SelectedProvider*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: BookstoreProject.Models.SendCodeViewModel.Providers
      commentId: P:BookstoreProject.Models.SendCodeViewModel.Providers
      language: CSharp
      name:
        CSharp: Providers
        VB: Providers
      nameWithType:
        CSharp: SendCodeViewModel.Providers
        VB: SendCodeViewModel.Providers
      qualifiedName:
        CSharp: BookstoreProject.Models.SendCodeViewModel.Providers
        VB: BookstoreProject.Models.SendCodeViewModel.Providers
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Models
      source:
        id: Providers
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\AccountViewModels.cs
        startLine: 20
      syntax:
        content:
          CSharp: public ICollection<SelectListItem> Providers { get; set; }
          VB: Public Property Providers As ICollection(Of SelectListItem)
        parameters: []
        return:
          type: System.Collections.Generic.ICollection{System.Web.Mvc.SelectListItem}
      overload: BookstoreProject.Models.SendCodeViewModel.Providers*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: BookstoreProject.Models.SendCodeViewModel.ReturnUrl
      commentId: P:BookstoreProject.Models.SendCodeViewModel.ReturnUrl
      language: CSharp
      name:
        CSharp: ReturnUrl
        VB: ReturnUrl
      nameWithType:
        CSharp: SendCodeViewModel.ReturnUrl
        VB: SendCodeViewModel.ReturnUrl
      qualifiedName:
        CSharp: BookstoreProject.Models.SendCodeViewModel.ReturnUrl
        VB: BookstoreProject.Models.SendCodeViewModel.ReturnUrl
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Models
      source:
        id: ReturnUrl
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\AccountViewModels.cs
        startLine: 21
      syntax:
        content:
          CSharp: public string ReturnUrl { get; set; }
          VB: Public Property ReturnUrl As String
        parameters: []
        return:
          type: System.String
      overload: BookstoreProject.Models.SendCodeViewModel.ReturnUrl*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: BookstoreProject.Models.SendCodeViewModel.RememberMe
      commentId: P:BookstoreProject.Models.SendCodeViewModel.RememberMe
      language: CSharp
      name:
        CSharp: RememberMe
        VB: RememberMe
      nameWithType:
        CSharp: SendCodeViewModel.RememberMe
        VB: SendCodeViewModel.RememberMe
      qualifiedName:
        CSharp: BookstoreProject.Models.SendCodeViewModel.RememberMe
        VB: BookstoreProject.Models.SendCodeViewModel.RememberMe
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Models
      source:
        id: RememberMe
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\AccountViewModels.cs
        startLine: 22
      syntax:
        content:
          CSharp: public bool RememberMe { get; set; }
          VB: Public Property RememberMe As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: BookstoreProject.Models.SendCodeViewModel.RememberMe*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: BookstoreProject.Models.VerifyCodeViewModel
    commentId: T:BookstoreProject.Models.VerifyCodeViewModel
    language: CSharp
    name:
      CSharp: VerifyCodeViewModel
      VB: VerifyCodeViewModel
    nameWithType:
      CSharp: VerifyCodeViewModel
      VB: VerifyCodeViewModel
    qualifiedName:
      CSharp: BookstoreProject.Models.VerifyCodeViewModel
      VB: BookstoreProject.Models.VerifyCodeViewModel
    type: Class
    assemblies:
    - BookstoreProject
    namespace: BookstoreProject.Models
    source:
      id: VerifyCodeViewModel
      path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\AccountViewModels.cs
      startLine: 25
    syntax:
      content:
        CSharp: public class VerifyCodeViewModel
        VB: Public Class VerifyCodeViewModel
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: BookstoreProject.Models.VerifyCodeViewModel.Provider
      commentId: P:BookstoreProject.Models.VerifyCodeViewModel.Provider
      language: CSharp
      name:
        CSharp: Provider
        VB: Provider
      nameWithType:
        CSharp: VerifyCodeViewModel.Provider
        VB: VerifyCodeViewModel.Provider
      qualifiedName:
        CSharp: BookstoreProject.Models.VerifyCodeViewModel.Provider
        VB: BookstoreProject.Models.VerifyCodeViewModel.Provider
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Models
      source:
        id: Provider
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\AccountViewModels.cs
        startLine: 27
      syntax:
        content:
          CSharp: >-
            [Required]

            public string Provider { get; set; }
          VB: >-
            <Required>

            Public Property Provider As String
        parameters: []
        return:
          type: System.String
      overload: BookstoreProject.Models.VerifyCodeViewModel.Provider*
      attributes:
      - type: System.ComponentModel.DataAnnotations.RequiredAttribute
        ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: BookstoreProject.Models.VerifyCodeViewModel.Code
      commentId: P:BookstoreProject.Models.VerifyCodeViewModel.Code
      language: CSharp
      name:
        CSharp: Code
        VB: Code
      nameWithType:
        CSharp: VerifyCodeViewModel.Code
        VB: VerifyCodeViewModel.Code
      qualifiedName:
        CSharp: BookstoreProject.Models.VerifyCodeViewModel.Code
        VB: BookstoreProject.Models.VerifyCodeViewModel.Code
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Models
      source:
        id: Code
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\AccountViewModels.cs
        startLine: 30
      syntax:
        content:
          CSharp: >-
            [Required]

            [Display(Name = "Code")]

            public string Code { get; set; }
          VB: >-
            <Required>

            <Display(Name:="Code")>

            Public Property Code As String
        parameters: []
        return:
          type: System.String
      overload: BookstoreProject.Models.VerifyCodeViewModel.Code*
      attributes:
      - type: System.ComponentModel.DataAnnotations.RequiredAttribute
        ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
        arguments: []
      - type: System.ComponentModel.DataAnnotations.DisplayAttribute
        ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Name
          type: System.String
          value: Code
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: BookstoreProject.Models.VerifyCodeViewModel.ReturnUrl
      commentId: P:BookstoreProject.Models.VerifyCodeViewModel.ReturnUrl
      language: CSharp
      name:
        CSharp: ReturnUrl
        VB: ReturnUrl
      nameWithType:
        CSharp: VerifyCodeViewModel.ReturnUrl
        VB: VerifyCodeViewModel.ReturnUrl
      qualifiedName:
        CSharp: BookstoreProject.Models.VerifyCodeViewModel.ReturnUrl
        VB: BookstoreProject.Models.VerifyCodeViewModel.ReturnUrl
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Models
      source:
        id: ReturnUrl
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\AccountViewModels.cs
        startLine: 33
      syntax:
        content:
          CSharp: public string ReturnUrl { get; set; }
          VB: Public Property ReturnUrl As String
        parameters: []
        return:
          type: System.String
      overload: BookstoreProject.Models.VerifyCodeViewModel.ReturnUrl*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: BookstoreProject.Models.VerifyCodeViewModel.RememberBrowser
      commentId: P:BookstoreProject.Models.VerifyCodeViewModel.RememberBrowser
      language: CSharp
      name:
        CSharp: RememberBrowser
        VB: RememberBrowser
      nameWithType:
        CSharp: VerifyCodeViewModel.RememberBrowser
        VB: VerifyCodeViewModel.RememberBrowser
      qualifiedName:
        CSharp: BookstoreProject.Models.VerifyCodeViewModel.RememberBrowser
        VB: BookstoreProject.Models.VerifyCodeViewModel.RememberBrowser
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Models
      source:
        id: RememberBrowser
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\AccountViewModels.cs
        startLine: 35
      syntax:
        content:
          CSharp: >-
            [Display(Name = "Remember this browser?")]

            public bool RememberBrowser { get; set; }
          VB: >-
            <Display(Name:="Remember this browser?")>

            Public Property RememberBrowser As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: BookstoreProject.Models.VerifyCodeViewModel.RememberBrowser*
      attributes:
      - type: System.ComponentModel.DataAnnotations.DisplayAttribute
        ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Name
          type: System.String
          value: Remember this browser?
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: BookstoreProject.Models.VerifyCodeViewModel.RememberMe
      commentId: P:BookstoreProject.Models.VerifyCodeViewModel.RememberMe
      language: CSharp
      name:
        CSharp: RememberMe
        VB: RememberMe
      nameWithType:
        CSharp: VerifyCodeViewModel.RememberMe
        VB: VerifyCodeViewModel.RememberMe
      qualifiedName:
        CSharp: BookstoreProject.Models.VerifyCodeViewModel.RememberMe
        VB: BookstoreProject.Models.VerifyCodeViewModel.RememberMe
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Models
      source:
        id: RememberMe
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\AccountViewModels.cs
        startLine: 38
      syntax:
        content:
          CSharp: public bool RememberMe { get; set; }
          VB: Public Property RememberMe As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: BookstoreProject.Models.VerifyCodeViewModel.RememberMe*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: BookstoreProject.Models.ForgotViewModel
    commentId: T:BookstoreProject.Models.ForgotViewModel
    language: CSharp
    name:
      CSharp: ForgotViewModel
      VB: ForgotViewModel
    nameWithType:
      CSharp: ForgotViewModel
      VB: ForgotViewModel
    qualifiedName:
      CSharp: BookstoreProject.Models.ForgotViewModel
      VB: BookstoreProject.Models.ForgotViewModel
    type: Class
    assemblies:
    - BookstoreProject
    namespace: BookstoreProject.Models
    source:
      id: ForgotViewModel
      path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\AccountViewModels.cs
      startLine: 41
    syntax:
      content:
        CSharp: public class ForgotViewModel
        VB: Public Class ForgotViewModel
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: BookstoreProject.Models.ForgotViewModel.Email
      commentId: P:BookstoreProject.Models.ForgotViewModel.Email
      language: CSharp
      name:
        CSharp: Email
        VB: Email
      nameWithType:
        CSharp: ForgotViewModel.Email
        VB: ForgotViewModel.Email
      qualifiedName:
        CSharp: BookstoreProject.Models.ForgotViewModel.Email
        VB: BookstoreProject.Models.ForgotViewModel.Email
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Models
      source:
        id: Email
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\AccountViewModels.cs
        startLine: 43
      syntax:
        content:
          CSharp: >-
            [Required]

            [Display(Name = "Email")]

            public string Email { get; set; }
          VB: >-
            <Required>

            <Display(Name:="Email")>

            Public Property Email As String
        parameters: []
        return:
          type: System.String
      overload: BookstoreProject.Models.ForgotViewModel.Email*
      attributes:
      - type: System.ComponentModel.DataAnnotations.RequiredAttribute
        ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
        arguments: []
      - type: System.ComponentModel.DataAnnotations.DisplayAttribute
        ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Name
          type: System.String
          value: Email
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: BookstoreProject.Models.LoginViewModel
    commentId: T:BookstoreProject.Models.LoginViewModel
    language: CSharp
    name:
      CSharp: LoginViewModel
      VB: LoginViewModel
    nameWithType:
      CSharp: LoginViewModel
      VB: LoginViewModel
    qualifiedName:
      CSharp: BookstoreProject.Models.LoginViewModel
      VB: BookstoreProject.Models.LoginViewModel
    type: Class
    assemblies:
    - BookstoreProject
    namespace: BookstoreProject.Models
    source:
      id: LoginViewModel
      path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\AccountViewModels.cs
      startLine: 48
    syntax:
      content:
        CSharp: public class LoginViewModel
        VB: Public Class LoginViewModel
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: BookstoreProject.Models.LoginViewModel.Email
      commentId: P:BookstoreProject.Models.LoginViewModel.Email
      language: CSharp
      name:
        CSharp: Email
        VB: Email
      nameWithType:
        CSharp: LoginViewModel.Email
        VB: LoginViewModel.Email
      qualifiedName:
        CSharp: BookstoreProject.Models.LoginViewModel.Email
        VB: BookstoreProject.Models.LoginViewModel.Email
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Models
      source:
        id: Email
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\AccountViewModels.cs
        startLine: 50
      syntax:
        content:
          CSharp: >-
            [Required]

            [Display(Name = "Email")]

            [EmailAddress]

            public string Email { get; set; }
          VB: >-
            <Required>

            <Display(Name:="Email")>

            <EmailAddress>

            Public Property Email As String
        parameters: []
        return:
          type: System.String
      overload: BookstoreProject.Models.LoginViewModel.Email*
      attributes:
      - type: System.ComponentModel.DataAnnotations.RequiredAttribute
        ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
        arguments: []
      - type: System.ComponentModel.DataAnnotations.DisplayAttribute
        ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Name
          type: System.String
          value: Email
      - type: System.ComponentModel.DataAnnotations.EmailAddressAttribute
        ctor: System.ComponentModel.DataAnnotations.EmailAddressAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: BookstoreProject.Models.LoginViewModel.Password
      commentId: P:BookstoreProject.Models.LoginViewModel.Password
      language: CSharp
      name:
        CSharp: Password
        VB: Password
      nameWithType:
        CSharp: LoginViewModel.Password
        VB: LoginViewModel.Password
      qualifiedName:
        CSharp: BookstoreProject.Models.LoginViewModel.Password
        VB: BookstoreProject.Models.LoginViewModel.Password
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Models
      source:
        id: Password
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\AccountViewModels.cs
        startLine: 55
      syntax:
        content:
          CSharp: >-
            [Required]

            [DataType(DataType.Password)]

            [Display(Name = "Password")]

            public string Password { get; set; }
          VB: >-
            <Required>

            <DataType(DataType.Password)>

            <Display(Name:="Password")>

            Public Property Password As String
        parameters: []
        return:
          type: System.String
      overload: BookstoreProject.Models.LoginViewModel.Password*
      attributes:
      - type: System.ComponentModel.DataAnnotations.RequiredAttribute
        ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
        arguments: []
      - type: System.ComponentModel.DataAnnotations.DataTypeAttribute
        ctor: System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)
        arguments:
        - type: System.ComponentModel.DataAnnotations.DataType
          value: 11
      - type: System.ComponentModel.DataAnnotations.DisplayAttribute
        ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Name
          type: System.String
          value: Password
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: BookstoreProject.Models.LoginViewModel.RememberMe
      commentId: P:BookstoreProject.Models.LoginViewModel.RememberMe
      language: CSharp
      name:
        CSharp: RememberMe
        VB: RememberMe
      nameWithType:
        CSharp: LoginViewModel.RememberMe
        VB: LoginViewModel.RememberMe
      qualifiedName:
        CSharp: BookstoreProject.Models.LoginViewModel.RememberMe
        VB: BookstoreProject.Models.LoginViewModel.RememberMe
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Models
      source:
        id: RememberMe
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\AccountViewModels.cs
        startLine: 60
      syntax:
        content:
          CSharp: >-
            [Display(Name = "Remember me?")]

            public bool RememberMe { get; set; }
          VB: >-
            <Display(Name:="Remember me?")>

            Public Property RememberMe As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: BookstoreProject.Models.LoginViewModel.RememberMe*
      attributes:
      - type: System.ComponentModel.DataAnnotations.DisplayAttribute
        ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Name
          type: System.String
          value: Remember me?
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: BookstoreProject.Models.RegisterViewModel
    commentId: T:BookstoreProject.Models.RegisterViewModel
    language: CSharp
    name:
      CSharp: RegisterViewModel
      VB: RegisterViewModel
    nameWithType:
      CSharp: RegisterViewModel
      VB: RegisterViewModel
    qualifiedName:
      CSharp: BookstoreProject.Models.RegisterViewModel
      VB: BookstoreProject.Models.RegisterViewModel
    type: Class
    assemblies:
    - BookstoreProject
    namespace: BookstoreProject.Models
    source:
      id: RegisterViewModel
      path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\AccountViewModels.cs
      startLine: 64
    syntax:
      content:
        CSharp: public class RegisterViewModel
        VB: Public Class RegisterViewModel
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: BookstoreProject.Models.RegisterViewModel.Email
      commentId: P:BookstoreProject.Models.RegisterViewModel.Email
      language: CSharp
      name:
        CSharp: Email
        VB: Email
      nameWithType:
        CSharp: RegisterViewModel.Email
        VB: RegisterViewModel.Email
      qualifiedName:
        CSharp: BookstoreProject.Models.RegisterViewModel.Email
        VB: BookstoreProject.Models.RegisterViewModel.Email
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Models
      source:
        id: Email
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\AccountViewModels.cs
        startLine: 66
      syntax:
        content:
          CSharp: >-
            [Required]

            [EmailAddress]

            [Display(Name = "Email")]

            public string Email { get; set; }
          VB: >-
            <Required>

            <EmailAddress>

            <Display(Name:="Email")>

            Public Property Email As String
        parameters: []
        return:
          type: System.String
      overload: BookstoreProject.Models.RegisterViewModel.Email*
      attributes:
      - type: System.ComponentModel.DataAnnotations.RequiredAttribute
        ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
        arguments: []
      - type: System.ComponentModel.DataAnnotations.EmailAddressAttribute
        ctor: System.ComponentModel.DataAnnotations.EmailAddressAttribute.#ctor
        arguments: []
      - type: System.ComponentModel.DataAnnotations.DisplayAttribute
        ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Name
          type: System.String
          value: Email
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: BookstoreProject.Models.RegisterViewModel.Password
      commentId: P:BookstoreProject.Models.RegisterViewModel.Password
      language: CSharp
      name:
        CSharp: Password
        VB: Password
      nameWithType:
        CSharp: RegisterViewModel.Password
        VB: RegisterViewModel.Password
      qualifiedName:
        CSharp: BookstoreProject.Models.RegisterViewModel.Password
        VB: BookstoreProject.Models.RegisterViewModel.Password
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Models
      source:
        id: Password
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\AccountViewModels.cs
        startLine: 71
      syntax:
        content:
          CSharp: >-
            [Required]

            [StringLength(100, ErrorMessage = "The {0} must be at least {2} characters long.", MinimumLength = 6)]

            [DataType(DataType.Password)]

            [Display(Name = "Password")]

            public string Password { get; set; }
          VB: >-
            <Required>

            <StringLength(100, ErrorMessage:="The {0} must be at least {2} characters long.", MinimumLength:=6)>

            <DataType(DataType.Password)>

            <Display(Name:="Password")>

            Public Property Password As String
        parameters: []
        return:
          type: System.String
      overload: BookstoreProject.Models.RegisterViewModel.Password*
      attributes:
      - type: System.ComponentModel.DataAnnotations.RequiredAttribute
        ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
        arguments: []
      - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
        ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
        arguments:
        - type: System.Int32
          value: 100
        namedArguments:
        - name: ErrorMessage
          type: System.String
          value: The {0} must be at least {2} characters long.
        - name: MinimumLength
          type: System.Int32
          value: 6
      - type: System.ComponentModel.DataAnnotations.DataTypeAttribute
        ctor: System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)
        arguments:
        - type: System.ComponentModel.DataAnnotations.DataType
          value: 11
      - type: System.ComponentModel.DataAnnotations.DisplayAttribute
        ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Name
          type: System.String
          value: Password
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: BookstoreProject.Models.RegisterViewModel.ConfirmPassword
      commentId: P:BookstoreProject.Models.RegisterViewModel.ConfirmPassword
      language: CSharp
      name:
        CSharp: ConfirmPassword
        VB: ConfirmPassword
      nameWithType:
        CSharp: RegisterViewModel.ConfirmPassword
        VB: RegisterViewModel.ConfirmPassword
      qualifiedName:
        CSharp: BookstoreProject.Models.RegisterViewModel.ConfirmPassword
        VB: BookstoreProject.Models.RegisterViewModel.ConfirmPassword
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Models
      source:
        id: ConfirmPassword
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\AccountViewModels.cs
        startLine: 77
      syntax:
        content:
          CSharp: >-
            [DataType(DataType.Password)]

            [Display(Name = "Confirm password")]

            [Compare("Password", ErrorMessage = "The password and confirmation password do not match.")]

            public string ConfirmPassword { get; set; }
          VB: >-
            <DataType(DataType.Password)>

            <Display(Name:="Confirm password")>

            <Compare("Password", ErrorMessage:="The password and confirmation password do not match.")>

            Public Property ConfirmPassword As String
        parameters: []
        return:
          type: System.String
      overload: BookstoreProject.Models.RegisterViewModel.ConfirmPassword*
      attributes:
      - type: System.ComponentModel.DataAnnotations.DataTypeAttribute
        ctor: System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)
        arguments:
        - type: System.ComponentModel.DataAnnotations.DataType
          value: 11
      - type: System.ComponentModel.DataAnnotations.DisplayAttribute
        ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Name
          type: System.String
          value: Confirm password
      - type: System.ComponentModel.DataAnnotations.CompareAttribute
        ctor: System.ComponentModel.DataAnnotations.CompareAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: Password
        namedArguments:
        - name: ErrorMessage
          type: System.String
          value: The password and confirmation password do not match.
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: BookstoreProject.Models.ResetPasswordViewModel
    commentId: T:BookstoreProject.Models.ResetPasswordViewModel
    language: CSharp
    name:
      CSharp: ResetPasswordViewModel
      VB: ResetPasswordViewModel
    nameWithType:
      CSharp: ResetPasswordViewModel
      VB: ResetPasswordViewModel
    qualifiedName:
      CSharp: BookstoreProject.Models.ResetPasswordViewModel
      VB: BookstoreProject.Models.ResetPasswordViewModel
    type: Class
    assemblies:
    - BookstoreProject
    namespace: BookstoreProject.Models
    source:
      id: ResetPasswordViewModel
      path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\AccountViewModels.cs
      startLine: 83
    syntax:
      content:
        CSharp: public class ResetPasswordViewModel
        VB: Public Class ResetPasswordViewModel
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: BookstoreProject.Models.ResetPasswordViewModel.Email
      commentId: P:BookstoreProject.Models.ResetPasswordViewModel.Email
      language: CSharp
      name:
        CSharp: Email
        VB: Email
      nameWithType:
        CSharp: ResetPasswordViewModel.Email
        VB: ResetPasswordViewModel.Email
      qualifiedName:
        CSharp: BookstoreProject.Models.ResetPasswordViewModel.Email
        VB: BookstoreProject.Models.ResetPasswordViewModel.Email
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Models
      source:
        id: Email
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\AccountViewModels.cs
        startLine: 85
      syntax:
        content:
          CSharp: >-
            [Required]

            [EmailAddress]

            [Display(Name = "Email")]

            public string Email { get; set; }
          VB: >-
            <Required>

            <EmailAddress>

            <Display(Name:="Email")>

            Public Property Email As String
        parameters: []
        return:
          type: System.String
      overload: BookstoreProject.Models.ResetPasswordViewModel.Email*
      attributes:
      - type: System.ComponentModel.DataAnnotations.RequiredAttribute
        ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
        arguments: []
      - type: System.ComponentModel.DataAnnotations.EmailAddressAttribute
        ctor: System.ComponentModel.DataAnnotations.EmailAddressAttribute.#ctor
        arguments: []
      - type: System.ComponentModel.DataAnnotations.DisplayAttribute
        ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Name
          type: System.String
          value: Email
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: BookstoreProject.Models.ResetPasswordViewModel.Password
      commentId: P:BookstoreProject.Models.ResetPasswordViewModel.Password
      language: CSharp
      name:
        CSharp: Password
        VB: Password
      nameWithType:
        CSharp: ResetPasswordViewModel.Password
        VB: ResetPasswordViewModel.Password
      qualifiedName:
        CSharp: BookstoreProject.Models.ResetPasswordViewModel.Password
        VB: BookstoreProject.Models.ResetPasswordViewModel.Password
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Models
      source:
        id: Password
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\AccountViewModels.cs
        startLine: 90
      syntax:
        content:
          CSharp: >-
            [Required]

            [StringLength(100, ErrorMessage = "The {0} must be at least {2} characters long.", MinimumLength = 6)]

            [DataType(DataType.Password)]

            [Display(Name = "Password")]

            public string Password { get; set; }
          VB: >-
            <Required>

            <StringLength(100, ErrorMessage:="The {0} must be at least {2} characters long.", MinimumLength:=6)>

            <DataType(DataType.Password)>

            <Display(Name:="Password")>

            Public Property Password As String
        parameters: []
        return:
          type: System.String
      overload: BookstoreProject.Models.ResetPasswordViewModel.Password*
      attributes:
      - type: System.ComponentModel.DataAnnotations.RequiredAttribute
        ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
        arguments: []
      - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
        ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
        arguments:
        - type: System.Int32
          value: 100
        namedArguments:
        - name: ErrorMessage
          type: System.String
          value: The {0} must be at least {2} characters long.
        - name: MinimumLength
          type: System.Int32
          value: 6
      - type: System.ComponentModel.DataAnnotations.DataTypeAttribute
        ctor: System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)
        arguments:
        - type: System.ComponentModel.DataAnnotations.DataType
          value: 11
      - type: System.ComponentModel.DataAnnotations.DisplayAttribute
        ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Name
          type: System.String
          value: Password
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: BookstoreProject.Models.ResetPasswordViewModel.ConfirmPassword
      commentId: P:BookstoreProject.Models.ResetPasswordViewModel.ConfirmPassword
      language: CSharp
      name:
        CSharp: ConfirmPassword
        VB: ConfirmPassword
      nameWithType:
        CSharp: ResetPasswordViewModel.ConfirmPassword
        VB: ResetPasswordViewModel.ConfirmPassword
      qualifiedName:
        CSharp: BookstoreProject.Models.ResetPasswordViewModel.ConfirmPassword
        VB: BookstoreProject.Models.ResetPasswordViewModel.ConfirmPassword
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Models
      source:
        id: ConfirmPassword
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\AccountViewModels.cs
        startLine: 96
      syntax:
        content:
          CSharp: >-
            [DataType(DataType.Password)]

            [Display(Name = "Confirm password")]

            [Compare("Password", ErrorMessage = "The password and confirmation password do not match.")]

            public string ConfirmPassword { get; set; }
          VB: >-
            <DataType(DataType.Password)>

            <Display(Name:="Confirm password")>

            <Compare("Password", ErrorMessage:="The password and confirmation password do not match.")>

            Public Property ConfirmPassword As String
        parameters: []
        return:
          type: System.String
      overload: BookstoreProject.Models.ResetPasswordViewModel.ConfirmPassword*
      attributes:
      - type: System.ComponentModel.DataAnnotations.DataTypeAttribute
        ctor: System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)
        arguments:
        - type: System.ComponentModel.DataAnnotations.DataType
          value: 11
      - type: System.ComponentModel.DataAnnotations.DisplayAttribute
        ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Name
          type: System.String
          value: Confirm password
      - type: System.ComponentModel.DataAnnotations.CompareAttribute
        ctor: System.ComponentModel.DataAnnotations.CompareAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: Password
        namedArguments:
        - name: ErrorMessage
          type: System.String
          value: The password and confirmation password do not match.
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: BookstoreProject.Models.ResetPasswordViewModel.Code
      commentId: P:BookstoreProject.Models.ResetPasswordViewModel.Code
      language: CSharp
      name:
        CSharp: Code
        VB: Code
      nameWithType:
        CSharp: ResetPasswordViewModel.Code
        VB: ResetPasswordViewModel.Code
      qualifiedName:
        CSharp: BookstoreProject.Models.ResetPasswordViewModel.Code
        VB: BookstoreProject.Models.ResetPasswordViewModel.Code
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Models
      source:
        id: Code
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\AccountViewModels.cs
        startLine: 101
      syntax:
        content:
          CSharp: public string Code { get; set; }
          VB: Public Property Code As String
        parameters: []
        return:
          type: System.String
      overload: BookstoreProject.Models.ResetPasswordViewModel.Code*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: BookstoreProject.Models.ForgotPasswordViewModel
    commentId: T:BookstoreProject.Models.ForgotPasswordViewModel
    language: CSharp
    name:
      CSharp: ForgotPasswordViewModel
      VB: ForgotPasswordViewModel
    nameWithType:
      CSharp: ForgotPasswordViewModel
      VB: ForgotPasswordViewModel
    qualifiedName:
      CSharp: BookstoreProject.Models.ForgotPasswordViewModel
      VB: BookstoreProject.Models.ForgotPasswordViewModel
    type: Class
    assemblies:
    - BookstoreProject
    namespace: BookstoreProject.Models
    source:
      id: ForgotPasswordViewModel
      path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\AccountViewModels.cs
      startLine: 104
    syntax:
      content:
        CSharp: public class ForgotPasswordViewModel
        VB: Public Class ForgotPasswordViewModel
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: BookstoreProject.Models.ForgotPasswordViewModel.Email
      commentId: P:BookstoreProject.Models.ForgotPasswordViewModel.Email
      language: CSharp
      name:
        CSharp: Email
        VB: Email
      nameWithType:
        CSharp: ForgotPasswordViewModel.Email
        VB: ForgotPasswordViewModel.Email
      qualifiedName:
        CSharp: BookstoreProject.Models.ForgotPasswordViewModel.Email
        VB: BookstoreProject.Models.ForgotPasswordViewModel.Email
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Models
      source:
        id: Email
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\AccountViewModels.cs
        startLine: 106
      syntax:
        content:
          CSharp: >-
            [Required]

            [EmailAddress]

            [Display(Name = "Email")]

            public string Email { get; set; }
          VB: >-
            <Required>

            <EmailAddress>

            <Display(Name:="Email")>

            Public Property Email As String
        parameters: []
        return:
          type: System.String
      overload: BookstoreProject.Models.ForgotPasswordViewModel.Email*
      attributes:
      - type: System.ComponentModel.DataAnnotations.RequiredAttribute
        ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
        arguments: []
      - type: System.ComponentModel.DataAnnotations.EmailAddressAttribute
        ctor: System.ComponentModel.DataAnnotations.EmailAddressAttribute.#ctor
        arguments: []
      - type: System.ComponentModel.DataAnnotations.DisplayAttribute
        ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Name
          type: System.String
          value: Email
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: BookstoreProject.Models.Book
    commentId: T:BookstoreProject.Models.Book
    language: CSharp
    name:
      CSharp: Book
      VB: Book
    nameWithType:
      CSharp: Book
      VB: Book
    qualifiedName:
      CSharp: BookstoreProject.Models.Book
      VB: BookstoreProject.Models.Book
    type: Class
    assemblies:
    - BookstoreProject
    namespace: BookstoreProject.Models
    source:
      id: Book
      path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\Book.cs
      startLine: 14
    summary: "\nThe Book model\nContains get and set methods for each member variable\n"
    example: []
    syntax:
      content:
        CSharp: public class Book
        VB: Public Class Book
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: BookstoreProject.Models.Book.ID
      commentId: P:BookstoreProject.Models.Book.ID
      language: CSharp
      name:
        CSharp: ID
        VB: ID
      nameWithType:
        CSharp: Book.ID
        VB: Book.ID
      qualifiedName:
        CSharp: BookstoreProject.Models.Book.ID
        VB: BookstoreProject.Models.Book.ID
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Models
      source:
        id: ID
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\Book.cs
        startLine: 16
      syntax:
        content:
          CSharp: public int ID { get; set; }
          VB: Public Property ID As Integer
        parameters: []
        return:
          type: System.Int32
      overload: BookstoreProject.Models.Book.ID*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: BookstoreProject.Models.Book.Title
      commentId: P:BookstoreProject.Models.Book.Title
      language: CSharp
      name:
        CSharp: Title
        VB: Title
      nameWithType:
        CSharp: Book.Title
        VB: Book.Title
      qualifiedName:
        CSharp: BookstoreProject.Models.Book.Title
        VB: BookstoreProject.Models.Book.Title
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Models
      source:
        id: Title
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\Book.cs
        startLine: 17
      syntax:
        content:
          CSharp: >-
            [StringLength(154)]

            [Required]

            public string Title { get; set; }
          VB: >-
            <StringLength(154)>

            <Required>

            Public Property Title As String
        parameters: []
        return:
          type: System.String
      overload: BookstoreProject.Models.Book.Title*
      attributes:
      - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
        ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
        arguments:
        - type: System.Int32
          value: 154
      - type: System.ComponentModel.DataAnnotations.RequiredAttribute
        ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: BookstoreProject.Models.Book.Author
      commentId: P:BookstoreProject.Models.Book.Author
      language: CSharp
      name:
        CSharp: Author
        VB: Author
      nameWithType:
        CSharp: Book.Author
        VB: Book.Author
      qualifiedName:
        CSharp: BookstoreProject.Models.Book.Author
        VB: BookstoreProject.Models.Book.Author
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Models
      source:
        id: Author
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\Book.cs
        startLine: 20
      syntax:
        content:
          CSharp: >-
            [StringLength(154)]

            [Required]

            public string Author { get; set; }
          VB: >-
            <StringLength(154)>

            <Required>

            Public Property Author As String
        parameters: []
        return:
          type: System.String
      overload: BookstoreProject.Models.Book.Author*
      attributes:
      - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
        ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
        arguments:
        - type: System.Int32
          value: 154
      - type: System.ComponentModel.DataAnnotations.RequiredAttribute
        ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: BookstoreProject.Models.Book.Price
      commentId: P:BookstoreProject.Models.Book.Price
      language: CSharp
      name:
        CSharp: Price
        VB: Price
      nameWithType:
        CSharp: Book.Price
        VB: Book.Price
      qualifiedName:
        CSharp: BookstoreProject.Models.Book.Price
        VB: BookstoreProject.Models.Book.Price
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Models
      source:
        id: Price
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\Book.cs
        startLine: 23
      syntax:
        content:
          CSharp: >-
            [Required]

            public double Price { get; set; }
          VB: >-
            <Required>

            Public Property Price As Double
        parameters: []
        return:
          type: System.Double
      overload: BookstoreProject.Models.Book.Price*
      attributes:
      - type: System.ComponentModel.DataAnnotations.RequiredAttribute
        ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: BookstoreProject.Models.Book.ReleaseDate
      commentId: P:BookstoreProject.Models.Book.ReleaseDate
      language: CSharp
      name:
        CSharp: ReleaseDate
        VB: ReleaseDate
      nameWithType:
        CSharp: Book.ReleaseDate
        VB: Book.ReleaseDate
      qualifiedName:
        CSharp: BookstoreProject.Models.Book.ReleaseDate
        VB: BookstoreProject.Models.Book.ReleaseDate
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Models
      source:
        id: ReleaseDate
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\Book.cs
        startLine: 25
      syntax:
        content:
          CSharp: >-
            [Required]

            [DataType(DataType.Date)]

            [DisplayFormat(DataFormatString = "{0:dd/MM/yyyy}", ApplyFormatInEditMode = true)]

            public DateTime? ReleaseDate { get; set; }
          VB: >-
            <Required>

            <DataType(DataType.Date)>

            <DisplayFormat(DataFormatString:="{0:dd/MM/yyyy}", ApplyFormatInEditMode:=True)>

            Public Property ReleaseDate As Date?
        parameters: []
        return:
          type: System.Nullable{System.DateTime}
      overload: BookstoreProject.Models.Book.ReleaseDate*
      attributes:
      - type: System.ComponentModel.DataAnnotations.RequiredAttribute
        ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
        arguments: []
      - type: System.ComponentModel.DataAnnotations.DataTypeAttribute
        ctor: System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)
        arguments:
        - type: System.ComponentModel.DataAnnotations.DataType
          value: 2
      - type: System.ComponentModel.DataAnnotations.DisplayFormatAttribute
        ctor: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.#ctor
        arguments: []
        namedArguments:
        - name: DataFormatString
          type: System.String
          value: '{0:dd/MM/yyyy}'
        - name: ApplyFormatInEditMode
          type: System.Boolean
          value: true
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: BookstoreProject.Models.BookDBContext
    commentId: T:BookstoreProject.Models.BookDBContext
    language: CSharp
    name:
      CSharp: BookDBContext
      VB: BookDBContext
    nameWithType:
      CSharp: BookDBContext
      VB: BookDBContext
    qualifiedName:
      CSharp: BookstoreProject.Models.BookDBContext
      VB: BookstoreProject.Models.BookDBContext
    type: Class
    assemblies:
    - BookstoreProject
    namespace: BookstoreProject.Models
    source:
      id: BookDBContext
      path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\Book.cs
      startLine: 35
    summary: "\nThe BookDBContext class\nInherits from DbContext and contains a DbSet with a generic type of Book\n"
    example: []
    syntax:
      content:
        CSharp: 'public class BookDBContext : DbContext, IDisposable, IObjectContextAdapter'
        VB: >-
          Public Class BookDBContext

              Inherits DbContext

              Implements IDisposable, IObjectContextAdapter
    inheritance:
    - System.Object
    - System.Data.Entity.DbContext
    implements:
    - System.IDisposable
    - System.Data.Entity.Infrastructure.IObjectContextAdapter
    inheritedMembers:
    - System.Data.Entity.DbContext.OnModelCreating(System.Data.Entity.DbModelBuilder)
    - System.Data.Entity.DbContext.Set``1
    - System.Data.Entity.DbContext.Set(System.Type)
    - System.Data.Entity.DbContext.SaveChanges
    - System.Data.Entity.DbContext.SaveChangesAsync
    - System.Data.Entity.DbContext.SaveChangesAsync(System.Threading.CancellationToken)
    - System.Data.Entity.DbContext.GetValidationErrors
    - System.Data.Entity.DbContext.ShouldValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry)
    - System.Data.Entity.DbContext.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})
    - System.Data.Entity.DbContext.Entry``1({TEntity})
    - System.Data.Entity.DbContext.Entry(System.Object)
    - System.Data.Entity.DbContext.Dispose
    - System.Data.Entity.DbContext.Dispose(System.Boolean)
    - System.Data.Entity.DbContext.Database
    - System.Data.Entity.DbContext.System#Data#Entity#Infrastructure#IObjectContextAdapter#ObjectContext
    - System.Data.Entity.DbContext.ChangeTracker
    - System.Data.Entity.DbContext.Configuration
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: BookstoreProject.Models.BookDBContext.Books
      commentId: P:BookstoreProject.Models.BookDBContext.Books
      language: CSharp
      name:
        CSharp: Books
        VB: Books
      nameWithType:
        CSharp: BookDBContext.Books
        VB: BookDBContext.Books
      qualifiedName:
        CSharp: BookstoreProject.Models.BookDBContext.Books
        VB: BookstoreProject.Models.BookDBContext.Books
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Models
      source:
        id: Books
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\Book.cs
        startLine: 38
      syntax:
        content:
          CSharp: public DbSet<Book> Books { get; set; }
          VB: Public Property Books As DbSet(Of Book)
        parameters: []
        return:
          type: System.Data.Entity.DbSet{BookstoreProject.Models.Book}
      overload: BookstoreProject.Models.BookDBContext.Books*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: BookstoreProject.Models.ApplicationUser
    commentId: T:BookstoreProject.Models.ApplicationUser
    language: CSharp
    name:
      CSharp: ApplicationUser
      VB: ApplicationUser
    nameWithType:
      CSharp: ApplicationUser
      VB: ApplicationUser
    qualifiedName:
      CSharp: BookstoreProject.Models.ApplicationUser
      VB: BookstoreProject.Models.ApplicationUser
    type: Class
    assemblies:
    - BookstoreProject
    namespace: BookstoreProject.Models
    source:
      id: ApplicationUser
      path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\IdentityModels.cs
      startLine: 9
    syntax:
      content:
        CSharp: 'public class ApplicationUser : IdentityUser, IUser, IUser<string>'
        VB: >-
          Public Class ApplicationUser

              Inherits IdentityUser

              Implements IUser, IUser(Of String)
    inheritance:
    - System.Object
    - Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}
    - Microsoft.AspNet.Identity.EntityFramework.IdentityUser
    implements:
    - Microsoft.AspNet.Identity.IUser
    - Microsoft.AspNet.Identity.IUser{System.String}
    inheritedMembers:
    - Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.Email
    - Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.EmailConfirmed
    - Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.PasswordHash
    - Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.SecurityStamp
    - Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.PhoneNumber
    - Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.PhoneNumberConfirmed
    - Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.TwoFactorEnabled
    - Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.LockoutEndDateUtc
    - Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.LockoutEnabled
    - Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.AccessFailedCount
    - Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.Roles
    - Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.Claims
    - Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.Logins
    - Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.Id
    - Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.UserName
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: BookstoreProject.Models.ApplicationUser.GenerateUserIdentityAsync(Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser})
      commentId: M:BookstoreProject.Models.ApplicationUser.GenerateUserIdentityAsync(Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser})
      language: CSharp
      name:
        CSharp: GenerateUserIdentityAsync(UserManager<ApplicationUser>)
        VB: GenerateUserIdentityAsync(UserManager(Of ApplicationUser))
      nameWithType:
        CSharp: ApplicationUser.GenerateUserIdentityAsync(UserManager<ApplicationUser>)
        VB: ApplicationUser.GenerateUserIdentityAsync(UserManager(Of ApplicationUser))
      qualifiedName:
        CSharp: BookstoreProject.Models.ApplicationUser.GenerateUserIdentityAsync(Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser>)
        VB: BookstoreProject.Models.ApplicationUser.GenerateUserIdentityAsync(Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser))
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Models
      source:
        id: GenerateUserIdentityAsync
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\IdentityModels.cs
        startLine: 11
      syntax:
        content:
          CSharp: public Task<ClaimsIdentity> GenerateUserIdentityAsync(UserManager<ApplicationUser> manager)
          VB: Public Function GenerateUserIdentityAsync(manager As UserManager(Of ApplicationUser)) As Task(Of ClaimsIdentity)
        parameters:
        - id: manager
          type: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser}
        return:
          type: System.Threading.Tasks.Task{System.Security.Claims.ClaimsIdentity}
      overload: BookstoreProject.Models.ApplicationUser.GenerateUserIdentityAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: BookstoreProject.Models.ApplicationDbContext
    commentId: T:BookstoreProject.Models.ApplicationDbContext
    language: CSharp
    name:
      CSharp: ApplicationDbContext
      VB: ApplicationDbContext
    nameWithType:
      CSharp: ApplicationDbContext
      VB: ApplicationDbContext
    qualifiedName:
      CSharp: BookstoreProject.Models.ApplicationDbContext
      VB: BookstoreProject.Models.ApplicationDbContext
    type: Class
    assemblies:
    - BookstoreProject
    namespace: BookstoreProject.Models
    source:
      id: ApplicationDbContext
      path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\IdentityModels.cs
      startLine: 20
    syntax:
      content:
        CSharp: 'public class ApplicationDbContext : IdentityDbContext<ApplicationUser>, IDisposable, IObjectContextAdapter'
        VB: >-
          Public Class ApplicationDbContext

              Inherits IdentityDbContext(Of ApplicationUser)

              Implements IDisposable, IObjectContextAdapter
    inheritance:
    - System.Object
    - System.Data.Entity.DbContext
    - Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{BookstoreProject.Models.ApplicationUser,Microsoft.AspNet.Identity.EntityFramework.IdentityRole,System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}
    - Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{BookstoreProject.Models.ApplicationUser}
    implements:
    - System.IDisposable
    - System.Data.Entity.Infrastructure.IObjectContextAdapter
    inheritedMembers:
    - Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{BookstoreProject.Models.ApplicationUser,Microsoft.AspNet.Identity.EntityFramework.IdentityRole,System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.OnModelCreating(System.Data.Entity.DbModelBuilder)
    - Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{BookstoreProject.Models.ApplicationUser,Microsoft.AspNet.Identity.EntityFramework.IdentityRole,System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})
    - Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{BookstoreProject.Models.ApplicationUser,Microsoft.AspNet.Identity.EntityFramework.IdentityRole,System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.Users
    - Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{BookstoreProject.Models.ApplicationUser,Microsoft.AspNet.Identity.EntityFramework.IdentityRole,System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.Roles
    - Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{BookstoreProject.Models.ApplicationUser,Microsoft.AspNet.Identity.EntityFramework.IdentityRole,System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.RequireUniqueEmail
    - System.Data.Entity.DbContext.OnModelCreating(System.Data.Entity.DbModelBuilder)
    - System.Data.Entity.DbContext.Set``1
    - System.Data.Entity.DbContext.Set(System.Type)
    - System.Data.Entity.DbContext.SaveChanges
    - System.Data.Entity.DbContext.SaveChangesAsync
    - System.Data.Entity.DbContext.SaveChangesAsync(System.Threading.CancellationToken)
    - System.Data.Entity.DbContext.GetValidationErrors
    - System.Data.Entity.DbContext.ShouldValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry)
    - System.Data.Entity.DbContext.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})
    - System.Data.Entity.DbContext.Entry``1({TEntity})
    - System.Data.Entity.DbContext.Entry(System.Object)
    - System.Data.Entity.DbContext.Dispose
    - System.Data.Entity.DbContext.Dispose(System.Boolean)
    - System.Data.Entity.DbContext.Database
    - System.Data.Entity.DbContext.System#Data#Entity#Infrastructure#IObjectContextAdapter#ObjectContext
    - System.Data.Entity.DbContext.ChangeTracker
    - System.Data.Entity.DbContext.Configuration
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: BookstoreProject.Models.ApplicationDbContext.#ctor
      commentId: M:BookstoreProject.Models.ApplicationDbContext.#ctor
      language: CSharp
      name:
        CSharp: ApplicationDbContext()
        VB: ApplicationDbContext()
      nameWithType:
        CSharp: ApplicationDbContext.ApplicationDbContext()
        VB: ApplicationDbContext.ApplicationDbContext()
      qualifiedName:
        CSharp: BookstoreProject.Models.ApplicationDbContext.ApplicationDbContext()
        VB: BookstoreProject.Models.ApplicationDbContext.ApplicationDbContext()
      type: Constructor
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Models
      source:
        id: .ctor
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\IdentityModels.cs
        startLine: 22
      syntax:
        content:
          CSharp: public ApplicationDbContext()
          VB: Public Sub New
      overload: BookstoreProject.Models.ApplicationDbContext.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: BookstoreProject.Models.ApplicationDbContext.Create
      commentId: M:BookstoreProject.Models.ApplicationDbContext.Create
      language: CSharp
      name:
        CSharp: Create()
        VB: Create()
      nameWithType:
        CSharp: ApplicationDbContext.Create()
        VB: ApplicationDbContext.Create()
      qualifiedName:
        CSharp: BookstoreProject.Models.ApplicationDbContext.Create()
        VB: BookstoreProject.Models.ApplicationDbContext.Create()
      type: Method
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Models
      source:
        id: Create
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\IdentityModels.cs
        startLine: 27
      syntax:
        content:
          CSharp: public static ApplicationDbContext Create()
          VB: Public Shared Function Create As ApplicationDbContext
        return:
          type: BookstoreProject.Models.ApplicationDbContext
      overload: BookstoreProject.Models.ApplicationDbContext.Create*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: BookstoreProject.Models.IndexViewModel
    commentId: T:BookstoreProject.Models.IndexViewModel
    language: CSharp
    name:
      CSharp: IndexViewModel
      VB: IndexViewModel
    nameWithType:
      CSharp: IndexViewModel
      VB: IndexViewModel
    qualifiedName:
      CSharp: BookstoreProject.Models.IndexViewModel
      VB: BookstoreProject.Models.IndexViewModel
    type: Class
    assemblies:
    - BookstoreProject
    namespace: BookstoreProject.Models
    source:
      id: IndexViewModel
      path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\ManageViewModels.cs
      startLine: 7
    syntax:
      content:
        CSharp: public class IndexViewModel
        VB: Public Class IndexViewModel
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: BookstoreProject.Models.IndexViewModel.HasPassword
      commentId: P:BookstoreProject.Models.IndexViewModel.HasPassword
      language: CSharp
      name:
        CSharp: HasPassword
        VB: HasPassword
      nameWithType:
        CSharp: IndexViewModel.HasPassword
        VB: IndexViewModel.HasPassword
      qualifiedName:
        CSharp: BookstoreProject.Models.IndexViewModel.HasPassword
        VB: BookstoreProject.Models.IndexViewModel.HasPassword
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Models
      source:
        id: HasPassword
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\ManageViewModels.cs
        startLine: 9
      syntax:
        content:
          CSharp: public bool HasPassword { get; set; }
          VB: Public Property HasPassword As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: BookstoreProject.Models.IndexViewModel.HasPassword*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: BookstoreProject.Models.IndexViewModel.Logins
      commentId: P:BookstoreProject.Models.IndexViewModel.Logins
      language: CSharp
      name:
        CSharp: Logins
        VB: Logins
      nameWithType:
        CSharp: IndexViewModel.Logins
        VB: IndexViewModel.Logins
      qualifiedName:
        CSharp: BookstoreProject.Models.IndexViewModel.Logins
        VB: BookstoreProject.Models.IndexViewModel.Logins
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Models
      source:
        id: Logins
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\ManageViewModels.cs
        startLine: 10
      syntax:
        content:
          CSharp: public IList<UserLoginInfo> Logins { get; set; }
          VB: Public Property Logins As IList(Of UserLoginInfo)
        parameters: []
        return:
          type: System.Collections.Generic.IList{Microsoft.AspNet.Identity.UserLoginInfo}
      overload: BookstoreProject.Models.IndexViewModel.Logins*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: BookstoreProject.Models.IndexViewModel.PhoneNumber
      commentId: P:BookstoreProject.Models.IndexViewModel.PhoneNumber
      language: CSharp
      name:
        CSharp: PhoneNumber
        VB: PhoneNumber
      nameWithType:
        CSharp: IndexViewModel.PhoneNumber
        VB: IndexViewModel.PhoneNumber
      qualifiedName:
        CSharp: BookstoreProject.Models.IndexViewModel.PhoneNumber
        VB: BookstoreProject.Models.IndexViewModel.PhoneNumber
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Models
      source:
        id: PhoneNumber
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\ManageViewModels.cs
        startLine: 11
      syntax:
        content:
          CSharp: public string PhoneNumber { get; set; }
          VB: Public Property PhoneNumber As String
        parameters: []
        return:
          type: System.String
      overload: BookstoreProject.Models.IndexViewModel.PhoneNumber*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: BookstoreProject.Models.IndexViewModel.TwoFactor
      commentId: P:BookstoreProject.Models.IndexViewModel.TwoFactor
      language: CSharp
      name:
        CSharp: TwoFactor
        VB: TwoFactor
      nameWithType:
        CSharp: IndexViewModel.TwoFactor
        VB: IndexViewModel.TwoFactor
      qualifiedName:
        CSharp: BookstoreProject.Models.IndexViewModel.TwoFactor
        VB: BookstoreProject.Models.IndexViewModel.TwoFactor
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Models
      source:
        id: TwoFactor
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\ManageViewModels.cs
        startLine: 12
      syntax:
        content:
          CSharp: public bool TwoFactor { get; set; }
          VB: Public Property TwoFactor As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: BookstoreProject.Models.IndexViewModel.TwoFactor*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: BookstoreProject.Models.IndexViewModel.BrowserRemembered
      commentId: P:BookstoreProject.Models.IndexViewModel.BrowserRemembered
      language: CSharp
      name:
        CSharp: BrowserRemembered
        VB: BrowserRemembered
      nameWithType:
        CSharp: IndexViewModel.BrowserRemembered
        VB: IndexViewModel.BrowserRemembered
      qualifiedName:
        CSharp: BookstoreProject.Models.IndexViewModel.BrowserRemembered
        VB: BookstoreProject.Models.IndexViewModel.BrowserRemembered
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Models
      source:
        id: BrowserRemembered
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\ManageViewModels.cs
        startLine: 13
      syntax:
        content:
          CSharp: public bool BrowserRemembered { get; set; }
          VB: Public Property BrowserRemembered As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: BookstoreProject.Models.IndexViewModel.BrowserRemembered*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: BookstoreProject.Models.ManageLoginsViewModel
    commentId: T:BookstoreProject.Models.ManageLoginsViewModel
    language: CSharp
    name:
      CSharp: ManageLoginsViewModel
      VB: ManageLoginsViewModel
    nameWithType:
      CSharp: ManageLoginsViewModel
      VB: ManageLoginsViewModel
    qualifiedName:
      CSharp: BookstoreProject.Models.ManageLoginsViewModel
      VB: BookstoreProject.Models.ManageLoginsViewModel
    type: Class
    assemblies:
    - BookstoreProject
    namespace: BookstoreProject.Models
    source:
      id: ManageLoginsViewModel
      path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\ManageViewModels.cs
      startLine: 16
    syntax:
      content:
        CSharp: public class ManageLoginsViewModel
        VB: Public Class ManageLoginsViewModel
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: BookstoreProject.Models.ManageLoginsViewModel.CurrentLogins
      commentId: P:BookstoreProject.Models.ManageLoginsViewModel.CurrentLogins
      language: CSharp
      name:
        CSharp: CurrentLogins
        VB: CurrentLogins
      nameWithType:
        CSharp: ManageLoginsViewModel.CurrentLogins
        VB: ManageLoginsViewModel.CurrentLogins
      qualifiedName:
        CSharp: BookstoreProject.Models.ManageLoginsViewModel.CurrentLogins
        VB: BookstoreProject.Models.ManageLoginsViewModel.CurrentLogins
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Models
      source:
        id: CurrentLogins
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\ManageViewModels.cs
        startLine: 18
      syntax:
        content:
          CSharp: public IList<UserLoginInfo> CurrentLogins { get; set; }
          VB: Public Property CurrentLogins As IList(Of UserLoginInfo)
        parameters: []
        return:
          type: System.Collections.Generic.IList{Microsoft.AspNet.Identity.UserLoginInfo}
      overload: BookstoreProject.Models.ManageLoginsViewModel.CurrentLogins*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: BookstoreProject.Models.ManageLoginsViewModel.OtherLogins
      commentId: P:BookstoreProject.Models.ManageLoginsViewModel.OtherLogins
      language: CSharp
      name:
        CSharp: OtherLogins
        VB: OtherLogins
      nameWithType:
        CSharp: ManageLoginsViewModel.OtherLogins
        VB: ManageLoginsViewModel.OtherLogins
      qualifiedName:
        CSharp: BookstoreProject.Models.ManageLoginsViewModel.OtherLogins
        VB: BookstoreProject.Models.ManageLoginsViewModel.OtherLogins
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Models
      source:
        id: OtherLogins
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\ManageViewModels.cs
        startLine: 19
      syntax:
        content:
          CSharp: public IList<AuthenticationDescription> OtherLogins { get; set; }
          VB: Public Property OtherLogins As IList(Of AuthenticationDescription)
        parameters: []
        return:
          type: System.Collections.Generic.IList{Microsoft.Owin.Security.AuthenticationDescription}
      overload: BookstoreProject.Models.ManageLoginsViewModel.OtherLogins*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: BookstoreProject.Models.FactorViewModel
    commentId: T:BookstoreProject.Models.FactorViewModel
    language: CSharp
    name:
      CSharp: FactorViewModel
      VB: FactorViewModel
    nameWithType:
      CSharp: FactorViewModel
      VB: FactorViewModel
    qualifiedName:
      CSharp: BookstoreProject.Models.FactorViewModel
      VB: BookstoreProject.Models.FactorViewModel
    type: Class
    assemblies:
    - BookstoreProject
    namespace: BookstoreProject.Models
    source:
      id: FactorViewModel
      path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\ManageViewModels.cs
      startLine: 22
    syntax:
      content:
        CSharp: public class FactorViewModel
        VB: Public Class FactorViewModel
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: BookstoreProject.Models.FactorViewModel.Purpose
      commentId: P:BookstoreProject.Models.FactorViewModel.Purpose
      language: CSharp
      name:
        CSharp: Purpose
        VB: Purpose
      nameWithType:
        CSharp: FactorViewModel.Purpose
        VB: FactorViewModel.Purpose
      qualifiedName:
        CSharp: BookstoreProject.Models.FactorViewModel.Purpose
        VB: BookstoreProject.Models.FactorViewModel.Purpose
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Models
      source:
        id: Purpose
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\ManageViewModels.cs
        startLine: 24
      syntax:
        content:
          CSharp: public string Purpose { get; set; }
          VB: Public Property Purpose As String
        parameters: []
        return:
          type: System.String
      overload: BookstoreProject.Models.FactorViewModel.Purpose*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: BookstoreProject.Models.SetPasswordViewModel
    commentId: T:BookstoreProject.Models.SetPasswordViewModel
    language: CSharp
    name:
      CSharp: SetPasswordViewModel
      VB: SetPasswordViewModel
    nameWithType:
      CSharp: SetPasswordViewModel
      VB: SetPasswordViewModel
    qualifiedName:
      CSharp: BookstoreProject.Models.SetPasswordViewModel
      VB: BookstoreProject.Models.SetPasswordViewModel
    type: Class
    assemblies:
    - BookstoreProject
    namespace: BookstoreProject.Models
    source:
      id: SetPasswordViewModel
      path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\ManageViewModels.cs
      startLine: 27
    syntax:
      content:
        CSharp: public class SetPasswordViewModel
        VB: Public Class SetPasswordViewModel
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: BookstoreProject.Models.SetPasswordViewModel.NewPassword
      commentId: P:BookstoreProject.Models.SetPasswordViewModel.NewPassword
      language: CSharp
      name:
        CSharp: NewPassword
        VB: NewPassword
      nameWithType:
        CSharp: SetPasswordViewModel.NewPassword
        VB: SetPasswordViewModel.NewPassword
      qualifiedName:
        CSharp: BookstoreProject.Models.SetPasswordViewModel.NewPassword
        VB: BookstoreProject.Models.SetPasswordViewModel.NewPassword
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Models
      source:
        id: NewPassword
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\ManageViewModels.cs
        startLine: 29
      syntax:
        content:
          CSharp: >-
            [Required]

            [StringLength(100, ErrorMessage = "The {0} must be at least {2} characters long.", MinimumLength = 6)]

            [DataType(DataType.Password)]

            [Display(Name = "New password")]

            public string NewPassword { get; set; }
          VB: >-
            <Required>

            <StringLength(100, ErrorMessage:="The {0} must be at least {2} characters long.", MinimumLength:=6)>

            <DataType(DataType.Password)>

            <Display(Name:="New password")>

            Public Property NewPassword As String
        parameters: []
        return:
          type: System.String
      overload: BookstoreProject.Models.SetPasswordViewModel.NewPassword*
      attributes:
      - type: System.ComponentModel.DataAnnotations.RequiredAttribute
        ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
        arguments: []
      - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
        ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
        arguments:
        - type: System.Int32
          value: 100
        namedArguments:
        - name: ErrorMessage
          type: System.String
          value: The {0} must be at least {2} characters long.
        - name: MinimumLength
          type: System.Int32
          value: 6
      - type: System.ComponentModel.DataAnnotations.DataTypeAttribute
        ctor: System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)
        arguments:
        - type: System.ComponentModel.DataAnnotations.DataType
          value: 11
      - type: System.ComponentModel.DataAnnotations.DisplayAttribute
        ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Name
          type: System.String
          value: New password
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: BookstoreProject.Models.SetPasswordViewModel.ConfirmPassword
      commentId: P:BookstoreProject.Models.SetPasswordViewModel.ConfirmPassword
      language: CSharp
      name:
        CSharp: ConfirmPassword
        VB: ConfirmPassword
      nameWithType:
        CSharp: SetPasswordViewModel.ConfirmPassword
        VB: SetPasswordViewModel.ConfirmPassword
      qualifiedName:
        CSharp: BookstoreProject.Models.SetPasswordViewModel.ConfirmPassword
        VB: BookstoreProject.Models.SetPasswordViewModel.ConfirmPassword
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Models
      source:
        id: ConfirmPassword
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\ManageViewModels.cs
        startLine: 35
      syntax:
        content:
          CSharp: >-
            [DataType(DataType.Password)]

            [Display(Name = "Confirm new password")]

            [Compare("NewPassword", ErrorMessage = "The new password and confirmation password do not match.")]

            public string ConfirmPassword { get; set; }
          VB: >-
            <DataType(DataType.Password)>

            <Display(Name:="Confirm new password")>

            <Compare("NewPassword", ErrorMessage:="The new password and confirmation password do not match.")>

            Public Property ConfirmPassword As String
        parameters: []
        return:
          type: System.String
      overload: BookstoreProject.Models.SetPasswordViewModel.ConfirmPassword*
      attributes:
      - type: System.ComponentModel.DataAnnotations.DataTypeAttribute
        ctor: System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)
        arguments:
        - type: System.ComponentModel.DataAnnotations.DataType
          value: 11
      - type: System.ComponentModel.DataAnnotations.DisplayAttribute
        ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Name
          type: System.String
          value: Confirm new password
      - type: System.ComponentModel.DataAnnotations.CompareAttribute
        ctor: System.ComponentModel.DataAnnotations.CompareAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: NewPassword
        namedArguments:
        - name: ErrorMessage
          type: System.String
          value: The new password and confirmation password do not match.
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: BookstoreProject.Models.ChangePasswordViewModel
    commentId: T:BookstoreProject.Models.ChangePasswordViewModel
    language: CSharp
    name:
      CSharp: ChangePasswordViewModel
      VB: ChangePasswordViewModel
    nameWithType:
      CSharp: ChangePasswordViewModel
      VB: ChangePasswordViewModel
    qualifiedName:
      CSharp: BookstoreProject.Models.ChangePasswordViewModel
      VB: BookstoreProject.Models.ChangePasswordViewModel
    type: Class
    assemblies:
    - BookstoreProject
    namespace: BookstoreProject.Models
    source:
      id: ChangePasswordViewModel
      path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\ManageViewModels.cs
      startLine: 41
    syntax:
      content:
        CSharp: public class ChangePasswordViewModel
        VB: Public Class ChangePasswordViewModel
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: BookstoreProject.Models.ChangePasswordViewModel.OldPassword
      commentId: P:BookstoreProject.Models.ChangePasswordViewModel.OldPassword
      language: CSharp
      name:
        CSharp: OldPassword
        VB: OldPassword
      nameWithType:
        CSharp: ChangePasswordViewModel.OldPassword
        VB: ChangePasswordViewModel.OldPassword
      qualifiedName:
        CSharp: BookstoreProject.Models.ChangePasswordViewModel.OldPassword
        VB: BookstoreProject.Models.ChangePasswordViewModel.OldPassword
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Models
      source:
        id: OldPassword
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\ManageViewModels.cs
        startLine: 43
      syntax:
        content:
          CSharp: >-
            [Required]

            [DataType(DataType.Password)]

            [Display(Name = "Current password")]

            public string OldPassword { get; set; }
          VB: >-
            <Required>

            <DataType(DataType.Password)>

            <Display(Name:="Current password")>

            Public Property OldPassword As String
        parameters: []
        return:
          type: System.String
      overload: BookstoreProject.Models.ChangePasswordViewModel.OldPassword*
      attributes:
      - type: System.ComponentModel.DataAnnotations.RequiredAttribute
        ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
        arguments: []
      - type: System.ComponentModel.DataAnnotations.DataTypeAttribute
        ctor: System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)
        arguments:
        - type: System.ComponentModel.DataAnnotations.DataType
          value: 11
      - type: System.ComponentModel.DataAnnotations.DisplayAttribute
        ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Name
          type: System.String
          value: Current password
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: BookstoreProject.Models.ChangePasswordViewModel.NewPassword
      commentId: P:BookstoreProject.Models.ChangePasswordViewModel.NewPassword
      language: CSharp
      name:
        CSharp: NewPassword
        VB: NewPassword
      nameWithType:
        CSharp: ChangePasswordViewModel.NewPassword
        VB: ChangePasswordViewModel.NewPassword
      qualifiedName:
        CSharp: BookstoreProject.Models.ChangePasswordViewModel.NewPassword
        VB: BookstoreProject.Models.ChangePasswordViewModel.NewPassword
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Models
      source:
        id: NewPassword
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\ManageViewModels.cs
        startLine: 48
      syntax:
        content:
          CSharp: >-
            [Required]

            [StringLength(100, ErrorMessage = "The {0} must be at least {2} characters long.", MinimumLength = 6)]

            [DataType(DataType.Password)]

            [Display(Name = "New password")]

            public string NewPassword { get; set; }
          VB: >-
            <Required>

            <StringLength(100, ErrorMessage:="The {0} must be at least {2} characters long.", MinimumLength:=6)>

            <DataType(DataType.Password)>

            <Display(Name:="New password")>

            Public Property NewPassword As String
        parameters: []
        return:
          type: System.String
      overload: BookstoreProject.Models.ChangePasswordViewModel.NewPassword*
      attributes:
      - type: System.ComponentModel.DataAnnotations.RequiredAttribute
        ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
        arguments: []
      - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
        ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
        arguments:
        - type: System.Int32
          value: 100
        namedArguments:
        - name: ErrorMessage
          type: System.String
          value: The {0} must be at least {2} characters long.
        - name: MinimumLength
          type: System.Int32
          value: 6
      - type: System.ComponentModel.DataAnnotations.DataTypeAttribute
        ctor: System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)
        arguments:
        - type: System.ComponentModel.DataAnnotations.DataType
          value: 11
      - type: System.ComponentModel.DataAnnotations.DisplayAttribute
        ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Name
          type: System.String
          value: New password
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: BookstoreProject.Models.ChangePasswordViewModel.ConfirmPassword
      commentId: P:BookstoreProject.Models.ChangePasswordViewModel.ConfirmPassword
      language: CSharp
      name:
        CSharp: ConfirmPassword
        VB: ConfirmPassword
      nameWithType:
        CSharp: ChangePasswordViewModel.ConfirmPassword
        VB: ChangePasswordViewModel.ConfirmPassword
      qualifiedName:
        CSharp: BookstoreProject.Models.ChangePasswordViewModel.ConfirmPassword
        VB: BookstoreProject.Models.ChangePasswordViewModel.ConfirmPassword
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Models
      source:
        id: ConfirmPassword
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\ManageViewModels.cs
        startLine: 54
      syntax:
        content:
          CSharp: >-
            [DataType(DataType.Password)]

            [Display(Name = "Confirm new password")]

            [Compare("NewPassword", ErrorMessage = "The new password and confirmation password do not match.")]

            public string ConfirmPassword { get; set; }
          VB: >-
            <DataType(DataType.Password)>

            <Display(Name:="Confirm new password")>

            <Compare("NewPassword", ErrorMessage:="The new password and confirmation password do not match.")>

            Public Property ConfirmPassword As String
        parameters: []
        return:
          type: System.String
      overload: BookstoreProject.Models.ChangePasswordViewModel.ConfirmPassword*
      attributes:
      - type: System.ComponentModel.DataAnnotations.DataTypeAttribute
        ctor: System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)
        arguments:
        - type: System.ComponentModel.DataAnnotations.DataType
          value: 11
      - type: System.ComponentModel.DataAnnotations.DisplayAttribute
        ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Name
          type: System.String
          value: Confirm new password
      - type: System.ComponentModel.DataAnnotations.CompareAttribute
        ctor: System.ComponentModel.DataAnnotations.CompareAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: NewPassword
        namedArguments:
        - name: ErrorMessage
          type: System.String
          value: The new password and confirmation password do not match.
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: BookstoreProject.Models.AddPhoneNumberViewModel
    commentId: T:BookstoreProject.Models.AddPhoneNumberViewModel
    language: CSharp
    name:
      CSharp: AddPhoneNumberViewModel
      VB: AddPhoneNumberViewModel
    nameWithType:
      CSharp: AddPhoneNumberViewModel
      VB: AddPhoneNumberViewModel
    qualifiedName:
      CSharp: BookstoreProject.Models.AddPhoneNumberViewModel
      VB: BookstoreProject.Models.AddPhoneNumberViewModel
    type: Class
    assemblies:
    - BookstoreProject
    namespace: BookstoreProject.Models
    source:
      id: AddPhoneNumberViewModel
      path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\ManageViewModels.cs
      startLine: 60
    syntax:
      content:
        CSharp: public class AddPhoneNumberViewModel
        VB: Public Class AddPhoneNumberViewModel
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: BookstoreProject.Models.AddPhoneNumberViewModel.Number
      commentId: P:BookstoreProject.Models.AddPhoneNumberViewModel.Number
      language: CSharp
      name:
        CSharp: Number
        VB: Number
      nameWithType:
        CSharp: AddPhoneNumberViewModel.Number
        VB: AddPhoneNumberViewModel.Number
      qualifiedName:
        CSharp: BookstoreProject.Models.AddPhoneNumberViewModel.Number
        VB: BookstoreProject.Models.AddPhoneNumberViewModel.Number
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Models
      source:
        id: Number
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\ManageViewModels.cs
        startLine: 62
      syntax:
        content:
          CSharp: >-
            [Required]

            [Phone]

            [Display(Name = "Phone Number")]

            public string Number { get; set; }
          VB: >-
            <Required>

            <Phone>

            <Display(Name:="Phone Number")>

            Public Property Number As String
        parameters: []
        return:
          type: System.String
      overload: BookstoreProject.Models.AddPhoneNumberViewModel.Number*
      attributes:
      - type: System.ComponentModel.DataAnnotations.RequiredAttribute
        ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
        arguments: []
      - type: System.ComponentModel.DataAnnotations.PhoneAttribute
        ctor: System.ComponentModel.DataAnnotations.PhoneAttribute.#ctor
        arguments: []
      - type: System.ComponentModel.DataAnnotations.DisplayAttribute
        ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Name
          type: System.String
          value: Phone Number
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: BookstoreProject.Models.VerifyPhoneNumberViewModel
    commentId: T:BookstoreProject.Models.VerifyPhoneNumberViewModel
    language: CSharp
    name:
      CSharp: VerifyPhoneNumberViewModel
      VB: VerifyPhoneNumberViewModel
    nameWithType:
      CSharp: VerifyPhoneNumberViewModel
      VB: VerifyPhoneNumberViewModel
    qualifiedName:
      CSharp: BookstoreProject.Models.VerifyPhoneNumberViewModel
      VB: BookstoreProject.Models.VerifyPhoneNumberViewModel
    type: Class
    assemblies:
    - BookstoreProject
    namespace: BookstoreProject.Models
    source:
      id: VerifyPhoneNumberViewModel
      path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\ManageViewModels.cs
      startLine: 68
    syntax:
      content:
        CSharp: public class VerifyPhoneNumberViewModel
        VB: Public Class VerifyPhoneNumberViewModel
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: BookstoreProject.Models.VerifyPhoneNumberViewModel.Code
      commentId: P:BookstoreProject.Models.VerifyPhoneNumberViewModel.Code
      language: CSharp
      name:
        CSharp: Code
        VB: Code
      nameWithType:
        CSharp: VerifyPhoneNumberViewModel.Code
        VB: VerifyPhoneNumberViewModel.Code
      qualifiedName:
        CSharp: BookstoreProject.Models.VerifyPhoneNumberViewModel.Code
        VB: BookstoreProject.Models.VerifyPhoneNumberViewModel.Code
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Models
      source:
        id: Code
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\ManageViewModels.cs
        startLine: 70
      syntax:
        content:
          CSharp: >-
            [Required]

            [Display(Name = "Code")]

            public string Code { get; set; }
          VB: >-
            <Required>

            <Display(Name:="Code")>

            Public Property Code As String
        parameters: []
        return:
          type: System.String
      overload: BookstoreProject.Models.VerifyPhoneNumberViewModel.Code*
      attributes:
      - type: System.ComponentModel.DataAnnotations.RequiredAttribute
        ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
        arguments: []
      - type: System.ComponentModel.DataAnnotations.DisplayAttribute
        ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Name
          type: System.String
          value: Code
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: BookstoreProject.Models.VerifyPhoneNumberViewModel.PhoneNumber
      commentId: P:BookstoreProject.Models.VerifyPhoneNumberViewModel.PhoneNumber
      language: CSharp
      name:
        CSharp: PhoneNumber
        VB: PhoneNumber
      nameWithType:
        CSharp: VerifyPhoneNumberViewModel.PhoneNumber
        VB: VerifyPhoneNumberViewModel.PhoneNumber
      qualifiedName:
        CSharp: BookstoreProject.Models.VerifyPhoneNumberViewModel.PhoneNumber
        VB: BookstoreProject.Models.VerifyPhoneNumberViewModel.PhoneNumber
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Models
      source:
        id: PhoneNumber
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\ManageViewModels.cs
        startLine: 74
      syntax:
        content:
          CSharp: >-
            [Required]

            [Phone]

            [Display(Name = "Phone Number")]

            public string PhoneNumber { get; set; }
          VB: >-
            <Required>

            <Phone>

            <Display(Name:="Phone Number")>

            Public Property PhoneNumber As String
        parameters: []
        return:
          type: System.String
      overload: BookstoreProject.Models.VerifyPhoneNumberViewModel.PhoneNumber*
      attributes:
      - type: System.ComponentModel.DataAnnotations.RequiredAttribute
        ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
        arguments: []
      - type: System.ComponentModel.DataAnnotations.PhoneAttribute
        ctor: System.ComponentModel.DataAnnotations.PhoneAttribute.#ctor
        arguments: []
      - type: System.ComponentModel.DataAnnotations.DisplayAttribute
        ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
        arguments: []
        namedArguments:
        - name: Name
          type: System.String
          value: Phone Number
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: BookstoreProject.Models.ConfigureTwoFactorViewModel
    commentId: T:BookstoreProject.Models.ConfigureTwoFactorViewModel
    language: CSharp
    name:
      CSharp: ConfigureTwoFactorViewModel
      VB: ConfigureTwoFactorViewModel
    nameWithType:
      CSharp: ConfigureTwoFactorViewModel
      VB: ConfigureTwoFactorViewModel
    qualifiedName:
      CSharp: BookstoreProject.Models.ConfigureTwoFactorViewModel
      VB: BookstoreProject.Models.ConfigureTwoFactorViewModel
    type: Class
    assemblies:
    - BookstoreProject
    namespace: BookstoreProject.Models
    source:
      id: ConfigureTwoFactorViewModel
      path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\ManageViewModels.cs
      startLine: 80
    syntax:
      content:
        CSharp: public class ConfigureTwoFactorViewModel
        VB: Public Class ConfigureTwoFactorViewModel
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: BookstoreProject.Models.ConfigureTwoFactorViewModel.SelectedProvider
      commentId: P:BookstoreProject.Models.ConfigureTwoFactorViewModel.SelectedProvider
      language: CSharp
      name:
        CSharp: SelectedProvider
        VB: SelectedProvider
      nameWithType:
        CSharp: ConfigureTwoFactorViewModel.SelectedProvider
        VB: ConfigureTwoFactorViewModel.SelectedProvider
      qualifiedName:
        CSharp: BookstoreProject.Models.ConfigureTwoFactorViewModel.SelectedProvider
        VB: BookstoreProject.Models.ConfigureTwoFactorViewModel.SelectedProvider
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Models
      source:
        id: SelectedProvider
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\ManageViewModels.cs
        startLine: 82
      syntax:
        content:
          CSharp: public string SelectedProvider { get; set; }
          VB: Public Property SelectedProvider As String
        parameters: []
        return:
          type: System.String
      overload: BookstoreProject.Models.ConfigureTwoFactorViewModel.SelectedProvider*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: BookstoreProject.Models.ConfigureTwoFactorViewModel.Providers
      commentId: P:BookstoreProject.Models.ConfigureTwoFactorViewModel.Providers
      language: CSharp
      name:
        CSharp: Providers
        VB: Providers
      nameWithType:
        CSharp: ConfigureTwoFactorViewModel.Providers
        VB: ConfigureTwoFactorViewModel.Providers
      qualifiedName:
        CSharp: BookstoreProject.Models.ConfigureTwoFactorViewModel.Providers
        VB: BookstoreProject.Models.ConfigureTwoFactorViewModel.Providers
      type: Property
      assemblies:
      - BookstoreProject
      namespace: BookstoreProject.Models
      source:
        id: Providers
        path: C:\Users\timow\source\repos\BookstoreProject\BookstoreProject\Models\ManageViewModels.cs
        startLine: 83
      syntax:
        content:
          CSharp: public ICollection<SelectListItem> Providers { get; set; }
          VB: Public Property Providers As ICollection(Of SelectListItem)
        parameters: []
        return:
          type: System.Collections.Generic.ICollection{System.Web.Mvc.SelectListItem}
      overload: BookstoreProject.Models.ConfigureTwoFactorViewModel.Providers*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
references:
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  System.Object.ToString:
    name:
      CSharp:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ToString
  System.Object.Equals(System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object)
  System.Object.Equals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object,System.Object)
  System.Object.ReferenceEquals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  System.Object.GetHashCode:
    name:
      CSharp:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetHashCode
  System.Object.GetType:
    name:
      CSharp:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetType
  System.Object.MemberwiseClone:
    name:
      CSharp:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.MemberwiseClone
  System.Web.Optimization:
    name:
      CSharp:
      - name: System.Web.Optimization
        nameWithType: System.Web.Optimization
        qualifiedName: System.Web.Optimization
        isExternal: true
      VB:
      - name: System.Web.Optimization
        nameWithType: System.Web.Optimization
        qualifiedName: System.Web.Optimization
    isDefinition: true
    commentId: N:System.Web.Optimization
  System.Web.Optimization.BundleCollection:
    name:
      CSharp:
      - id: System.Web.Optimization.BundleCollection
        name: BundleCollection
        nameWithType: BundleCollection
        qualifiedName: System.Web.Optimization.BundleCollection
        isExternal: true
      VB:
      - id: System.Web.Optimization.BundleCollection
        name: BundleCollection
        nameWithType: BundleCollection
        qualifiedName: System.Web.Optimization.BundleCollection
        isExternal: true
    isDefinition: true
    parent: System.Web.Optimization
    commentId: T:System.Web.Optimization.BundleCollection
  BookstoreProject.BundleConfig.RegisterBundles*:
    name:
      CSharp:
      - id: BookstoreProject.BundleConfig.RegisterBundles*
        name: RegisterBundles
        nameWithType: BundleConfig.RegisterBundles
        qualifiedName: BookstoreProject.BundleConfig.RegisterBundles
      VB:
      - id: BookstoreProject.BundleConfig.RegisterBundles*
        name: RegisterBundles
        nameWithType: BundleConfig.RegisterBundles
        qualifiedName: BookstoreProject.BundleConfig.RegisterBundles
    isDefinition: true
    commentId: Overload:BookstoreProject.BundleConfig.RegisterBundles
  BookstoreProject.BundleConfig:
    name:
      CSharp:
      - id: BookstoreProject.BundleConfig
        name: BundleConfig
        nameWithType: BundleConfig
        qualifiedName: BookstoreProject.BundleConfig
      VB:
      - id: BookstoreProject.BundleConfig
        name: BundleConfig
        nameWithType: BundleConfig
        qualifiedName: BookstoreProject.BundleConfig
    isDefinition: true
    commentId: T:BookstoreProject.BundleConfig
  System.Web.Mvc:
    name:
      CSharp:
      - name: System.Web.Mvc
        nameWithType: System.Web.Mvc
        qualifiedName: System.Web.Mvc
        isExternal: true
      VB:
      - name: System.Web.Mvc
        nameWithType: System.Web.Mvc
        qualifiedName: System.Web.Mvc
    isDefinition: true
    commentId: N:System.Web.Mvc
  System.Web.Mvc.GlobalFilterCollection:
    name:
      CSharp:
      - id: System.Web.Mvc.GlobalFilterCollection
        name: GlobalFilterCollection
        nameWithType: GlobalFilterCollection
        qualifiedName: System.Web.Mvc.GlobalFilterCollection
        isExternal: true
      VB:
      - id: System.Web.Mvc.GlobalFilterCollection
        name: GlobalFilterCollection
        nameWithType: GlobalFilterCollection
        qualifiedName: System.Web.Mvc.GlobalFilterCollection
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc
    commentId: T:System.Web.Mvc.GlobalFilterCollection
  BookstoreProject.FilterConfig.RegisterGlobalFilters*:
    name:
      CSharp:
      - id: BookstoreProject.FilterConfig.RegisterGlobalFilters*
        name: RegisterGlobalFilters
        nameWithType: FilterConfig.RegisterGlobalFilters
        qualifiedName: BookstoreProject.FilterConfig.RegisterGlobalFilters
      VB:
      - id: BookstoreProject.FilterConfig.RegisterGlobalFilters*
        name: RegisterGlobalFilters
        nameWithType: FilterConfig.RegisterGlobalFilters
        qualifiedName: BookstoreProject.FilterConfig.RegisterGlobalFilters
    isDefinition: true
    commentId: Overload:BookstoreProject.FilterConfig.RegisterGlobalFilters
  BookstoreProject.FilterConfig:
    name:
      CSharp:
      - id: BookstoreProject.FilterConfig
        name: FilterConfig
        nameWithType: FilterConfig
        qualifiedName: BookstoreProject.FilterConfig
      VB:
      - id: BookstoreProject.FilterConfig
        name: FilterConfig
        nameWithType: FilterConfig
        qualifiedName: BookstoreProject.FilterConfig
    isDefinition: true
    commentId: T:BookstoreProject.FilterConfig
  Microsoft.AspNet.Identity:
    name:
      CSharp:
      - name: Microsoft.AspNet.Identity
        nameWithType: Microsoft.AspNet.Identity
        qualifiedName: Microsoft.AspNet.Identity
        isExternal: true
      VB:
      - name: Microsoft.AspNet.Identity
        nameWithType: Microsoft.AspNet.Identity
        qualifiedName: Microsoft.AspNet.Identity
    isDefinition: true
    commentId: N:Microsoft.AspNet.Identity
  Microsoft.AspNet.Identity.IIdentityMessageService:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.IIdentityMessageService
        name: IIdentityMessageService
        nameWithType: IIdentityMessageService
        qualifiedName: Microsoft.AspNet.Identity.IIdentityMessageService
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.IIdentityMessageService
        name: IIdentityMessageService
        nameWithType: IIdentityMessageService
        qualifiedName: Microsoft.AspNet.Identity.IIdentityMessageService
        isExternal: true
    isDefinition: true
    parent: Microsoft.AspNet.Identity
    commentId: T:Microsoft.AspNet.Identity.IIdentityMessageService
  System.Threading.Tasks:
    name:
      CSharp:
      - name: System.Threading.Tasks
        nameWithType: System.Threading.Tasks
        qualifiedName: System.Threading.Tasks
        isExternal: true
      VB:
      - name: System.Threading.Tasks
        nameWithType: System.Threading.Tasks
        qualifiedName: System.Threading.Tasks
    isDefinition: true
    commentId: N:System.Threading.Tasks
  System.Threading.Tasks.Task:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      VB:
      - id: System.Threading.Tasks.Task
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
    isDefinition: true
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task
  Microsoft.AspNet.Identity.IdentityMessage:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.IdentityMessage
        name: IdentityMessage
        nameWithType: IdentityMessage
        qualifiedName: Microsoft.AspNet.Identity.IdentityMessage
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.IdentityMessage
        name: IdentityMessage
        nameWithType: IdentityMessage
        qualifiedName: Microsoft.AspNet.Identity.IdentityMessage
        isExternal: true
    isDefinition: true
    parent: Microsoft.AspNet.Identity
    commentId: T:Microsoft.AspNet.Identity.IdentityMessage
  BookstoreProject.EmailService.SendAsync*:
    name:
      CSharp:
      - id: BookstoreProject.EmailService.SendAsync*
        name: SendAsync
        nameWithType: EmailService.SendAsync
        qualifiedName: BookstoreProject.EmailService.SendAsync
      VB:
      - id: BookstoreProject.EmailService.SendAsync*
        name: SendAsync
        nameWithType: EmailService.SendAsync
        qualifiedName: BookstoreProject.EmailService.SendAsync
    isDefinition: true
    commentId: Overload:BookstoreProject.EmailService.SendAsync
  Microsoft.AspNet.Identity.IIdentityMessageService.SendAsync(Microsoft.AspNet.Identity.IdentityMessage):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.IIdentityMessageService.SendAsync(Microsoft.AspNet.Identity.IdentityMessage)
        name: SendAsync
        nameWithType: IIdentityMessageService.SendAsync
        qualifiedName: Microsoft.AspNet.Identity.IIdentityMessageService.SendAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.AspNet.Identity.IdentityMessage
        name: IdentityMessage
        nameWithType: IdentityMessage
        qualifiedName: Microsoft.AspNet.Identity.IdentityMessage
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.IIdentityMessageService.SendAsync(Microsoft.AspNet.Identity.IdentityMessage)
        name: SendAsync
        nameWithType: IIdentityMessageService.SendAsync
        qualifiedName: Microsoft.AspNet.Identity.IIdentityMessageService.SendAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.AspNet.Identity.IdentityMessage
        name: IdentityMessage
        nameWithType: IdentityMessage
        qualifiedName: Microsoft.AspNet.Identity.IdentityMessage
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.AspNet.Identity.IIdentityMessageService
    commentId: M:Microsoft.AspNet.Identity.IIdentityMessageService.SendAsync(Microsoft.AspNet.Identity.IdentityMessage)
  BookstoreProject.EmailService:
    name:
      CSharp:
      - id: BookstoreProject.EmailService
        name: EmailService
        nameWithType: EmailService
        qualifiedName: BookstoreProject.EmailService
      VB:
      - id: BookstoreProject.EmailService
        name: EmailService
        nameWithType: EmailService
        qualifiedName: BookstoreProject.EmailService
    isDefinition: true
    commentId: T:BookstoreProject.EmailService
  BookstoreProject.SmsService.SendAsync*:
    name:
      CSharp:
      - id: BookstoreProject.SmsService.SendAsync*
        name: SendAsync
        nameWithType: SmsService.SendAsync
        qualifiedName: BookstoreProject.SmsService.SendAsync
      VB:
      - id: BookstoreProject.SmsService.SendAsync*
        name: SendAsync
        nameWithType: SmsService.SendAsync
        qualifiedName: BookstoreProject.SmsService.SendAsync
    isDefinition: true
    commentId: Overload:BookstoreProject.SmsService.SendAsync
  BookstoreProject.SmsService:
    name:
      CSharp:
      - id: BookstoreProject.SmsService
        name: SmsService
        nameWithType: SmsService
        qualifiedName: BookstoreProject.SmsService
      VB:
      - id: BookstoreProject.SmsService
        name: SmsService
        nameWithType: SmsService
        qualifiedName: BookstoreProject.SmsService
    isDefinition: true
    commentId: T:BookstoreProject.SmsService
  Microsoft.AspNet.Identity.UserManager`1:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`1
        name: UserManager
        nameWithType: UserManager
        qualifiedName: Microsoft.AspNet.Identity.UserManager
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`1
        name: UserManager
        nameWithType: UserManager
        qualifiedName: Microsoft.AspNet.Identity.UserManager
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:Microsoft.AspNet.Identity.UserManager`1
  Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser}:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`1
        name: UserManager
        nameWithType: UserManager
        qualifiedName: Microsoft.AspNet.Identity.UserManager
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: BookstoreProject.Models.ApplicationUser
        name: ApplicationUser
        nameWithType: ApplicationUser
        qualifiedName: BookstoreProject.Models.ApplicationUser
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`1
        name: UserManager
        nameWithType: UserManager
        qualifiedName: Microsoft.AspNet.Identity.UserManager
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: BookstoreProject.Models.ApplicationUser
        name: ApplicationUser
        nameWithType: ApplicationUser
        qualifiedName: BookstoreProject.Models.ApplicationUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`1
    parent: Microsoft.AspNet.Identity
    commentId: T:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser}
  Microsoft.AspNet.Identity.UserManager`2:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2
        name: UserManager
        nameWithType: UserManager
        qualifiedName: Microsoft.AspNet.Identity.UserManager
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2
        name: UserManager
        nameWithType: UserManager
        qualifiedName: Microsoft.AspNet.Identity.UserManager
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:Microsoft.AspNet.Identity.UserManager`2
  Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2
        name: UserManager
        nameWithType: UserManager
        qualifiedName: Microsoft.AspNet.Identity.UserManager
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: BookstoreProject.Models.ApplicationUser
        name: ApplicationUser
        nameWithType: ApplicationUser
        qualifiedName: BookstoreProject.Models.ApplicationUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2
        name: UserManager
        nameWithType: UserManager
        qualifiedName: Microsoft.AspNet.Identity.UserManager
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: BookstoreProject.Models.ApplicationUser
        name: ApplicationUser
        nameWithType: ApplicationUser
        qualifiedName: BookstoreProject.Models.ApplicationUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2
    parent: Microsoft.AspNet.Identity
    commentId: T:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
  Microsoft.AspNet.Identity.UserManager`2.Dispose:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.Dispose
        name: Dispose
        nameWithType: UserManager<TUser, TKey>.Dispose
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.Dispose
        name: Dispose
        nameWithType: UserManager(Of TUser, TKey).Dispose
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.Dispose
  Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.Dispose:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.Dispose
        name: Dispose
        nameWithType: UserManager<ApplicationUser, String>.Dispose
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.Dispose
        name: Dispose
        nameWithType: UserManager(Of ApplicationUser, String).Dispose
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.Dispose
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.Dispose
  Microsoft.AspNet.Identity.UserManager`2.CreateIdentityAsync(`0,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.CreateIdentityAsync(`0,System.String)
        name: CreateIdentityAsync
        nameWithType: UserManager<TUser, TKey>.CreateIdentityAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.CreateIdentityAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.CreateIdentityAsync(`0,System.String)
        name: CreateIdentityAsync
        nameWithType: UserManager(Of TUser, TKey).CreateIdentityAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).CreateIdentityAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.CreateIdentityAsync(`0,System.String)
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.CreateIdentityAsync(BookstoreProject.Models.ApplicationUser,System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.CreateIdentityAsync(`0,System.String)
        name: CreateIdentityAsync
        nameWithType: UserManager<ApplicationUser, String>.CreateIdentityAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.CreateIdentityAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: BookstoreProject.Models.ApplicationUser
        name: ApplicationUser
        nameWithType: ApplicationUser
        qualifiedName: BookstoreProject.Models.ApplicationUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.CreateIdentityAsync(`0,System.String)
        name: CreateIdentityAsync
        nameWithType: UserManager(Of ApplicationUser, String).CreateIdentityAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).CreateIdentityAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: BookstoreProject.Models.ApplicationUser
        name: ApplicationUser
        nameWithType: ApplicationUser
        qualifiedName: BookstoreProject.Models.ApplicationUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.CreateIdentityAsync(`0,System.String)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.CreateIdentityAsync(BookstoreProject.Models.ApplicationUser,System.String)
  Microsoft.AspNet.Identity.UserManager`2.CreateAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.CreateAsync(`0)
        name: CreateAsync
        nameWithType: UserManager<TUser, TKey>.CreateAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.CreateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.CreateAsync(`0)
        name: CreateAsync
        nameWithType: UserManager(Of TUser, TKey).CreateAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).CreateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.CreateAsync(`0)
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.CreateAsync(BookstoreProject.Models.ApplicationUser)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.CreateAsync(`0)
        name: CreateAsync
        nameWithType: UserManager<ApplicationUser, String>.CreateAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.CreateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: BookstoreProject.Models.ApplicationUser
        name: ApplicationUser
        nameWithType: ApplicationUser
        qualifiedName: BookstoreProject.Models.ApplicationUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.CreateAsync(`0)
        name: CreateAsync
        nameWithType: UserManager(Of ApplicationUser, String).CreateAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).CreateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: BookstoreProject.Models.ApplicationUser
        name: ApplicationUser
        nameWithType: ApplicationUser
        qualifiedName: BookstoreProject.Models.ApplicationUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.CreateAsync(`0)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.CreateAsync(BookstoreProject.Models.ApplicationUser)
  Microsoft.AspNet.Identity.UserManager`2.UpdateAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.UpdateAsync(`0)
        name: UpdateAsync
        nameWithType: UserManager<TUser, TKey>.UpdateAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.UpdateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.UpdateAsync(`0)
        name: UpdateAsync
        nameWithType: UserManager(Of TUser, TKey).UpdateAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).UpdateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.UpdateAsync(`0)
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.UpdateAsync(BookstoreProject.Models.ApplicationUser)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.UpdateAsync(`0)
        name: UpdateAsync
        nameWithType: UserManager<ApplicationUser, String>.UpdateAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.UpdateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: BookstoreProject.Models.ApplicationUser
        name: ApplicationUser
        nameWithType: ApplicationUser
        qualifiedName: BookstoreProject.Models.ApplicationUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.UpdateAsync(`0)
        name: UpdateAsync
        nameWithType: UserManager(Of ApplicationUser, String).UpdateAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).UpdateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: BookstoreProject.Models.ApplicationUser
        name: ApplicationUser
        nameWithType: ApplicationUser
        qualifiedName: BookstoreProject.Models.ApplicationUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.UpdateAsync(`0)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.UpdateAsync(BookstoreProject.Models.ApplicationUser)
  Microsoft.AspNet.Identity.UserManager`2.DeleteAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.DeleteAsync(`0)
        name: DeleteAsync
        nameWithType: UserManager<TUser, TKey>.DeleteAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.DeleteAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.DeleteAsync(`0)
        name: DeleteAsync
        nameWithType: UserManager(Of TUser, TKey).DeleteAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).DeleteAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.DeleteAsync(`0)
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.DeleteAsync(BookstoreProject.Models.ApplicationUser)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.DeleteAsync(`0)
        name: DeleteAsync
        nameWithType: UserManager<ApplicationUser, String>.DeleteAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.DeleteAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: BookstoreProject.Models.ApplicationUser
        name: ApplicationUser
        nameWithType: ApplicationUser
        qualifiedName: BookstoreProject.Models.ApplicationUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.DeleteAsync(`0)
        name: DeleteAsync
        nameWithType: UserManager(Of ApplicationUser, String).DeleteAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).DeleteAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: BookstoreProject.Models.ApplicationUser
        name: ApplicationUser
        nameWithType: ApplicationUser
        qualifiedName: BookstoreProject.Models.ApplicationUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.DeleteAsync(`0)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.DeleteAsync(BookstoreProject.Models.ApplicationUser)
  Microsoft.AspNet.Identity.UserManager`2.FindByIdAsync(`1):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.FindByIdAsync(`1)
        name: FindByIdAsync
        nameWithType: UserManager<TUser, TKey>.FindByIdAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.FindByIdAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.FindByIdAsync(`1)
        name: FindByIdAsync
        nameWithType: UserManager(Of TUser, TKey).FindByIdAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).FindByIdAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.FindByIdAsync(`1)
  Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.FindByIdAsync(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.FindByIdAsync(`1)
        name: FindByIdAsync
        nameWithType: UserManager<ApplicationUser, String>.FindByIdAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.FindByIdAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.FindByIdAsync(`1)
        name: FindByIdAsync
        nameWithType: UserManager(Of ApplicationUser, String).FindByIdAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).FindByIdAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.FindByIdAsync(`1)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.FindByIdAsync(System.String)
  Microsoft.AspNet.Identity.UserManager`2.FindByNameAsync(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.FindByNameAsync(System.String)
        name: FindByNameAsync
        nameWithType: UserManager<TUser, TKey>.FindByNameAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.FindByNameAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.FindByNameAsync(System.String)
        name: FindByNameAsync
        nameWithType: UserManager(Of TUser, TKey).FindByNameAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).FindByNameAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.FindByNameAsync(System.String)
  Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.FindByNameAsync(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.FindByNameAsync(System.String)
        name: FindByNameAsync
        nameWithType: UserManager<ApplicationUser, String>.FindByNameAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.FindByNameAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.FindByNameAsync(System.String)
        name: FindByNameAsync
        nameWithType: UserManager(Of ApplicationUser, String).FindByNameAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).FindByNameAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.FindByNameAsync(System.String)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.FindByNameAsync(System.String)
  Microsoft.AspNet.Identity.UserManager`2.CreateAsync(`0,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.CreateAsync(`0,System.String)
        name: CreateAsync
        nameWithType: UserManager<TUser, TKey>.CreateAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.CreateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.CreateAsync(`0,System.String)
        name: CreateAsync
        nameWithType: UserManager(Of TUser, TKey).CreateAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).CreateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.CreateAsync(`0,System.String)
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.CreateAsync(BookstoreProject.Models.ApplicationUser,System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.CreateAsync(`0,System.String)
        name: CreateAsync
        nameWithType: UserManager<ApplicationUser, String>.CreateAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.CreateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: BookstoreProject.Models.ApplicationUser
        name: ApplicationUser
        nameWithType: ApplicationUser
        qualifiedName: BookstoreProject.Models.ApplicationUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.CreateAsync(`0,System.String)
        name: CreateAsync
        nameWithType: UserManager(Of ApplicationUser, String).CreateAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).CreateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: BookstoreProject.Models.ApplicationUser
        name: ApplicationUser
        nameWithType: ApplicationUser
        qualifiedName: BookstoreProject.Models.ApplicationUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.CreateAsync(`0,System.String)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.CreateAsync(BookstoreProject.Models.ApplicationUser,System.String)
  Microsoft.AspNet.Identity.UserManager`2.FindAsync(System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.FindAsync(System.String,System.String)
        name: FindAsync
        nameWithType: UserManager<TUser, TKey>.FindAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.FindAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.FindAsync(System.String,System.String)
        name: FindAsync
        nameWithType: UserManager(Of TUser, TKey).FindAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).FindAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.FindAsync(System.String,System.String)
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.FindAsync(System.String,System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.FindAsync(System.String,System.String)
        name: FindAsync
        nameWithType: UserManager<ApplicationUser, String>.FindAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.FindAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.FindAsync(System.String,System.String)
        name: FindAsync
        nameWithType: UserManager(Of ApplicationUser, String).FindAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).FindAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.FindAsync(System.String,System.String)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.FindAsync(System.String,System.String)
  Microsoft.AspNet.Identity.UserManager`2.CheckPasswordAsync(`0,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.CheckPasswordAsync(`0,System.String)
        name: CheckPasswordAsync
        nameWithType: UserManager<TUser, TKey>.CheckPasswordAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.CheckPasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.CheckPasswordAsync(`0,System.String)
        name: CheckPasswordAsync
        nameWithType: UserManager(Of TUser, TKey).CheckPasswordAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).CheckPasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.CheckPasswordAsync(`0,System.String)
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.CheckPasswordAsync(BookstoreProject.Models.ApplicationUser,System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.CheckPasswordAsync(`0,System.String)
        name: CheckPasswordAsync
        nameWithType: UserManager<ApplicationUser, String>.CheckPasswordAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.CheckPasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: BookstoreProject.Models.ApplicationUser
        name: ApplicationUser
        nameWithType: ApplicationUser
        qualifiedName: BookstoreProject.Models.ApplicationUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.CheckPasswordAsync(`0,System.String)
        name: CheckPasswordAsync
        nameWithType: UserManager(Of ApplicationUser, String).CheckPasswordAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).CheckPasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: BookstoreProject.Models.ApplicationUser
        name: ApplicationUser
        nameWithType: ApplicationUser
        qualifiedName: BookstoreProject.Models.ApplicationUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.CheckPasswordAsync(`0,System.String)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.CheckPasswordAsync(BookstoreProject.Models.ApplicationUser,System.String)
  Microsoft.AspNet.Identity.UserManager`2.HasPasswordAsync(`1):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.HasPasswordAsync(`1)
        name: HasPasswordAsync
        nameWithType: UserManager<TUser, TKey>.HasPasswordAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.HasPasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.HasPasswordAsync(`1)
        name: HasPasswordAsync
        nameWithType: UserManager(Of TUser, TKey).HasPasswordAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).HasPasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.HasPasswordAsync(`1)
  Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.HasPasswordAsync(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.HasPasswordAsync(`1)
        name: HasPasswordAsync
        nameWithType: UserManager<ApplicationUser, String>.HasPasswordAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.HasPasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.HasPasswordAsync(`1)
        name: HasPasswordAsync
        nameWithType: UserManager(Of ApplicationUser, String).HasPasswordAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).HasPasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.HasPasswordAsync(`1)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.HasPasswordAsync(System.String)
  Microsoft.AspNet.Identity.UserManager`2.AddPasswordAsync(`1,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.AddPasswordAsync(`1,System.String)
        name: AddPasswordAsync
        nameWithType: UserManager<TUser, TKey>.AddPasswordAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.AddPasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.AddPasswordAsync(`1,System.String)
        name: AddPasswordAsync
        nameWithType: UserManager(Of TUser, TKey).AddPasswordAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).AddPasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.AddPasswordAsync(`1,System.String)
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.AddPasswordAsync(System.String,System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.AddPasswordAsync(`1,System.String)
        name: AddPasswordAsync
        nameWithType: UserManager<ApplicationUser, String>.AddPasswordAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.AddPasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.AddPasswordAsync(`1,System.String)
        name: AddPasswordAsync
        nameWithType: UserManager(Of ApplicationUser, String).AddPasswordAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).AddPasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.AddPasswordAsync(`1,System.String)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.AddPasswordAsync(System.String,System.String)
  Microsoft.AspNet.Identity.UserManager`2.ChangePasswordAsync(`1,System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.ChangePasswordAsync(`1,System.String,System.String)
        name: ChangePasswordAsync
        nameWithType: UserManager<TUser, TKey>.ChangePasswordAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.ChangePasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.ChangePasswordAsync(`1,System.String,System.String)
        name: ChangePasswordAsync
        nameWithType: UserManager(Of TUser, TKey).ChangePasswordAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).ChangePasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.ChangePasswordAsync(`1,System.String,System.String)
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.ChangePasswordAsync(System.String,System.String,System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.ChangePasswordAsync(`1,System.String,System.String)
        name: ChangePasswordAsync
        nameWithType: UserManager<ApplicationUser, String>.ChangePasswordAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.ChangePasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.ChangePasswordAsync(`1,System.String,System.String)
        name: ChangePasswordAsync
        nameWithType: UserManager(Of ApplicationUser, String).ChangePasswordAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).ChangePasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.ChangePasswordAsync(`1,System.String,System.String)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.ChangePasswordAsync(System.String,System.String,System.String)
  Microsoft.AspNet.Identity.UserManager`2.RemovePasswordAsync(`1):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.RemovePasswordAsync(`1)
        name: RemovePasswordAsync
        nameWithType: UserManager<TUser, TKey>.RemovePasswordAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.RemovePasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.RemovePasswordAsync(`1)
        name: RemovePasswordAsync
        nameWithType: UserManager(Of TUser, TKey).RemovePasswordAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).RemovePasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.RemovePasswordAsync(`1)
  Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.RemovePasswordAsync(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.RemovePasswordAsync(`1)
        name: RemovePasswordAsync
        nameWithType: UserManager<ApplicationUser, String>.RemovePasswordAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.RemovePasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.RemovePasswordAsync(`1)
        name: RemovePasswordAsync
        nameWithType: UserManager(Of ApplicationUser, String).RemovePasswordAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).RemovePasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.RemovePasswordAsync(`1)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.RemovePasswordAsync(System.String)
  Microsoft.AspNet.Identity.UserManager`2.UpdatePassword(Microsoft.AspNet.Identity.IUserPasswordStore{`0,`1},`0,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.UpdatePassword(Microsoft.AspNet.Identity.IUserPasswordStore{`0,`1},`0,System.String)
        name: UpdatePassword
        nameWithType: UserManager<TUser, TKey>.UpdatePassword
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.UpdatePassword
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.AspNet.Identity.IUserPasswordStore`2
        name: IUserPasswordStore
        nameWithType: IUserPasswordStore
        qualifiedName: Microsoft.AspNet.Identity.IUserPasswordStore
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.UpdatePassword(Microsoft.AspNet.Identity.IUserPasswordStore{`0,`1},`0,System.String)
        name: UpdatePassword
        nameWithType: UserManager(Of TUser, TKey).UpdatePassword
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).UpdatePassword
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.AspNet.Identity.IUserPasswordStore`2
        name: IUserPasswordStore
        nameWithType: IUserPasswordStore
        qualifiedName: Microsoft.AspNet.Identity.IUserPasswordStore
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.UpdatePassword(Microsoft.AspNet.Identity.IUserPasswordStore{`0,`1},`0,System.String)
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.UpdatePassword(Microsoft.AspNet.Identity.IUserPasswordStore{BookstoreProject.Models.ApplicationUser,System.String},BookstoreProject.Models.ApplicationUser,System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.UpdatePassword(Microsoft.AspNet.Identity.IUserPasswordStore{`0,`1},`0,System.String)
        name: UpdatePassword
        nameWithType: UserManager<ApplicationUser, String>.UpdatePassword
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.UpdatePassword
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.AspNet.Identity.IUserPasswordStore`2
        name: IUserPasswordStore
        nameWithType: IUserPasswordStore
        qualifiedName: Microsoft.AspNet.Identity.IUserPasswordStore
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: BookstoreProject.Models.ApplicationUser
        name: ApplicationUser
        nameWithType: ApplicationUser
        qualifiedName: BookstoreProject.Models.ApplicationUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: BookstoreProject.Models.ApplicationUser
        name: ApplicationUser
        nameWithType: ApplicationUser
        qualifiedName: BookstoreProject.Models.ApplicationUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.UpdatePassword(Microsoft.AspNet.Identity.IUserPasswordStore{`0,`1},`0,System.String)
        name: UpdatePassword
        nameWithType: UserManager(Of ApplicationUser, String).UpdatePassword
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).UpdatePassword
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.AspNet.Identity.IUserPasswordStore`2
        name: IUserPasswordStore
        nameWithType: IUserPasswordStore
        qualifiedName: Microsoft.AspNet.Identity.IUserPasswordStore
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: BookstoreProject.Models.ApplicationUser
        name: ApplicationUser
        nameWithType: ApplicationUser
        qualifiedName: BookstoreProject.Models.ApplicationUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: BookstoreProject.Models.ApplicationUser
        name: ApplicationUser
        nameWithType: ApplicationUser
        qualifiedName: BookstoreProject.Models.ApplicationUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.UpdatePassword(Microsoft.AspNet.Identity.IUserPasswordStore{`0,`1},`0,System.String)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.UpdatePassword(Microsoft.AspNet.Identity.IUserPasswordStore{BookstoreProject.Models.ApplicationUser,System.String},BookstoreProject.Models.ApplicationUser,System.String)
  ? Microsoft.AspNet.Identity.UserManager`2.VerifyPasswordAsync(Microsoft.AspNet.Identity.IUserPasswordStore{`0,`1},`0,System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.VerifyPasswordAsync(Microsoft.AspNet.Identity.IUserPasswordStore{`0,`1},`0,System.String)
        name: VerifyPasswordAsync
        nameWithType: UserManager<TUser, TKey>.VerifyPasswordAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.VerifyPasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.AspNet.Identity.IUserPasswordStore`2
        name: IUserPasswordStore
        nameWithType: IUserPasswordStore
        qualifiedName: Microsoft.AspNet.Identity.IUserPasswordStore
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.VerifyPasswordAsync(Microsoft.AspNet.Identity.IUserPasswordStore{`0,`1},`0,System.String)
        name: VerifyPasswordAsync
        nameWithType: UserManager(Of TUser, TKey).VerifyPasswordAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).VerifyPasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.AspNet.Identity.IUserPasswordStore`2
        name: IUserPasswordStore
        nameWithType: IUserPasswordStore
        qualifiedName: Microsoft.AspNet.Identity.IUserPasswordStore
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.VerifyPasswordAsync(Microsoft.AspNet.Identity.IUserPasswordStore{`0,`1},`0,System.String)
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.VerifyPasswordAsync(Microsoft.AspNet.Identity.IUserPasswordStore{BookstoreProject.Models.ApplicationUser,System.String},BookstoreProject.Models.ApplicationUser,System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.VerifyPasswordAsync(Microsoft.AspNet.Identity.IUserPasswordStore{`0,`1},`0,System.String)
        name: VerifyPasswordAsync
        nameWithType: UserManager<ApplicationUser, String>.VerifyPasswordAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.VerifyPasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.AspNet.Identity.IUserPasswordStore`2
        name: IUserPasswordStore
        nameWithType: IUserPasswordStore
        qualifiedName: Microsoft.AspNet.Identity.IUserPasswordStore
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: BookstoreProject.Models.ApplicationUser
        name: ApplicationUser
        nameWithType: ApplicationUser
        qualifiedName: BookstoreProject.Models.ApplicationUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: BookstoreProject.Models.ApplicationUser
        name: ApplicationUser
        nameWithType: ApplicationUser
        qualifiedName: BookstoreProject.Models.ApplicationUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.VerifyPasswordAsync(Microsoft.AspNet.Identity.IUserPasswordStore{`0,`1},`0,System.String)
        name: VerifyPasswordAsync
        nameWithType: UserManager(Of ApplicationUser, String).VerifyPasswordAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).VerifyPasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.AspNet.Identity.IUserPasswordStore`2
        name: IUserPasswordStore
        nameWithType: IUserPasswordStore
        qualifiedName: Microsoft.AspNet.Identity.IUserPasswordStore
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: BookstoreProject.Models.ApplicationUser
        name: ApplicationUser
        nameWithType: ApplicationUser
        qualifiedName: BookstoreProject.Models.ApplicationUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: BookstoreProject.Models.ApplicationUser
        name: ApplicationUser
        nameWithType: ApplicationUser
        qualifiedName: BookstoreProject.Models.ApplicationUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.VerifyPasswordAsync(Microsoft.AspNet.Identity.IUserPasswordStore{`0,`1},`0,System.String)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.VerifyPasswordAsync(Microsoft.AspNet.Identity.IUserPasswordStore{BookstoreProject.Models.ApplicationUser,System.String},BookstoreProject.Models.ApplicationUser,System.String)
  Microsoft.AspNet.Identity.UserManager`2.GetSecurityStampAsync(`1):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.GetSecurityStampAsync(`1)
        name: GetSecurityStampAsync
        nameWithType: UserManager<TUser, TKey>.GetSecurityStampAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.GetSecurityStampAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.GetSecurityStampAsync(`1)
        name: GetSecurityStampAsync
        nameWithType: UserManager(Of TUser, TKey).GetSecurityStampAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).GetSecurityStampAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.GetSecurityStampAsync(`1)
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.GetSecurityStampAsync(System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.GetSecurityStampAsync(`1)
        name: GetSecurityStampAsync
        nameWithType: UserManager<ApplicationUser, String>.GetSecurityStampAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.GetSecurityStampAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.GetSecurityStampAsync(`1)
        name: GetSecurityStampAsync
        nameWithType: UserManager(Of ApplicationUser, String).GetSecurityStampAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).GetSecurityStampAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.GetSecurityStampAsync(`1)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.GetSecurityStampAsync(System.String)
  Microsoft.AspNet.Identity.UserManager`2.UpdateSecurityStampAsync(`1):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.UpdateSecurityStampAsync(`1)
        name: UpdateSecurityStampAsync
        nameWithType: UserManager<TUser, TKey>.UpdateSecurityStampAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.UpdateSecurityStampAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.UpdateSecurityStampAsync(`1)
        name: UpdateSecurityStampAsync
        nameWithType: UserManager(Of TUser, TKey).UpdateSecurityStampAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).UpdateSecurityStampAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.UpdateSecurityStampAsync(`1)
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.UpdateSecurityStampAsync(System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.UpdateSecurityStampAsync(`1)
        name: UpdateSecurityStampAsync
        nameWithType: UserManager<ApplicationUser, String>.UpdateSecurityStampAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.UpdateSecurityStampAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.UpdateSecurityStampAsync(`1)
        name: UpdateSecurityStampAsync
        nameWithType: UserManager(Of ApplicationUser, String).UpdateSecurityStampAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).UpdateSecurityStampAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.UpdateSecurityStampAsync(`1)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.UpdateSecurityStampAsync(System.String)
  Microsoft.AspNet.Identity.UserManager`2.GeneratePasswordResetTokenAsync(`1):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.GeneratePasswordResetTokenAsync(`1)
        name: GeneratePasswordResetTokenAsync
        nameWithType: UserManager<TUser, TKey>.GeneratePasswordResetTokenAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.GeneratePasswordResetTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.GeneratePasswordResetTokenAsync(`1)
        name: GeneratePasswordResetTokenAsync
        nameWithType: UserManager(Of TUser, TKey).GeneratePasswordResetTokenAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).GeneratePasswordResetTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.GeneratePasswordResetTokenAsync(`1)
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.GeneratePasswordResetTokenAsync(System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.GeneratePasswordResetTokenAsync(`1)
        name: GeneratePasswordResetTokenAsync
        nameWithType: UserManager<ApplicationUser, String>.GeneratePasswordResetTokenAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.GeneratePasswordResetTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.GeneratePasswordResetTokenAsync(`1)
        name: GeneratePasswordResetTokenAsync
        nameWithType: UserManager(Of ApplicationUser, String).GeneratePasswordResetTokenAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).GeneratePasswordResetTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.GeneratePasswordResetTokenAsync(`1)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.GeneratePasswordResetTokenAsync(System.String)
  Microsoft.AspNet.Identity.UserManager`2.ResetPasswordAsync(`1,System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.ResetPasswordAsync(`1,System.String,System.String)
        name: ResetPasswordAsync
        nameWithType: UserManager<TUser, TKey>.ResetPasswordAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.ResetPasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.ResetPasswordAsync(`1,System.String,System.String)
        name: ResetPasswordAsync
        nameWithType: UserManager(Of TUser, TKey).ResetPasswordAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).ResetPasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.ResetPasswordAsync(`1,System.String,System.String)
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.ResetPasswordAsync(System.String,System.String,System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.ResetPasswordAsync(`1,System.String,System.String)
        name: ResetPasswordAsync
        nameWithType: UserManager<ApplicationUser, String>.ResetPasswordAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.ResetPasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.ResetPasswordAsync(`1,System.String,System.String)
        name: ResetPasswordAsync
        nameWithType: UserManager(Of ApplicationUser, String).ResetPasswordAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).ResetPasswordAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.ResetPasswordAsync(`1,System.String,System.String)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.ResetPasswordAsync(System.String,System.String,System.String)
  Microsoft.AspNet.Identity.UserManager`2.FindAsync(Microsoft.AspNet.Identity.UserLoginInfo):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.FindAsync(Microsoft.AspNet.Identity.UserLoginInfo)
        name: FindAsync
        nameWithType: UserManager<TUser, TKey>.FindAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.FindAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.AspNet.Identity.UserLoginInfo
        name: UserLoginInfo
        nameWithType: UserLoginInfo
        qualifiedName: Microsoft.AspNet.Identity.UserLoginInfo
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.FindAsync(Microsoft.AspNet.Identity.UserLoginInfo)
        name: FindAsync
        nameWithType: UserManager(Of TUser, TKey).FindAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).FindAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.AspNet.Identity.UserLoginInfo
        name: UserLoginInfo
        nameWithType: UserLoginInfo
        qualifiedName: Microsoft.AspNet.Identity.UserLoginInfo
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.FindAsync(Microsoft.AspNet.Identity.UserLoginInfo)
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.FindAsync(Microsoft.AspNet.Identity.UserLoginInfo)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.FindAsync(Microsoft.AspNet.Identity.UserLoginInfo)
        name: FindAsync
        nameWithType: UserManager<ApplicationUser, String>.FindAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.FindAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.AspNet.Identity.UserLoginInfo
        name: UserLoginInfo
        nameWithType: UserLoginInfo
        qualifiedName: Microsoft.AspNet.Identity.UserLoginInfo
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.FindAsync(Microsoft.AspNet.Identity.UserLoginInfo)
        name: FindAsync
        nameWithType: UserManager(Of ApplicationUser, String).FindAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).FindAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.AspNet.Identity.UserLoginInfo
        name: UserLoginInfo
        nameWithType: UserLoginInfo
        qualifiedName: Microsoft.AspNet.Identity.UserLoginInfo
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.FindAsync(Microsoft.AspNet.Identity.UserLoginInfo)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.FindAsync(Microsoft.AspNet.Identity.UserLoginInfo)
  Microsoft.AspNet.Identity.UserManager`2.RemoveLoginAsync(`1,Microsoft.AspNet.Identity.UserLoginInfo):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.RemoveLoginAsync(`1,Microsoft.AspNet.Identity.UserLoginInfo)
        name: RemoveLoginAsync
        nameWithType: UserManager<TUser, TKey>.RemoveLoginAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.RemoveLoginAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNet.Identity.UserLoginInfo
        name: UserLoginInfo
        nameWithType: UserLoginInfo
        qualifiedName: Microsoft.AspNet.Identity.UserLoginInfo
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.RemoveLoginAsync(`1,Microsoft.AspNet.Identity.UserLoginInfo)
        name: RemoveLoginAsync
        nameWithType: UserManager(Of TUser, TKey).RemoveLoginAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).RemoveLoginAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNet.Identity.UserLoginInfo
        name: UserLoginInfo
        nameWithType: UserLoginInfo
        qualifiedName: Microsoft.AspNet.Identity.UserLoginInfo
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.RemoveLoginAsync(`1,Microsoft.AspNet.Identity.UserLoginInfo)
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.RemoveLoginAsync(System.String,Microsoft.AspNet.Identity.UserLoginInfo)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.RemoveLoginAsync(`1,Microsoft.AspNet.Identity.UserLoginInfo)
        name: RemoveLoginAsync
        nameWithType: UserManager<ApplicationUser, String>.RemoveLoginAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.RemoveLoginAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNet.Identity.UserLoginInfo
        name: UserLoginInfo
        nameWithType: UserLoginInfo
        qualifiedName: Microsoft.AspNet.Identity.UserLoginInfo
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.RemoveLoginAsync(`1,Microsoft.AspNet.Identity.UserLoginInfo)
        name: RemoveLoginAsync
        nameWithType: UserManager(Of ApplicationUser, String).RemoveLoginAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).RemoveLoginAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNet.Identity.UserLoginInfo
        name: UserLoginInfo
        nameWithType: UserLoginInfo
        qualifiedName: Microsoft.AspNet.Identity.UserLoginInfo
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.RemoveLoginAsync(`1,Microsoft.AspNet.Identity.UserLoginInfo)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.RemoveLoginAsync(System.String,Microsoft.AspNet.Identity.UserLoginInfo)
  Microsoft.AspNet.Identity.UserManager`2.AddLoginAsync(`1,Microsoft.AspNet.Identity.UserLoginInfo):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.AddLoginAsync(`1,Microsoft.AspNet.Identity.UserLoginInfo)
        name: AddLoginAsync
        nameWithType: UserManager<TUser, TKey>.AddLoginAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.AddLoginAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNet.Identity.UserLoginInfo
        name: UserLoginInfo
        nameWithType: UserLoginInfo
        qualifiedName: Microsoft.AspNet.Identity.UserLoginInfo
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.AddLoginAsync(`1,Microsoft.AspNet.Identity.UserLoginInfo)
        name: AddLoginAsync
        nameWithType: UserManager(Of TUser, TKey).AddLoginAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).AddLoginAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNet.Identity.UserLoginInfo
        name: UserLoginInfo
        nameWithType: UserLoginInfo
        qualifiedName: Microsoft.AspNet.Identity.UserLoginInfo
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.AddLoginAsync(`1,Microsoft.AspNet.Identity.UserLoginInfo)
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.AddLoginAsync(System.String,Microsoft.AspNet.Identity.UserLoginInfo)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.AddLoginAsync(`1,Microsoft.AspNet.Identity.UserLoginInfo)
        name: AddLoginAsync
        nameWithType: UserManager<ApplicationUser, String>.AddLoginAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.AddLoginAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNet.Identity.UserLoginInfo
        name: UserLoginInfo
        nameWithType: UserLoginInfo
        qualifiedName: Microsoft.AspNet.Identity.UserLoginInfo
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.AddLoginAsync(`1,Microsoft.AspNet.Identity.UserLoginInfo)
        name: AddLoginAsync
        nameWithType: UserManager(Of ApplicationUser, String).AddLoginAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).AddLoginAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNet.Identity.UserLoginInfo
        name: UserLoginInfo
        nameWithType: UserLoginInfo
        qualifiedName: Microsoft.AspNet.Identity.UserLoginInfo
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.AddLoginAsync(`1,Microsoft.AspNet.Identity.UserLoginInfo)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.AddLoginAsync(System.String,Microsoft.AspNet.Identity.UserLoginInfo)
  Microsoft.AspNet.Identity.UserManager`2.GetLoginsAsync(`1):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.GetLoginsAsync(`1)
        name: GetLoginsAsync
        nameWithType: UserManager<TUser, TKey>.GetLoginsAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.GetLoginsAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.GetLoginsAsync(`1)
        name: GetLoginsAsync
        nameWithType: UserManager(Of TUser, TKey).GetLoginsAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).GetLoginsAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.GetLoginsAsync(`1)
  Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.GetLoginsAsync(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.GetLoginsAsync(`1)
        name: GetLoginsAsync
        nameWithType: UserManager<ApplicationUser, String>.GetLoginsAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.GetLoginsAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.GetLoginsAsync(`1)
        name: GetLoginsAsync
        nameWithType: UserManager(Of ApplicationUser, String).GetLoginsAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).GetLoginsAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.GetLoginsAsync(`1)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.GetLoginsAsync(System.String)
  Microsoft.AspNet.Identity.UserManager`2.AddClaimAsync(`1,System.Security.Claims.Claim):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.AddClaimAsync(`1,System.Security.Claims.Claim)
        name: AddClaimAsync
        nameWithType: UserManager<TUser, TKey>.AddClaimAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.AddClaimAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.AddClaimAsync(`1,System.Security.Claims.Claim)
        name: AddClaimAsync
        nameWithType: UserManager(Of TUser, TKey).AddClaimAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).AddClaimAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.AddClaimAsync(`1,System.Security.Claims.Claim)
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.AddClaimAsync(System.String,System.Security.Claims.Claim)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.AddClaimAsync(`1,System.Security.Claims.Claim)
        name: AddClaimAsync
        nameWithType: UserManager<ApplicationUser, String>.AddClaimAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.AddClaimAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.AddClaimAsync(`1,System.Security.Claims.Claim)
        name: AddClaimAsync
        nameWithType: UserManager(Of ApplicationUser, String).AddClaimAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).AddClaimAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.AddClaimAsync(`1,System.Security.Claims.Claim)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.AddClaimAsync(System.String,System.Security.Claims.Claim)
  Microsoft.AspNet.Identity.UserManager`2.RemoveClaimAsync(`1,System.Security.Claims.Claim):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.RemoveClaimAsync(`1,System.Security.Claims.Claim)
        name: RemoveClaimAsync
        nameWithType: UserManager<TUser, TKey>.RemoveClaimAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.RemoveClaimAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.RemoveClaimAsync(`1,System.Security.Claims.Claim)
        name: RemoveClaimAsync
        nameWithType: UserManager(Of TUser, TKey).RemoveClaimAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).RemoveClaimAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.RemoveClaimAsync(`1,System.Security.Claims.Claim)
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.RemoveClaimAsync(System.String,System.Security.Claims.Claim)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.RemoveClaimAsync(`1,System.Security.Claims.Claim)
        name: RemoveClaimAsync
        nameWithType: UserManager<ApplicationUser, String>.RemoveClaimAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.RemoveClaimAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.RemoveClaimAsync(`1,System.Security.Claims.Claim)
        name: RemoveClaimAsync
        nameWithType: UserManager(Of ApplicationUser, String).RemoveClaimAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).RemoveClaimAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Security.Claims.Claim
        name: Claim
        nameWithType: Claim
        qualifiedName: System.Security.Claims.Claim
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.RemoveClaimAsync(`1,System.Security.Claims.Claim)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.RemoveClaimAsync(System.String,System.Security.Claims.Claim)
  Microsoft.AspNet.Identity.UserManager`2.GetClaimsAsync(`1):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.GetClaimsAsync(`1)
        name: GetClaimsAsync
        nameWithType: UserManager<TUser, TKey>.GetClaimsAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.GetClaimsAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.GetClaimsAsync(`1)
        name: GetClaimsAsync
        nameWithType: UserManager(Of TUser, TKey).GetClaimsAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).GetClaimsAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.GetClaimsAsync(`1)
  Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.GetClaimsAsync(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.GetClaimsAsync(`1)
        name: GetClaimsAsync
        nameWithType: UserManager<ApplicationUser, String>.GetClaimsAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.GetClaimsAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.GetClaimsAsync(`1)
        name: GetClaimsAsync
        nameWithType: UserManager(Of ApplicationUser, String).GetClaimsAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).GetClaimsAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.GetClaimsAsync(`1)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.GetClaimsAsync(System.String)
  Microsoft.AspNet.Identity.UserManager`2.AddToRoleAsync(`1,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.AddToRoleAsync(`1,System.String)
        name: AddToRoleAsync
        nameWithType: UserManager<TUser, TKey>.AddToRoleAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.AddToRoleAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.AddToRoleAsync(`1,System.String)
        name: AddToRoleAsync
        nameWithType: UserManager(Of TUser, TKey).AddToRoleAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).AddToRoleAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.AddToRoleAsync(`1,System.String)
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.AddToRoleAsync(System.String,System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.AddToRoleAsync(`1,System.String)
        name: AddToRoleAsync
        nameWithType: UserManager<ApplicationUser, String>.AddToRoleAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.AddToRoleAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.AddToRoleAsync(`1,System.String)
        name: AddToRoleAsync
        nameWithType: UserManager(Of ApplicationUser, String).AddToRoleAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).AddToRoleAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.AddToRoleAsync(`1,System.String)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.AddToRoleAsync(System.String,System.String)
  Microsoft.AspNet.Identity.UserManager`2.AddToRolesAsync(`1,System.String[]):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.AddToRolesAsync(`1,System.String[])
        name: AddToRolesAsync
        nameWithType: UserManager<TUser, TKey>.AddToRolesAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.AddToRolesAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.AddToRolesAsync(`1,System.String[])
        name: AddToRolesAsync
        nameWithType: UserManager(Of TUser, TKey).AddToRolesAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).AddToRolesAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.AddToRolesAsync(`1,System.String[])
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.AddToRolesAsync(System.String,System.String[])
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.AddToRolesAsync(`1,System.String[])
        name: AddToRolesAsync
        nameWithType: UserManager<ApplicationUser, String>.AddToRolesAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.AddToRolesAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.AddToRolesAsync(`1,System.String[])
        name: AddToRolesAsync
        nameWithType: UserManager(Of ApplicationUser, String).AddToRolesAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).AddToRolesAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.AddToRolesAsync(`1,System.String[])
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.AddToRolesAsync(System.String,System.String[])
  Microsoft.AspNet.Identity.UserManager`2.RemoveFromRolesAsync(`1,System.String[]):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.RemoveFromRolesAsync(`1,System.String[])
        name: RemoveFromRolesAsync
        nameWithType: UserManager<TUser, TKey>.RemoveFromRolesAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.RemoveFromRolesAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.RemoveFromRolesAsync(`1,System.String[])
        name: RemoveFromRolesAsync
        nameWithType: UserManager(Of TUser, TKey).RemoveFromRolesAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).RemoveFromRolesAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.RemoveFromRolesAsync(`1,System.String[])
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.RemoveFromRolesAsync(System.String,System.String[])
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.RemoveFromRolesAsync(`1,System.String[])
        name: RemoveFromRolesAsync
        nameWithType: UserManager<ApplicationUser, String>.RemoveFromRolesAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.RemoveFromRolesAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.RemoveFromRolesAsync(`1,System.String[])
        name: RemoveFromRolesAsync
        nameWithType: UserManager(Of ApplicationUser, String).RemoveFromRolesAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).RemoveFromRolesAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.RemoveFromRolesAsync(`1,System.String[])
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.RemoveFromRolesAsync(System.String,System.String[])
  Microsoft.AspNet.Identity.UserManager`2.RemoveFromRoleAsync(`1,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.RemoveFromRoleAsync(`1,System.String)
        name: RemoveFromRoleAsync
        nameWithType: UserManager<TUser, TKey>.RemoveFromRoleAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.RemoveFromRoleAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.RemoveFromRoleAsync(`1,System.String)
        name: RemoveFromRoleAsync
        nameWithType: UserManager(Of TUser, TKey).RemoveFromRoleAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).RemoveFromRoleAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.RemoveFromRoleAsync(`1,System.String)
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.RemoveFromRoleAsync(System.String,System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.RemoveFromRoleAsync(`1,System.String)
        name: RemoveFromRoleAsync
        nameWithType: UserManager<ApplicationUser, String>.RemoveFromRoleAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.RemoveFromRoleAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.RemoveFromRoleAsync(`1,System.String)
        name: RemoveFromRoleAsync
        nameWithType: UserManager(Of ApplicationUser, String).RemoveFromRoleAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).RemoveFromRoleAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.RemoveFromRoleAsync(`1,System.String)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.RemoveFromRoleAsync(System.String,System.String)
  Microsoft.AspNet.Identity.UserManager`2.GetRolesAsync(`1):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.GetRolesAsync(`1)
        name: GetRolesAsync
        nameWithType: UserManager<TUser, TKey>.GetRolesAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.GetRolesAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.GetRolesAsync(`1)
        name: GetRolesAsync
        nameWithType: UserManager(Of TUser, TKey).GetRolesAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).GetRolesAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.GetRolesAsync(`1)
  Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.GetRolesAsync(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.GetRolesAsync(`1)
        name: GetRolesAsync
        nameWithType: UserManager<ApplicationUser, String>.GetRolesAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.GetRolesAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.GetRolesAsync(`1)
        name: GetRolesAsync
        nameWithType: UserManager(Of ApplicationUser, String).GetRolesAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).GetRolesAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.GetRolesAsync(`1)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.GetRolesAsync(System.String)
  Microsoft.AspNet.Identity.UserManager`2.IsInRoleAsync(`1,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.IsInRoleAsync(`1,System.String)
        name: IsInRoleAsync
        nameWithType: UserManager<TUser, TKey>.IsInRoleAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.IsInRoleAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.IsInRoleAsync(`1,System.String)
        name: IsInRoleAsync
        nameWithType: UserManager(Of TUser, TKey).IsInRoleAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).IsInRoleAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.IsInRoleAsync(`1,System.String)
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.IsInRoleAsync(System.String,System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.IsInRoleAsync(`1,System.String)
        name: IsInRoleAsync
        nameWithType: UserManager<ApplicationUser, String>.IsInRoleAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.IsInRoleAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.IsInRoleAsync(`1,System.String)
        name: IsInRoleAsync
        nameWithType: UserManager(Of ApplicationUser, String).IsInRoleAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).IsInRoleAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.IsInRoleAsync(`1,System.String)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.IsInRoleAsync(System.String,System.String)
  Microsoft.AspNet.Identity.UserManager`2.GetEmailAsync(`1):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.GetEmailAsync(`1)
        name: GetEmailAsync
        nameWithType: UserManager<TUser, TKey>.GetEmailAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.GetEmailAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.GetEmailAsync(`1)
        name: GetEmailAsync
        nameWithType: UserManager(Of TUser, TKey).GetEmailAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).GetEmailAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.GetEmailAsync(`1)
  Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.GetEmailAsync(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.GetEmailAsync(`1)
        name: GetEmailAsync
        nameWithType: UserManager<ApplicationUser, String>.GetEmailAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.GetEmailAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.GetEmailAsync(`1)
        name: GetEmailAsync
        nameWithType: UserManager(Of ApplicationUser, String).GetEmailAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).GetEmailAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.GetEmailAsync(`1)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.GetEmailAsync(System.String)
  Microsoft.AspNet.Identity.UserManager`2.SetEmailAsync(`1,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.SetEmailAsync(`1,System.String)
        name: SetEmailAsync
        nameWithType: UserManager<TUser, TKey>.SetEmailAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.SetEmailAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.SetEmailAsync(`1,System.String)
        name: SetEmailAsync
        nameWithType: UserManager(Of TUser, TKey).SetEmailAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).SetEmailAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.SetEmailAsync(`1,System.String)
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SetEmailAsync(System.String,System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.SetEmailAsync(`1,System.String)
        name: SetEmailAsync
        nameWithType: UserManager<ApplicationUser, String>.SetEmailAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.SetEmailAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.SetEmailAsync(`1,System.String)
        name: SetEmailAsync
        nameWithType: UserManager(Of ApplicationUser, String).SetEmailAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).SetEmailAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.SetEmailAsync(`1,System.String)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SetEmailAsync(System.String,System.String)
  Microsoft.AspNet.Identity.UserManager`2.FindByEmailAsync(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.FindByEmailAsync(System.String)
        name: FindByEmailAsync
        nameWithType: UserManager<TUser, TKey>.FindByEmailAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.FindByEmailAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.FindByEmailAsync(System.String)
        name: FindByEmailAsync
        nameWithType: UserManager(Of TUser, TKey).FindByEmailAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).FindByEmailAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.FindByEmailAsync(System.String)
  Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.FindByEmailAsync(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.FindByEmailAsync(System.String)
        name: FindByEmailAsync
        nameWithType: UserManager<ApplicationUser, String>.FindByEmailAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.FindByEmailAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.FindByEmailAsync(System.String)
        name: FindByEmailAsync
        nameWithType: UserManager(Of ApplicationUser, String).FindByEmailAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).FindByEmailAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.FindByEmailAsync(System.String)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.FindByEmailAsync(System.String)
  Microsoft.AspNet.Identity.UserManager`2.GenerateEmailConfirmationTokenAsync(`1):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.GenerateEmailConfirmationTokenAsync(`1)
        name: GenerateEmailConfirmationTokenAsync
        nameWithType: UserManager<TUser, TKey>.GenerateEmailConfirmationTokenAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.GenerateEmailConfirmationTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.GenerateEmailConfirmationTokenAsync(`1)
        name: GenerateEmailConfirmationTokenAsync
        nameWithType: UserManager(Of TUser, TKey).GenerateEmailConfirmationTokenAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).GenerateEmailConfirmationTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.GenerateEmailConfirmationTokenAsync(`1)
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.GenerateEmailConfirmationTokenAsync(System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.GenerateEmailConfirmationTokenAsync(`1)
        name: GenerateEmailConfirmationTokenAsync
        nameWithType: UserManager<ApplicationUser, String>.GenerateEmailConfirmationTokenAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.GenerateEmailConfirmationTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.GenerateEmailConfirmationTokenAsync(`1)
        name: GenerateEmailConfirmationTokenAsync
        nameWithType: UserManager(Of ApplicationUser, String).GenerateEmailConfirmationTokenAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).GenerateEmailConfirmationTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.GenerateEmailConfirmationTokenAsync(`1)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.GenerateEmailConfirmationTokenAsync(System.String)
  Microsoft.AspNet.Identity.UserManager`2.ConfirmEmailAsync(`1,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.ConfirmEmailAsync(`1,System.String)
        name: ConfirmEmailAsync
        nameWithType: UserManager<TUser, TKey>.ConfirmEmailAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.ConfirmEmailAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.ConfirmEmailAsync(`1,System.String)
        name: ConfirmEmailAsync
        nameWithType: UserManager(Of TUser, TKey).ConfirmEmailAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).ConfirmEmailAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.ConfirmEmailAsync(`1,System.String)
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.ConfirmEmailAsync(System.String,System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.ConfirmEmailAsync(`1,System.String)
        name: ConfirmEmailAsync
        nameWithType: UserManager<ApplicationUser, String>.ConfirmEmailAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.ConfirmEmailAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.ConfirmEmailAsync(`1,System.String)
        name: ConfirmEmailAsync
        nameWithType: UserManager(Of ApplicationUser, String).ConfirmEmailAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).ConfirmEmailAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.ConfirmEmailAsync(`1,System.String)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.ConfirmEmailAsync(System.String,System.String)
  Microsoft.AspNet.Identity.UserManager`2.IsEmailConfirmedAsync(`1):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.IsEmailConfirmedAsync(`1)
        name: IsEmailConfirmedAsync
        nameWithType: UserManager<TUser, TKey>.IsEmailConfirmedAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.IsEmailConfirmedAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.IsEmailConfirmedAsync(`1)
        name: IsEmailConfirmedAsync
        nameWithType: UserManager(Of TUser, TKey).IsEmailConfirmedAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).IsEmailConfirmedAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.IsEmailConfirmedAsync(`1)
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.IsEmailConfirmedAsync(System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.IsEmailConfirmedAsync(`1)
        name: IsEmailConfirmedAsync
        nameWithType: UserManager<ApplicationUser, String>.IsEmailConfirmedAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.IsEmailConfirmedAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.IsEmailConfirmedAsync(`1)
        name: IsEmailConfirmedAsync
        nameWithType: UserManager(Of ApplicationUser, String).IsEmailConfirmedAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).IsEmailConfirmedAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.IsEmailConfirmedAsync(`1)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.IsEmailConfirmedAsync(System.String)
  Microsoft.AspNet.Identity.UserManager`2.GetPhoneNumberAsync(`1):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.GetPhoneNumberAsync(`1)
        name: GetPhoneNumberAsync
        nameWithType: UserManager<TUser, TKey>.GetPhoneNumberAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.GetPhoneNumberAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.GetPhoneNumberAsync(`1)
        name: GetPhoneNumberAsync
        nameWithType: UserManager(Of TUser, TKey).GetPhoneNumberAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).GetPhoneNumberAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.GetPhoneNumberAsync(`1)
  Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.GetPhoneNumberAsync(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.GetPhoneNumberAsync(`1)
        name: GetPhoneNumberAsync
        nameWithType: UserManager<ApplicationUser, String>.GetPhoneNumberAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.GetPhoneNumberAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.GetPhoneNumberAsync(`1)
        name: GetPhoneNumberAsync
        nameWithType: UserManager(Of ApplicationUser, String).GetPhoneNumberAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).GetPhoneNumberAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.GetPhoneNumberAsync(`1)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.GetPhoneNumberAsync(System.String)
  Microsoft.AspNet.Identity.UserManager`2.SetPhoneNumberAsync(`1,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.SetPhoneNumberAsync(`1,System.String)
        name: SetPhoneNumberAsync
        nameWithType: UserManager<TUser, TKey>.SetPhoneNumberAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.SetPhoneNumberAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.SetPhoneNumberAsync(`1,System.String)
        name: SetPhoneNumberAsync
        nameWithType: UserManager(Of TUser, TKey).SetPhoneNumberAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).SetPhoneNumberAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.SetPhoneNumberAsync(`1,System.String)
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SetPhoneNumberAsync(System.String,System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.SetPhoneNumberAsync(`1,System.String)
        name: SetPhoneNumberAsync
        nameWithType: UserManager<ApplicationUser, String>.SetPhoneNumberAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.SetPhoneNumberAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.SetPhoneNumberAsync(`1,System.String)
        name: SetPhoneNumberAsync
        nameWithType: UserManager(Of ApplicationUser, String).SetPhoneNumberAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).SetPhoneNumberAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.SetPhoneNumberAsync(`1,System.String)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SetPhoneNumberAsync(System.String,System.String)
  Microsoft.AspNet.Identity.UserManager`2.ChangePhoneNumberAsync(`1,System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.ChangePhoneNumberAsync(`1,System.String,System.String)
        name: ChangePhoneNumberAsync
        nameWithType: UserManager<TUser, TKey>.ChangePhoneNumberAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.ChangePhoneNumberAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.ChangePhoneNumberAsync(`1,System.String,System.String)
        name: ChangePhoneNumberAsync
        nameWithType: UserManager(Of TUser, TKey).ChangePhoneNumberAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).ChangePhoneNumberAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.ChangePhoneNumberAsync(`1,System.String,System.String)
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.ChangePhoneNumberAsync(System.String,System.String,System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.ChangePhoneNumberAsync(`1,System.String,System.String)
        name: ChangePhoneNumberAsync
        nameWithType: UserManager<ApplicationUser, String>.ChangePhoneNumberAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.ChangePhoneNumberAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.ChangePhoneNumberAsync(`1,System.String,System.String)
        name: ChangePhoneNumberAsync
        nameWithType: UserManager(Of ApplicationUser, String).ChangePhoneNumberAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).ChangePhoneNumberAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.ChangePhoneNumberAsync(`1,System.String,System.String)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.ChangePhoneNumberAsync(System.String,System.String,System.String)
  Microsoft.AspNet.Identity.UserManager`2.IsPhoneNumberConfirmedAsync(`1):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.IsPhoneNumberConfirmedAsync(`1)
        name: IsPhoneNumberConfirmedAsync
        nameWithType: UserManager<TUser, TKey>.IsPhoneNumberConfirmedAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.IsPhoneNumberConfirmedAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.IsPhoneNumberConfirmedAsync(`1)
        name: IsPhoneNumberConfirmedAsync
        nameWithType: UserManager(Of TUser, TKey).IsPhoneNumberConfirmedAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).IsPhoneNumberConfirmedAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.IsPhoneNumberConfirmedAsync(`1)
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.IsPhoneNumberConfirmedAsync(System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.IsPhoneNumberConfirmedAsync(`1)
        name: IsPhoneNumberConfirmedAsync
        nameWithType: UserManager<ApplicationUser, String>.IsPhoneNumberConfirmedAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.IsPhoneNumberConfirmedAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.IsPhoneNumberConfirmedAsync(`1)
        name: IsPhoneNumberConfirmedAsync
        nameWithType: UserManager(Of ApplicationUser, String).IsPhoneNumberConfirmedAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).IsPhoneNumberConfirmedAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.IsPhoneNumberConfirmedAsync(`1)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.IsPhoneNumberConfirmedAsync(System.String)
  Microsoft.AspNet.Identity.UserManager`2.GenerateChangePhoneNumberTokenAsync(`1,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.GenerateChangePhoneNumberTokenAsync(`1,System.String)
        name: GenerateChangePhoneNumberTokenAsync
        nameWithType: UserManager<TUser, TKey>.GenerateChangePhoneNumberTokenAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.GenerateChangePhoneNumberTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.GenerateChangePhoneNumberTokenAsync(`1,System.String)
        name: GenerateChangePhoneNumberTokenAsync
        nameWithType: UserManager(Of TUser, TKey).GenerateChangePhoneNumberTokenAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).GenerateChangePhoneNumberTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.GenerateChangePhoneNumberTokenAsync(`1,System.String)
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.GenerateChangePhoneNumberTokenAsync(System.String,System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.GenerateChangePhoneNumberTokenAsync(`1,System.String)
        name: GenerateChangePhoneNumberTokenAsync
        nameWithType: UserManager<ApplicationUser, String>.GenerateChangePhoneNumberTokenAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.GenerateChangePhoneNumberTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.GenerateChangePhoneNumberTokenAsync(`1,System.String)
        name: GenerateChangePhoneNumberTokenAsync
        nameWithType: UserManager(Of ApplicationUser, String).GenerateChangePhoneNumberTokenAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).GenerateChangePhoneNumberTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.GenerateChangePhoneNumberTokenAsync(`1,System.String)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.GenerateChangePhoneNumberTokenAsync(System.String,System.String)
  Microsoft.AspNet.Identity.UserManager`2.VerifyChangePhoneNumberTokenAsync(`1,System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.VerifyChangePhoneNumberTokenAsync(`1,System.String,System.String)
        name: VerifyChangePhoneNumberTokenAsync
        nameWithType: UserManager<TUser, TKey>.VerifyChangePhoneNumberTokenAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.VerifyChangePhoneNumberTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.VerifyChangePhoneNumberTokenAsync(`1,System.String,System.String)
        name: VerifyChangePhoneNumberTokenAsync
        nameWithType: UserManager(Of TUser, TKey).VerifyChangePhoneNumberTokenAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).VerifyChangePhoneNumberTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.VerifyChangePhoneNumberTokenAsync(`1,System.String,System.String)
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.VerifyChangePhoneNumberTokenAsync(System.String,System.String,System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.VerifyChangePhoneNumberTokenAsync(`1,System.String,System.String)
        name: VerifyChangePhoneNumberTokenAsync
        nameWithType: UserManager<ApplicationUser, String>.VerifyChangePhoneNumberTokenAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.VerifyChangePhoneNumberTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.VerifyChangePhoneNumberTokenAsync(`1,System.String,System.String)
        name: VerifyChangePhoneNumberTokenAsync
        nameWithType: UserManager(Of ApplicationUser, String).VerifyChangePhoneNumberTokenAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).VerifyChangePhoneNumberTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.VerifyChangePhoneNumberTokenAsync(`1,System.String,System.String)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.VerifyChangePhoneNumberTokenAsync(System.String,System.String,System.String)
  Microsoft.AspNet.Identity.UserManager`2.VerifyUserTokenAsync(`1,System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.VerifyUserTokenAsync(`1,System.String,System.String)
        name: VerifyUserTokenAsync
        nameWithType: UserManager<TUser, TKey>.VerifyUserTokenAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.VerifyUserTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.VerifyUserTokenAsync(`1,System.String,System.String)
        name: VerifyUserTokenAsync
        nameWithType: UserManager(Of TUser, TKey).VerifyUserTokenAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).VerifyUserTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.VerifyUserTokenAsync(`1,System.String,System.String)
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.VerifyUserTokenAsync(System.String,System.String,System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.VerifyUserTokenAsync(`1,System.String,System.String)
        name: VerifyUserTokenAsync
        nameWithType: UserManager<ApplicationUser, String>.VerifyUserTokenAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.VerifyUserTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.VerifyUserTokenAsync(`1,System.String,System.String)
        name: VerifyUserTokenAsync
        nameWithType: UserManager(Of ApplicationUser, String).VerifyUserTokenAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).VerifyUserTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.VerifyUserTokenAsync(`1,System.String,System.String)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.VerifyUserTokenAsync(System.String,System.String,System.String)
  Microsoft.AspNet.Identity.UserManager`2.GenerateUserTokenAsync(System.String,`1):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.GenerateUserTokenAsync(System.String,`1)
        name: GenerateUserTokenAsync
        nameWithType: UserManager<TUser, TKey>.GenerateUserTokenAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.GenerateUserTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.GenerateUserTokenAsync(System.String,`1)
        name: GenerateUserTokenAsync
        nameWithType: UserManager(Of TUser, TKey).GenerateUserTokenAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).GenerateUserTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.GenerateUserTokenAsync(System.String,`1)
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.GenerateUserTokenAsync(System.String,System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.GenerateUserTokenAsync(System.String,`1)
        name: GenerateUserTokenAsync
        nameWithType: UserManager<ApplicationUser, String>.GenerateUserTokenAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.GenerateUserTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.GenerateUserTokenAsync(System.String,`1)
        name: GenerateUserTokenAsync
        nameWithType: UserManager(Of ApplicationUser, String).GenerateUserTokenAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).GenerateUserTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.GenerateUserTokenAsync(System.String,`1)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.GenerateUserTokenAsync(System.String,System.String)
  ? Microsoft.AspNet.Identity.UserManager`2.RegisterTwoFactorProvider(System.String,Microsoft.AspNet.Identity.IUserTokenProvider{`0,`1})
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.RegisterTwoFactorProvider(System.String,Microsoft.AspNet.Identity.IUserTokenProvider{`0,`1})
        name: RegisterTwoFactorProvider
        nameWithType: UserManager<TUser, TKey>.RegisterTwoFactorProvider
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.RegisterTwoFactorProvider
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNet.Identity.IUserTokenProvider`2
        name: IUserTokenProvider
        nameWithType: IUserTokenProvider
        qualifiedName: Microsoft.AspNet.Identity.IUserTokenProvider
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.RegisterTwoFactorProvider(System.String,Microsoft.AspNet.Identity.IUserTokenProvider{`0,`1})
        name: RegisterTwoFactorProvider
        nameWithType: UserManager(Of TUser, TKey).RegisterTwoFactorProvider
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).RegisterTwoFactorProvider
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNet.Identity.IUserTokenProvider`2
        name: IUserTokenProvider
        nameWithType: IUserTokenProvider
        qualifiedName: Microsoft.AspNet.Identity.IUserTokenProvider
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.RegisterTwoFactorProvider(System.String,Microsoft.AspNet.Identity.IUserTokenProvider{`0,`1})
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.RegisterTwoFactorProvider(System.String,Microsoft.AspNet.Identity.IUserTokenProvider{BookstoreProject.Models.ApplicationUser,System.String})
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.RegisterTwoFactorProvider(System.String,Microsoft.AspNet.Identity.IUserTokenProvider{`0,`1})
        name: RegisterTwoFactorProvider
        nameWithType: UserManager<ApplicationUser, String>.RegisterTwoFactorProvider
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.RegisterTwoFactorProvider
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNet.Identity.IUserTokenProvider`2
        name: IUserTokenProvider
        nameWithType: IUserTokenProvider
        qualifiedName: Microsoft.AspNet.Identity.IUserTokenProvider
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: BookstoreProject.Models.ApplicationUser
        name: ApplicationUser
        nameWithType: ApplicationUser
        qualifiedName: BookstoreProject.Models.ApplicationUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.RegisterTwoFactorProvider(System.String,Microsoft.AspNet.Identity.IUserTokenProvider{`0,`1})
        name: RegisterTwoFactorProvider
        nameWithType: UserManager(Of ApplicationUser, String).RegisterTwoFactorProvider
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).RegisterTwoFactorProvider
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNet.Identity.IUserTokenProvider`2
        name: IUserTokenProvider
        nameWithType: IUserTokenProvider
        qualifiedName: Microsoft.AspNet.Identity.IUserTokenProvider
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: BookstoreProject.Models.ApplicationUser
        name: ApplicationUser
        nameWithType: ApplicationUser
        qualifiedName: BookstoreProject.Models.ApplicationUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.RegisterTwoFactorProvider(System.String,Microsoft.AspNet.Identity.IUserTokenProvider{`0,`1})
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.RegisterTwoFactorProvider(System.String,Microsoft.AspNet.Identity.IUserTokenProvider{BookstoreProject.Models.ApplicationUser,System.String})
  Microsoft.AspNet.Identity.UserManager`2.GetValidTwoFactorProvidersAsync(`1):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.GetValidTwoFactorProvidersAsync(`1)
        name: GetValidTwoFactorProvidersAsync
        nameWithType: UserManager<TUser, TKey>.GetValidTwoFactorProvidersAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.GetValidTwoFactorProvidersAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.GetValidTwoFactorProvidersAsync(`1)
        name: GetValidTwoFactorProvidersAsync
        nameWithType: UserManager(Of TUser, TKey).GetValidTwoFactorProvidersAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).GetValidTwoFactorProvidersAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.GetValidTwoFactorProvidersAsync(`1)
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.GetValidTwoFactorProvidersAsync(System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.GetValidTwoFactorProvidersAsync(`1)
        name: GetValidTwoFactorProvidersAsync
        nameWithType: UserManager<ApplicationUser, String>.GetValidTwoFactorProvidersAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.GetValidTwoFactorProvidersAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.GetValidTwoFactorProvidersAsync(`1)
        name: GetValidTwoFactorProvidersAsync
        nameWithType: UserManager(Of ApplicationUser, String).GetValidTwoFactorProvidersAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).GetValidTwoFactorProvidersAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.GetValidTwoFactorProvidersAsync(`1)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.GetValidTwoFactorProvidersAsync(System.String)
  Microsoft.AspNet.Identity.UserManager`2.VerifyTwoFactorTokenAsync(`1,System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.VerifyTwoFactorTokenAsync(`1,System.String,System.String)
        name: VerifyTwoFactorTokenAsync
        nameWithType: UserManager<TUser, TKey>.VerifyTwoFactorTokenAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.VerifyTwoFactorTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.VerifyTwoFactorTokenAsync(`1,System.String,System.String)
        name: VerifyTwoFactorTokenAsync
        nameWithType: UserManager(Of TUser, TKey).VerifyTwoFactorTokenAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).VerifyTwoFactorTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.VerifyTwoFactorTokenAsync(`1,System.String,System.String)
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.VerifyTwoFactorTokenAsync(System.String,System.String,System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.VerifyTwoFactorTokenAsync(`1,System.String,System.String)
        name: VerifyTwoFactorTokenAsync
        nameWithType: UserManager<ApplicationUser, String>.VerifyTwoFactorTokenAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.VerifyTwoFactorTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.VerifyTwoFactorTokenAsync(`1,System.String,System.String)
        name: VerifyTwoFactorTokenAsync
        nameWithType: UserManager(Of ApplicationUser, String).VerifyTwoFactorTokenAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).VerifyTwoFactorTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.VerifyTwoFactorTokenAsync(`1,System.String,System.String)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.VerifyTwoFactorTokenAsync(System.String,System.String,System.String)
  Microsoft.AspNet.Identity.UserManager`2.GenerateTwoFactorTokenAsync(`1,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.GenerateTwoFactorTokenAsync(`1,System.String)
        name: GenerateTwoFactorTokenAsync
        nameWithType: UserManager<TUser, TKey>.GenerateTwoFactorTokenAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.GenerateTwoFactorTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.GenerateTwoFactorTokenAsync(`1,System.String)
        name: GenerateTwoFactorTokenAsync
        nameWithType: UserManager(Of TUser, TKey).GenerateTwoFactorTokenAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).GenerateTwoFactorTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.GenerateTwoFactorTokenAsync(`1,System.String)
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.GenerateTwoFactorTokenAsync(System.String,System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.GenerateTwoFactorTokenAsync(`1,System.String)
        name: GenerateTwoFactorTokenAsync
        nameWithType: UserManager<ApplicationUser, String>.GenerateTwoFactorTokenAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.GenerateTwoFactorTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.GenerateTwoFactorTokenAsync(`1,System.String)
        name: GenerateTwoFactorTokenAsync
        nameWithType: UserManager(Of ApplicationUser, String).GenerateTwoFactorTokenAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).GenerateTwoFactorTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.GenerateTwoFactorTokenAsync(`1,System.String)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.GenerateTwoFactorTokenAsync(System.String,System.String)
  Microsoft.AspNet.Identity.UserManager`2.NotifyTwoFactorTokenAsync(`1,System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.NotifyTwoFactorTokenAsync(`1,System.String,System.String)
        name: NotifyTwoFactorTokenAsync
        nameWithType: UserManager<TUser, TKey>.NotifyTwoFactorTokenAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.NotifyTwoFactorTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.NotifyTwoFactorTokenAsync(`1,System.String,System.String)
        name: NotifyTwoFactorTokenAsync
        nameWithType: UserManager(Of TUser, TKey).NotifyTwoFactorTokenAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).NotifyTwoFactorTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.NotifyTwoFactorTokenAsync(`1,System.String,System.String)
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.NotifyTwoFactorTokenAsync(System.String,System.String,System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.NotifyTwoFactorTokenAsync(`1,System.String,System.String)
        name: NotifyTwoFactorTokenAsync
        nameWithType: UserManager<ApplicationUser, String>.NotifyTwoFactorTokenAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.NotifyTwoFactorTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.NotifyTwoFactorTokenAsync(`1,System.String,System.String)
        name: NotifyTwoFactorTokenAsync
        nameWithType: UserManager(Of ApplicationUser, String).NotifyTwoFactorTokenAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).NotifyTwoFactorTokenAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.NotifyTwoFactorTokenAsync(`1,System.String,System.String)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.NotifyTwoFactorTokenAsync(System.String,System.String,System.String)
  Microsoft.AspNet.Identity.UserManager`2.GetTwoFactorEnabledAsync(`1):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.GetTwoFactorEnabledAsync(`1)
        name: GetTwoFactorEnabledAsync
        nameWithType: UserManager<TUser, TKey>.GetTwoFactorEnabledAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.GetTwoFactorEnabledAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.GetTwoFactorEnabledAsync(`1)
        name: GetTwoFactorEnabledAsync
        nameWithType: UserManager(Of TUser, TKey).GetTwoFactorEnabledAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).GetTwoFactorEnabledAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.GetTwoFactorEnabledAsync(`1)
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.GetTwoFactorEnabledAsync(System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.GetTwoFactorEnabledAsync(`1)
        name: GetTwoFactorEnabledAsync
        nameWithType: UserManager<ApplicationUser, String>.GetTwoFactorEnabledAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.GetTwoFactorEnabledAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.GetTwoFactorEnabledAsync(`1)
        name: GetTwoFactorEnabledAsync
        nameWithType: UserManager(Of ApplicationUser, String).GetTwoFactorEnabledAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).GetTwoFactorEnabledAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.GetTwoFactorEnabledAsync(`1)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.GetTwoFactorEnabledAsync(System.String)
  Microsoft.AspNet.Identity.UserManager`2.SetTwoFactorEnabledAsync(`1,System.Boolean):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.SetTwoFactorEnabledAsync(`1,System.Boolean)
        name: SetTwoFactorEnabledAsync
        nameWithType: UserManager<TUser, TKey>.SetTwoFactorEnabledAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.SetTwoFactorEnabledAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.SetTwoFactorEnabledAsync(`1,System.Boolean)
        name: SetTwoFactorEnabledAsync
        nameWithType: UserManager(Of TUser, TKey).SetTwoFactorEnabledAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).SetTwoFactorEnabledAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.SetTwoFactorEnabledAsync(`1,System.Boolean)
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SetTwoFactorEnabledAsync(System.String,System.Boolean)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.SetTwoFactorEnabledAsync(`1,System.Boolean)
        name: SetTwoFactorEnabledAsync
        nameWithType: UserManager<ApplicationUser, String>.SetTwoFactorEnabledAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.SetTwoFactorEnabledAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.SetTwoFactorEnabledAsync(`1,System.Boolean)
        name: SetTwoFactorEnabledAsync
        nameWithType: UserManager(Of ApplicationUser, String).SetTwoFactorEnabledAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).SetTwoFactorEnabledAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.SetTwoFactorEnabledAsync(`1,System.Boolean)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SetTwoFactorEnabledAsync(System.String,System.Boolean)
  Microsoft.AspNet.Identity.UserManager`2.SendEmailAsync(`1,System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.SendEmailAsync(`1,System.String,System.String)
        name: SendEmailAsync
        nameWithType: UserManager<TUser, TKey>.SendEmailAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.SendEmailAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.SendEmailAsync(`1,System.String,System.String)
        name: SendEmailAsync
        nameWithType: UserManager(Of TUser, TKey).SendEmailAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).SendEmailAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.SendEmailAsync(`1,System.String,System.String)
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SendEmailAsync(System.String,System.String,System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.SendEmailAsync(`1,System.String,System.String)
        name: SendEmailAsync
        nameWithType: UserManager<ApplicationUser, String>.SendEmailAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.SendEmailAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.SendEmailAsync(`1,System.String,System.String)
        name: SendEmailAsync
        nameWithType: UserManager(Of ApplicationUser, String).SendEmailAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).SendEmailAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.SendEmailAsync(`1,System.String,System.String)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SendEmailAsync(System.String,System.String,System.String)
  Microsoft.AspNet.Identity.UserManager`2.SendSmsAsync(`1,System.String):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.SendSmsAsync(`1,System.String)
        name: SendSmsAsync
        nameWithType: UserManager<TUser, TKey>.SendSmsAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.SendSmsAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.SendSmsAsync(`1,System.String)
        name: SendSmsAsync
        nameWithType: UserManager(Of TUser, TKey).SendSmsAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).SendSmsAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.SendSmsAsync(`1,System.String)
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SendSmsAsync(System.String,System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.SendSmsAsync(`1,System.String)
        name: SendSmsAsync
        nameWithType: UserManager<ApplicationUser, String>.SendSmsAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.SendSmsAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.SendSmsAsync(`1,System.String)
        name: SendSmsAsync
        nameWithType: UserManager(Of ApplicationUser, String).SendSmsAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).SendSmsAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.SendSmsAsync(`1,System.String)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SendSmsAsync(System.String,System.String)
  Microsoft.AspNet.Identity.UserManager`2.IsLockedOutAsync(`1):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.IsLockedOutAsync(`1)
        name: IsLockedOutAsync
        nameWithType: UserManager<TUser, TKey>.IsLockedOutAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.IsLockedOutAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.IsLockedOutAsync(`1)
        name: IsLockedOutAsync
        nameWithType: UserManager(Of TUser, TKey).IsLockedOutAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).IsLockedOutAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.IsLockedOutAsync(`1)
  Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.IsLockedOutAsync(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.IsLockedOutAsync(`1)
        name: IsLockedOutAsync
        nameWithType: UserManager<ApplicationUser, String>.IsLockedOutAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.IsLockedOutAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.IsLockedOutAsync(`1)
        name: IsLockedOutAsync
        nameWithType: UserManager(Of ApplicationUser, String).IsLockedOutAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).IsLockedOutAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.IsLockedOutAsync(`1)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.IsLockedOutAsync(System.String)
  Microsoft.AspNet.Identity.UserManager`2.SetLockoutEnabledAsync(`1,System.Boolean):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.SetLockoutEnabledAsync(`1,System.Boolean)
        name: SetLockoutEnabledAsync
        nameWithType: UserManager<TUser, TKey>.SetLockoutEnabledAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.SetLockoutEnabledAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.SetLockoutEnabledAsync(`1,System.Boolean)
        name: SetLockoutEnabledAsync
        nameWithType: UserManager(Of TUser, TKey).SetLockoutEnabledAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).SetLockoutEnabledAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.SetLockoutEnabledAsync(`1,System.Boolean)
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SetLockoutEnabledAsync(System.String,System.Boolean)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.SetLockoutEnabledAsync(`1,System.Boolean)
        name: SetLockoutEnabledAsync
        nameWithType: UserManager<ApplicationUser, String>.SetLockoutEnabledAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.SetLockoutEnabledAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.SetLockoutEnabledAsync(`1,System.Boolean)
        name: SetLockoutEnabledAsync
        nameWithType: UserManager(Of ApplicationUser, String).SetLockoutEnabledAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).SetLockoutEnabledAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.SetLockoutEnabledAsync(`1,System.Boolean)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SetLockoutEnabledAsync(System.String,System.Boolean)
  Microsoft.AspNet.Identity.UserManager`2.GetLockoutEnabledAsync(`1):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.GetLockoutEnabledAsync(`1)
        name: GetLockoutEnabledAsync
        nameWithType: UserManager<TUser, TKey>.GetLockoutEnabledAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.GetLockoutEnabledAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.GetLockoutEnabledAsync(`1)
        name: GetLockoutEnabledAsync
        nameWithType: UserManager(Of TUser, TKey).GetLockoutEnabledAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).GetLockoutEnabledAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.GetLockoutEnabledAsync(`1)
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.GetLockoutEnabledAsync(System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.GetLockoutEnabledAsync(`1)
        name: GetLockoutEnabledAsync
        nameWithType: UserManager<ApplicationUser, String>.GetLockoutEnabledAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.GetLockoutEnabledAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.GetLockoutEnabledAsync(`1)
        name: GetLockoutEnabledAsync
        nameWithType: UserManager(Of ApplicationUser, String).GetLockoutEnabledAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).GetLockoutEnabledAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.GetLockoutEnabledAsync(`1)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.GetLockoutEnabledAsync(System.String)
  Microsoft.AspNet.Identity.UserManager`2.GetLockoutEndDateAsync(`1):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.GetLockoutEndDateAsync(`1)
        name: GetLockoutEndDateAsync
        nameWithType: UserManager<TUser, TKey>.GetLockoutEndDateAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.GetLockoutEndDateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.GetLockoutEndDateAsync(`1)
        name: GetLockoutEndDateAsync
        nameWithType: UserManager(Of TUser, TKey).GetLockoutEndDateAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).GetLockoutEndDateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.GetLockoutEndDateAsync(`1)
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.GetLockoutEndDateAsync(System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.GetLockoutEndDateAsync(`1)
        name: GetLockoutEndDateAsync
        nameWithType: UserManager<ApplicationUser, String>.GetLockoutEndDateAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.GetLockoutEndDateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.GetLockoutEndDateAsync(`1)
        name: GetLockoutEndDateAsync
        nameWithType: UserManager(Of ApplicationUser, String).GetLockoutEndDateAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).GetLockoutEndDateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.GetLockoutEndDateAsync(`1)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.GetLockoutEndDateAsync(System.String)
  Microsoft.AspNet.Identity.UserManager`2.SetLockoutEndDateAsync(`1,System.DateTimeOffset):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.SetLockoutEndDateAsync(`1,System.DateTimeOffset)
        name: SetLockoutEndDateAsync
        nameWithType: UserManager<TUser, TKey>.SetLockoutEndDateAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.SetLockoutEndDateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.DateTimeOffset
        name: DateTimeOffset
        nameWithType: DateTimeOffset
        qualifiedName: System.DateTimeOffset
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.SetLockoutEndDateAsync(`1,System.DateTimeOffset)
        name: SetLockoutEndDateAsync
        nameWithType: UserManager(Of TUser, TKey).SetLockoutEndDateAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).SetLockoutEndDateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.DateTimeOffset
        name: DateTimeOffset
        nameWithType: DateTimeOffset
        qualifiedName: System.DateTimeOffset
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.SetLockoutEndDateAsync(`1,System.DateTimeOffset)
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SetLockoutEndDateAsync(System.String,System.DateTimeOffset)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.SetLockoutEndDateAsync(`1,System.DateTimeOffset)
        name: SetLockoutEndDateAsync
        nameWithType: UserManager<ApplicationUser, String>.SetLockoutEndDateAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.SetLockoutEndDateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.DateTimeOffset
        name: DateTimeOffset
        nameWithType: DateTimeOffset
        qualifiedName: System.DateTimeOffset
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.SetLockoutEndDateAsync(`1,System.DateTimeOffset)
        name: SetLockoutEndDateAsync
        nameWithType: UserManager(Of ApplicationUser, String).SetLockoutEndDateAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).SetLockoutEndDateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.DateTimeOffset
        name: DateTimeOffset
        nameWithType: DateTimeOffset
        qualifiedName: System.DateTimeOffset
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.SetLockoutEndDateAsync(`1,System.DateTimeOffset)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SetLockoutEndDateAsync(System.String,System.DateTimeOffset)
  Microsoft.AspNet.Identity.UserManager`2.AccessFailedAsync(`1):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.AccessFailedAsync(`1)
        name: AccessFailedAsync
        nameWithType: UserManager<TUser, TKey>.AccessFailedAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.AccessFailedAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.AccessFailedAsync(`1)
        name: AccessFailedAsync
        nameWithType: UserManager(Of TUser, TKey).AccessFailedAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).AccessFailedAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.AccessFailedAsync(`1)
  Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.AccessFailedAsync(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.AccessFailedAsync(`1)
        name: AccessFailedAsync
        nameWithType: UserManager<ApplicationUser, String>.AccessFailedAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.AccessFailedAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.AccessFailedAsync(`1)
        name: AccessFailedAsync
        nameWithType: UserManager(Of ApplicationUser, String).AccessFailedAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).AccessFailedAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.AccessFailedAsync(`1)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.AccessFailedAsync(System.String)
  Microsoft.AspNet.Identity.UserManager`2.ResetAccessFailedCountAsync(`1):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.ResetAccessFailedCountAsync(`1)
        name: ResetAccessFailedCountAsync
        nameWithType: UserManager<TUser, TKey>.ResetAccessFailedCountAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.ResetAccessFailedCountAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.ResetAccessFailedCountAsync(`1)
        name: ResetAccessFailedCountAsync
        nameWithType: UserManager(Of TUser, TKey).ResetAccessFailedCountAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).ResetAccessFailedCountAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.ResetAccessFailedCountAsync(`1)
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.ResetAccessFailedCountAsync(System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.ResetAccessFailedCountAsync(`1)
        name: ResetAccessFailedCountAsync
        nameWithType: UserManager<ApplicationUser, String>.ResetAccessFailedCountAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.ResetAccessFailedCountAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.ResetAccessFailedCountAsync(`1)
        name: ResetAccessFailedCountAsync
        nameWithType: UserManager(Of ApplicationUser, String).ResetAccessFailedCountAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).ResetAccessFailedCountAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.ResetAccessFailedCountAsync(`1)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.ResetAccessFailedCountAsync(System.String)
  Microsoft.AspNet.Identity.UserManager`2.GetAccessFailedCountAsync(`1):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.GetAccessFailedCountAsync(`1)
        name: GetAccessFailedCountAsync
        nameWithType: UserManager<TUser, TKey>.GetAccessFailedCountAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.GetAccessFailedCountAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.GetAccessFailedCountAsync(`1)
        name: GetAccessFailedCountAsync
        nameWithType: UserManager(Of TUser, TKey).GetAccessFailedCountAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).GetAccessFailedCountAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.GetAccessFailedCountAsync(`1)
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.GetAccessFailedCountAsync(System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.GetAccessFailedCountAsync(`1)
        name: GetAccessFailedCountAsync
        nameWithType: UserManager<ApplicationUser, String>.GetAccessFailedCountAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.GetAccessFailedCountAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.GetAccessFailedCountAsync(`1)
        name: GetAccessFailedCountAsync
        nameWithType: UserManager(Of ApplicationUser, String).GetAccessFailedCountAsync
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).GetAccessFailedCountAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.GetAccessFailedCountAsync(`1)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.GetAccessFailedCountAsync(System.String)
  Microsoft.AspNet.Identity.UserManager`2.Dispose(System.Boolean):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.Dispose(System.Boolean)
        name: Dispose
        nameWithType: UserManager<TUser, TKey>.Dispose
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.Dispose(System.Boolean)
        name: Dispose
        nameWithType: UserManager(Of TUser, TKey).Dispose
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.UserManager`2.Dispose(System.Boolean)
  Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.Dispose(System.Boolean):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.Dispose(System.Boolean)
        name: Dispose
        nameWithType: UserManager<ApplicationUser, String>.Dispose
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.Dispose(System.Boolean)
        name: Dispose
        nameWithType: UserManager(Of ApplicationUser, String).Dispose
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.Dispose(System.Boolean)
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.Dispose(System.Boolean)
  Microsoft.AspNet.Identity.UserManager`2.Store:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.Store
        name: Store
        nameWithType: UserManager<TUser, TKey>.Store
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.Store
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.Store
        name: Store
        nameWithType: UserManager(Of TUser, TKey).Store
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).Store
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNet.Identity.UserManager`2.Store
  Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.Store:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.Store
        name: Store
        nameWithType: UserManager<ApplicationUser, String>.Store
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.Store
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.Store
        name: Store
        nameWithType: UserManager(Of ApplicationUser, String).Store
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).Store
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.Store
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: P:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.Store
  Microsoft.AspNet.Identity.UserManager`2.PasswordHasher:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.PasswordHasher
        name: PasswordHasher
        nameWithType: UserManager<TUser, TKey>.PasswordHasher
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.PasswordHasher
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.PasswordHasher
        name: PasswordHasher
        nameWithType: UserManager(Of TUser, TKey).PasswordHasher
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).PasswordHasher
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNet.Identity.UserManager`2.PasswordHasher
  Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.PasswordHasher:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.PasswordHasher
        name: PasswordHasher
        nameWithType: UserManager<ApplicationUser, String>.PasswordHasher
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.PasswordHasher
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.PasswordHasher
        name: PasswordHasher
        nameWithType: UserManager(Of ApplicationUser, String).PasswordHasher
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).PasswordHasher
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.PasswordHasher
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: P:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.PasswordHasher
  Microsoft.AspNet.Identity.UserManager`2.UserValidator:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.UserValidator
        name: UserValidator
        nameWithType: UserManager<TUser, TKey>.UserValidator
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.UserValidator
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.UserValidator
        name: UserValidator
        nameWithType: UserManager(Of TUser, TKey).UserValidator
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).UserValidator
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNet.Identity.UserManager`2.UserValidator
  Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.UserValidator:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.UserValidator
        name: UserValidator
        nameWithType: UserManager<ApplicationUser, String>.UserValidator
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.UserValidator
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.UserValidator
        name: UserValidator
        nameWithType: UserManager(Of ApplicationUser, String).UserValidator
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).UserValidator
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.UserValidator
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: P:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.UserValidator
  Microsoft.AspNet.Identity.UserManager`2.PasswordValidator:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.PasswordValidator
        name: PasswordValidator
        nameWithType: UserManager<TUser, TKey>.PasswordValidator
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.PasswordValidator
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.PasswordValidator
        name: PasswordValidator
        nameWithType: UserManager(Of TUser, TKey).PasswordValidator
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).PasswordValidator
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNet.Identity.UserManager`2.PasswordValidator
  Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.PasswordValidator:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.PasswordValidator
        name: PasswordValidator
        nameWithType: UserManager<ApplicationUser, String>.PasswordValidator
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.PasswordValidator
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.PasswordValidator
        name: PasswordValidator
        nameWithType: UserManager(Of ApplicationUser, String).PasswordValidator
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).PasswordValidator
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.PasswordValidator
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: P:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.PasswordValidator
  Microsoft.AspNet.Identity.UserManager`2.ClaimsIdentityFactory:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.ClaimsIdentityFactory
        name: ClaimsIdentityFactory
        nameWithType: UserManager<TUser, TKey>.ClaimsIdentityFactory
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.ClaimsIdentityFactory
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.ClaimsIdentityFactory
        name: ClaimsIdentityFactory
        nameWithType: UserManager(Of TUser, TKey).ClaimsIdentityFactory
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).ClaimsIdentityFactory
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNet.Identity.UserManager`2.ClaimsIdentityFactory
  Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.ClaimsIdentityFactory:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.ClaimsIdentityFactory
        name: ClaimsIdentityFactory
        nameWithType: UserManager<ApplicationUser, String>.ClaimsIdentityFactory
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.ClaimsIdentityFactory
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.ClaimsIdentityFactory
        name: ClaimsIdentityFactory
        nameWithType: UserManager(Of ApplicationUser, String).ClaimsIdentityFactory
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).ClaimsIdentityFactory
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.ClaimsIdentityFactory
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: P:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.ClaimsIdentityFactory
  Microsoft.AspNet.Identity.UserManager`2.EmailService:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.EmailService
        name: EmailService
        nameWithType: UserManager<TUser, TKey>.EmailService
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.EmailService
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.EmailService
        name: EmailService
        nameWithType: UserManager(Of TUser, TKey).EmailService
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).EmailService
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNet.Identity.UserManager`2.EmailService
  Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.EmailService:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.EmailService
        name: EmailService
        nameWithType: UserManager<ApplicationUser, String>.EmailService
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.EmailService
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.EmailService
        name: EmailService
        nameWithType: UserManager(Of ApplicationUser, String).EmailService
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).EmailService
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.EmailService
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: P:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.EmailService
  Microsoft.AspNet.Identity.UserManager`2.SmsService:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.SmsService
        name: SmsService
        nameWithType: UserManager<TUser, TKey>.SmsService
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.SmsService
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.SmsService
        name: SmsService
        nameWithType: UserManager(Of TUser, TKey).SmsService
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).SmsService
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNet.Identity.UserManager`2.SmsService
  Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SmsService:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.SmsService
        name: SmsService
        nameWithType: UserManager<ApplicationUser, String>.SmsService
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.SmsService
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.SmsService
        name: SmsService
        nameWithType: UserManager(Of ApplicationUser, String).SmsService
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).SmsService
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.SmsService
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: P:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SmsService
  Microsoft.AspNet.Identity.UserManager`2.UserTokenProvider:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.UserTokenProvider
        name: UserTokenProvider
        nameWithType: UserManager<TUser, TKey>.UserTokenProvider
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.UserTokenProvider
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.UserTokenProvider
        name: UserTokenProvider
        nameWithType: UserManager(Of TUser, TKey).UserTokenProvider
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).UserTokenProvider
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNet.Identity.UserManager`2.UserTokenProvider
  Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.UserTokenProvider:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.UserTokenProvider
        name: UserTokenProvider
        nameWithType: UserManager<ApplicationUser, String>.UserTokenProvider
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.UserTokenProvider
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.UserTokenProvider
        name: UserTokenProvider
        nameWithType: UserManager(Of ApplicationUser, String).UserTokenProvider
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).UserTokenProvider
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.UserTokenProvider
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: P:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.UserTokenProvider
  Microsoft.AspNet.Identity.UserManager`2.UserLockoutEnabledByDefault:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.UserLockoutEnabledByDefault
        name: UserLockoutEnabledByDefault
        nameWithType: UserManager<TUser, TKey>.UserLockoutEnabledByDefault
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.UserLockoutEnabledByDefault
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.UserLockoutEnabledByDefault
        name: UserLockoutEnabledByDefault
        nameWithType: UserManager(Of TUser, TKey).UserLockoutEnabledByDefault
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).UserLockoutEnabledByDefault
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNet.Identity.UserManager`2.UserLockoutEnabledByDefault
  Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.UserLockoutEnabledByDefault:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.UserLockoutEnabledByDefault
        name: UserLockoutEnabledByDefault
        nameWithType: UserManager<ApplicationUser, String>.UserLockoutEnabledByDefault
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.UserLockoutEnabledByDefault
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.UserLockoutEnabledByDefault
        name: UserLockoutEnabledByDefault
        nameWithType: UserManager(Of ApplicationUser, String).UserLockoutEnabledByDefault
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).UserLockoutEnabledByDefault
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.UserLockoutEnabledByDefault
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: P:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.UserLockoutEnabledByDefault
  Microsoft.AspNet.Identity.UserManager`2.MaxFailedAccessAttemptsBeforeLockout:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.MaxFailedAccessAttemptsBeforeLockout
        name: MaxFailedAccessAttemptsBeforeLockout
        nameWithType: UserManager<TUser, TKey>.MaxFailedAccessAttemptsBeforeLockout
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.MaxFailedAccessAttemptsBeforeLockout
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.MaxFailedAccessAttemptsBeforeLockout
        name: MaxFailedAccessAttemptsBeforeLockout
        nameWithType: UserManager(Of TUser, TKey).MaxFailedAccessAttemptsBeforeLockout
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).MaxFailedAccessAttemptsBeforeLockout
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNet.Identity.UserManager`2.MaxFailedAccessAttemptsBeforeLockout
  ? Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.MaxFailedAccessAttemptsBeforeLockout
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.MaxFailedAccessAttemptsBeforeLockout
        name: MaxFailedAccessAttemptsBeforeLockout
        nameWithType: UserManager<ApplicationUser, String>.MaxFailedAccessAttemptsBeforeLockout
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.MaxFailedAccessAttemptsBeforeLockout
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.MaxFailedAccessAttemptsBeforeLockout
        name: MaxFailedAccessAttemptsBeforeLockout
        nameWithType: UserManager(Of ApplicationUser, String).MaxFailedAccessAttemptsBeforeLockout
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).MaxFailedAccessAttemptsBeforeLockout
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.MaxFailedAccessAttemptsBeforeLockout
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: P:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.MaxFailedAccessAttemptsBeforeLockout
  Microsoft.AspNet.Identity.UserManager`2.DefaultAccountLockoutTimeSpan:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.DefaultAccountLockoutTimeSpan
        name: DefaultAccountLockoutTimeSpan
        nameWithType: UserManager<TUser, TKey>.DefaultAccountLockoutTimeSpan
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.DefaultAccountLockoutTimeSpan
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.DefaultAccountLockoutTimeSpan
        name: DefaultAccountLockoutTimeSpan
        nameWithType: UserManager(Of TUser, TKey).DefaultAccountLockoutTimeSpan
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).DefaultAccountLockoutTimeSpan
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNet.Identity.UserManager`2.DefaultAccountLockoutTimeSpan
  Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.DefaultAccountLockoutTimeSpan:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.DefaultAccountLockoutTimeSpan
        name: DefaultAccountLockoutTimeSpan
        nameWithType: UserManager<ApplicationUser, String>.DefaultAccountLockoutTimeSpan
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.DefaultAccountLockoutTimeSpan
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.DefaultAccountLockoutTimeSpan
        name: DefaultAccountLockoutTimeSpan
        nameWithType: UserManager(Of ApplicationUser, String).DefaultAccountLockoutTimeSpan
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).DefaultAccountLockoutTimeSpan
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.DefaultAccountLockoutTimeSpan
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: P:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.DefaultAccountLockoutTimeSpan
  Microsoft.AspNet.Identity.UserManager`2.SupportsUserTwoFactor:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.SupportsUserTwoFactor
        name: SupportsUserTwoFactor
        nameWithType: UserManager<TUser, TKey>.SupportsUserTwoFactor
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.SupportsUserTwoFactor
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.SupportsUserTwoFactor
        name: SupportsUserTwoFactor
        nameWithType: UserManager(Of TUser, TKey).SupportsUserTwoFactor
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).SupportsUserTwoFactor
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNet.Identity.UserManager`2.SupportsUserTwoFactor
  Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SupportsUserTwoFactor:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.SupportsUserTwoFactor
        name: SupportsUserTwoFactor
        nameWithType: UserManager<ApplicationUser, String>.SupportsUserTwoFactor
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.SupportsUserTwoFactor
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.SupportsUserTwoFactor
        name: SupportsUserTwoFactor
        nameWithType: UserManager(Of ApplicationUser, String).SupportsUserTwoFactor
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).SupportsUserTwoFactor
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.SupportsUserTwoFactor
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: P:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SupportsUserTwoFactor
  Microsoft.AspNet.Identity.UserManager`2.SupportsUserPassword:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.SupportsUserPassword
        name: SupportsUserPassword
        nameWithType: UserManager<TUser, TKey>.SupportsUserPassword
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.SupportsUserPassword
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.SupportsUserPassword
        name: SupportsUserPassword
        nameWithType: UserManager(Of TUser, TKey).SupportsUserPassword
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).SupportsUserPassword
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNet.Identity.UserManager`2.SupportsUserPassword
  Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SupportsUserPassword:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.SupportsUserPassword
        name: SupportsUserPassword
        nameWithType: UserManager<ApplicationUser, String>.SupportsUserPassword
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.SupportsUserPassword
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.SupportsUserPassword
        name: SupportsUserPassword
        nameWithType: UserManager(Of ApplicationUser, String).SupportsUserPassword
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).SupportsUserPassword
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.SupportsUserPassword
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: P:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SupportsUserPassword
  Microsoft.AspNet.Identity.UserManager`2.SupportsUserSecurityStamp:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.SupportsUserSecurityStamp
        name: SupportsUserSecurityStamp
        nameWithType: UserManager<TUser, TKey>.SupportsUserSecurityStamp
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.SupportsUserSecurityStamp
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.SupportsUserSecurityStamp
        name: SupportsUserSecurityStamp
        nameWithType: UserManager(Of TUser, TKey).SupportsUserSecurityStamp
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).SupportsUserSecurityStamp
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNet.Identity.UserManager`2.SupportsUserSecurityStamp
  Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SupportsUserSecurityStamp:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.SupportsUserSecurityStamp
        name: SupportsUserSecurityStamp
        nameWithType: UserManager<ApplicationUser, String>.SupportsUserSecurityStamp
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.SupportsUserSecurityStamp
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.SupportsUserSecurityStamp
        name: SupportsUserSecurityStamp
        nameWithType: UserManager(Of ApplicationUser, String).SupportsUserSecurityStamp
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).SupportsUserSecurityStamp
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.SupportsUserSecurityStamp
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: P:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SupportsUserSecurityStamp
  Microsoft.AspNet.Identity.UserManager`2.SupportsUserRole:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.SupportsUserRole
        name: SupportsUserRole
        nameWithType: UserManager<TUser, TKey>.SupportsUserRole
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.SupportsUserRole
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.SupportsUserRole
        name: SupportsUserRole
        nameWithType: UserManager(Of TUser, TKey).SupportsUserRole
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).SupportsUserRole
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNet.Identity.UserManager`2.SupportsUserRole
  Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SupportsUserRole:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.SupportsUserRole
        name: SupportsUserRole
        nameWithType: UserManager<ApplicationUser, String>.SupportsUserRole
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.SupportsUserRole
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.SupportsUserRole
        name: SupportsUserRole
        nameWithType: UserManager(Of ApplicationUser, String).SupportsUserRole
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).SupportsUserRole
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.SupportsUserRole
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: P:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SupportsUserRole
  Microsoft.AspNet.Identity.UserManager`2.SupportsUserLogin:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.SupportsUserLogin
        name: SupportsUserLogin
        nameWithType: UserManager<TUser, TKey>.SupportsUserLogin
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.SupportsUserLogin
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.SupportsUserLogin
        name: SupportsUserLogin
        nameWithType: UserManager(Of TUser, TKey).SupportsUserLogin
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).SupportsUserLogin
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNet.Identity.UserManager`2.SupportsUserLogin
  Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SupportsUserLogin:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.SupportsUserLogin
        name: SupportsUserLogin
        nameWithType: UserManager<ApplicationUser, String>.SupportsUserLogin
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.SupportsUserLogin
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.SupportsUserLogin
        name: SupportsUserLogin
        nameWithType: UserManager(Of ApplicationUser, String).SupportsUserLogin
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).SupportsUserLogin
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.SupportsUserLogin
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: P:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SupportsUserLogin
  Microsoft.AspNet.Identity.UserManager`2.SupportsUserEmail:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.SupportsUserEmail
        name: SupportsUserEmail
        nameWithType: UserManager<TUser, TKey>.SupportsUserEmail
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.SupportsUserEmail
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.SupportsUserEmail
        name: SupportsUserEmail
        nameWithType: UserManager(Of TUser, TKey).SupportsUserEmail
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).SupportsUserEmail
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNet.Identity.UserManager`2.SupportsUserEmail
  Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SupportsUserEmail:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.SupportsUserEmail
        name: SupportsUserEmail
        nameWithType: UserManager<ApplicationUser, String>.SupportsUserEmail
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.SupportsUserEmail
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.SupportsUserEmail
        name: SupportsUserEmail
        nameWithType: UserManager(Of ApplicationUser, String).SupportsUserEmail
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).SupportsUserEmail
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.SupportsUserEmail
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: P:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SupportsUserEmail
  Microsoft.AspNet.Identity.UserManager`2.SupportsUserPhoneNumber:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.SupportsUserPhoneNumber
        name: SupportsUserPhoneNumber
        nameWithType: UserManager<TUser, TKey>.SupportsUserPhoneNumber
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.SupportsUserPhoneNumber
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.SupportsUserPhoneNumber
        name: SupportsUserPhoneNumber
        nameWithType: UserManager(Of TUser, TKey).SupportsUserPhoneNumber
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).SupportsUserPhoneNumber
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNet.Identity.UserManager`2.SupportsUserPhoneNumber
  Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SupportsUserPhoneNumber:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.SupportsUserPhoneNumber
        name: SupportsUserPhoneNumber
        nameWithType: UserManager<ApplicationUser, String>.SupportsUserPhoneNumber
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.SupportsUserPhoneNumber
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.SupportsUserPhoneNumber
        name: SupportsUserPhoneNumber
        nameWithType: UserManager(Of ApplicationUser, String).SupportsUserPhoneNumber
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).SupportsUserPhoneNumber
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.SupportsUserPhoneNumber
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: P:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SupportsUserPhoneNumber
  Microsoft.AspNet.Identity.UserManager`2.SupportsUserClaim:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.SupportsUserClaim
        name: SupportsUserClaim
        nameWithType: UserManager<TUser, TKey>.SupportsUserClaim
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.SupportsUserClaim
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.SupportsUserClaim
        name: SupportsUserClaim
        nameWithType: UserManager(Of TUser, TKey).SupportsUserClaim
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).SupportsUserClaim
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNet.Identity.UserManager`2.SupportsUserClaim
  Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SupportsUserClaim:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.SupportsUserClaim
        name: SupportsUserClaim
        nameWithType: UserManager<ApplicationUser, String>.SupportsUserClaim
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.SupportsUserClaim
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.SupportsUserClaim
        name: SupportsUserClaim
        nameWithType: UserManager(Of ApplicationUser, String).SupportsUserClaim
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).SupportsUserClaim
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.SupportsUserClaim
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: P:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SupportsUserClaim
  Microsoft.AspNet.Identity.UserManager`2.SupportsUserLockout:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.SupportsUserLockout
        name: SupportsUserLockout
        nameWithType: UserManager<TUser, TKey>.SupportsUserLockout
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.SupportsUserLockout
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.SupportsUserLockout
        name: SupportsUserLockout
        nameWithType: UserManager(Of TUser, TKey).SupportsUserLockout
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).SupportsUserLockout
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNet.Identity.UserManager`2.SupportsUserLockout
  Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SupportsUserLockout:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.SupportsUserLockout
        name: SupportsUserLockout
        nameWithType: UserManager<ApplicationUser, String>.SupportsUserLockout
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.SupportsUserLockout
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.SupportsUserLockout
        name: SupportsUserLockout
        nameWithType: UserManager(Of ApplicationUser, String).SupportsUserLockout
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).SupportsUserLockout
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.SupportsUserLockout
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: P:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SupportsUserLockout
  Microsoft.AspNet.Identity.UserManager`2.SupportsQueryableUsers:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.SupportsQueryableUsers
        name: SupportsQueryableUsers
        nameWithType: UserManager<TUser, TKey>.SupportsQueryableUsers
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.SupportsQueryableUsers
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.SupportsQueryableUsers
        name: SupportsQueryableUsers
        nameWithType: UserManager(Of TUser, TKey).SupportsQueryableUsers
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).SupportsQueryableUsers
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNet.Identity.UserManager`2.SupportsQueryableUsers
  Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SupportsQueryableUsers:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.SupportsQueryableUsers
        name: SupportsQueryableUsers
        nameWithType: UserManager<ApplicationUser, String>.SupportsQueryableUsers
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.SupportsQueryableUsers
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.SupportsQueryableUsers
        name: SupportsQueryableUsers
        nameWithType: UserManager(Of ApplicationUser, String).SupportsQueryableUsers
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).SupportsQueryableUsers
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.SupportsQueryableUsers
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: P:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.SupportsQueryableUsers
  Microsoft.AspNet.Identity.UserManager`2.Users:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.Users
        name: Users
        nameWithType: UserManager<TUser, TKey>.Users
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.Users
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.Users
        name: Users
        nameWithType: UserManager(Of TUser, TKey).Users
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).Users
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNet.Identity.UserManager`2.Users
  Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.Users:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.Users
        name: Users
        nameWithType: UserManager<ApplicationUser, String>.Users
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.Users
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.Users
        name: Users
        nameWithType: UserManager(Of ApplicationUser, String).Users
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).Users
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.Users
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: P:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.Users
  Microsoft.AspNet.Identity.UserManager`2.TwoFactorProviders:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.TwoFactorProviders
        name: TwoFactorProviders
        nameWithType: UserManager<TUser, TKey>.TwoFactorProviders
        qualifiedName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.TwoFactorProviders
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.TwoFactorProviders
        name: TwoFactorProviders
        nameWithType: UserManager(Of TUser, TKey).TwoFactorProviders
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).TwoFactorProviders
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNet.Identity.UserManager`2.TwoFactorProviders
  Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.TwoFactorProviders:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.UserManager`2.TwoFactorProviders
        name: TwoFactorProviders
        nameWithType: UserManager<ApplicationUser, String>.TwoFactorProviders
        qualifiedName: Microsoft.AspNet.Identity.UserManager<BookstoreProject.Models.ApplicationUser, System.String>.TwoFactorProviders
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.UserManager`2.TwoFactorProviders
        name: TwoFactorProviders
        nameWithType: UserManager(Of ApplicationUser, String).TwoFactorProviders
        qualifiedName: Microsoft.AspNet.Identity.UserManager(Of BookstoreProject.Models.ApplicationUser, System.String).TwoFactorProviders
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNet.Identity.UserManager`2.TwoFactorProviders
    parent: Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: P:Microsoft.AspNet.Identity.UserManager{BookstoreProject.Models.ApplicationUser,System.String}.TwoFactorProviders
  System.IDisposable:
    name:
      CSharp:
      - id: System.IDisposable
        name: IDisposable
        nameWithType: IDisposable
        qualifiedName: System.IDisposable
        isExternal: true
      VB:
      - id: System.IDisposable
        name: IDisposable
        nameWithType: IDisposable
        qualifiedName: System.IDisposable
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.IDisposable
  Microsoft.AspNet.Identity.IUserStore`1:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.IUserStore`1
        name: IUserStore
        nameWithType: IUserStore
        qualifiedName: Microsoft.AspNet.Identity.IUserStore
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.AspNet.Identity.IUserStore`1
        name: IUserStore
        nameWithType: IUserStore
        qualifiedName: Microsoft.AspNet.Identity.IUserStore
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:Microsoft.AspNet.Identity.IUserStore`1
  Microsoft.AspNet.Identity.IUserStore{BookstoreProject.Models.ApplicationUser}:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.IUserStore`1
        name: IUserStore
        nameWithType: IUserStore
        qualifiedName: Microsoft.AspNet.Identity.IUserStore
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: BookstoreProject.Models.ApplicationUser
        name: ApplicationUser
        nameWithType: ApplicationUser
        qualifiedName: BookstoreProject.Models.ApplicationUser
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.AspNet.Identity.IUserStore`1
        name: IUserStore
        nameWithType: IUserStore
        qualifiedName: Microsoft.AspNet.Identity.IUserStore
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: BookstoreProject.Models.ApplicationUser
        name: ApplicationUser
        nameWithType: ApplicationUser
        qualifiedName: BookstoreProject.Models.ApplicationUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.IUserStore`1
    parent: Microsoft.AspNet.Identity
    commentId: T:Microsoft.AspNet.Identity.IUserStore{BookstoreProject.Models.ApplicationUser}
  BookstoreProject.ApplicationUserManager.#ctor*:
    name:
      CSharp:
      - id: BookstoreProject.ApplicationUserManager.#ctor*
        name: ApplicationUserManager
        nameWithType: ApplicationUserManager.ApplicationUserManager
        qualifiedName: BookstoreProject.ApplicationUserManager.ApplicationUserManager
      VB:
      - id: BookstoreProject.ApplicationUserManager.#ctor*
        name: ApplicationUserManager
        nameWithType: ApplicationUserManager.ApplicationUserManager
        qualifiedName: BookstoreProject.ApplicationUserManager.ApplicationUserManager
    isDefinition: true
    commentId: Overload:BookstoreProject.ApplicationUserManager.#ctor
  BookstoreProject:
    name:
      CSharp:
      - name: BookstoreProject
        nameWithType: BookstoreProject
        qualifiedName: BookstoreProject
      VB:
      - name: BookstoreProject
        nameWithType: BookstoreProject
        qualifiedName: BookstoreProject
    isDefinition: true
    commentId: N:BookstoreProject
  BookstoreProject.ApplicationUserManager:
    name:
      CSharp:
      - id: BookstoreProject.ApplicationUserManager
        name: ApplicationUserManager
        nameWithType: ApplicationUserManager
        qualifiedName: BookstoreProject.ApplicationUserManager
      VB:
      - id: BookstoreProject.ApplicationUserManager
        name: ApplicationUserManager
        nameWithType: ApplicationUserManager
        qualifiedName: BookstoreProject.ApplicationUserManager
    isDefinition: true
    parent: BookstoreProject
    commentId: T:BookstoreProject.ApplicationUserManager
  Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions`1:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions`1
        name: IdentityFactoryOptions
        nameWithType: IdentityFactoryOptions
        qualifiedName: Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions`1
        name: IdentityFactoryOptions
        nameWithType: IdentityFactoryOptions
        qualifiedName: Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions`1
  Microsoft.AspNet.Identity.Owin:
    name:
      CSharp:
      - name: Microsoft.AspNet.Identity.Owin
        nameWithType: Microsoft.AspNet.Identity.Owin
        qualifiedName: Microsoft.AspNet.Identity.Owin
        isExternal: true
      VB:
      - name: Microsoft.AspNet.Identity.Owin
        nameWithType: Microsoft.AspNet.Identity.Owin
        qualifiedName: Microsoft.AspNet.Identity.Owin
    isDefinition: true
    commentId: N:Microsoft.AspNet.Identity.Owin
  Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions{BookstoreProject.ApplicationUserManager}:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions`1
        name: IdentityFactoryOptions
        nameWithType: IdentityFactoryOptions
        qualifiedName: Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: BookstoreProject.ApplicationUserManager
        name: ApplicationUserManager
        nameWithType: ApplicationUserManager
        qualifiedName: BookstoreProject.ApplicationUserManager
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions`1
        name: IdentityFactoryOptions
        nameWithType: IdentityFactoryOptions
        qualifiedName: Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: BookstoreProject.ApplicationUserManager
        name: ApplicationUserManager
        nameWithType: ApplicationUserManager
        qualifiedName: BookstoreProject.ApplicationUserManager
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions`1
    parent: Microsoft.AspNet.Identity.Owin
    commentId: T:Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions{BookstoreProject.ApplicationUserManager}
  Microsoft.Owin:
    name:
      CSharp:
      - name: Microsoft.Owin
        nameWithType: Microsoft.Owin
        qualifiedName: Microsoft.Owin
        isExternal: true
      VB:
      - name: Microsoft.Owin
        nameWithType: Microsoft.Owin
        qualifiedName: Microsoft.Owin
    isDefinition: true
    commentId: N:Microsoft.Owin
  Microsoft.Owin.IOwinContext:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinContext
        name: IOwinContext
        nameWithType: IOwinContext
        qualifiedName: Microsoft.Owin.IOwinContext
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinContext
        name: IOwinContext
        nameWithType: IOwinContext
        qualifiedName: Microsoft.Owin.IOwinContext
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin
    commentId: T:Microsoft.Owin.IOwinContext
  BookstoreProject.ApplicationUserManager.Create*:
    name:
      CSharp:
      - id: BookstoreProject.ApplicationUserManager.Create*
        name: Create
        nameWithType: ApplicationUserManager.Create
        qualifiedName: BookstoreProject.ApplicationUserManager.Create
      VB:
      - id: BookstoreProject.ApplicationUserManager.Create*
        name: Create
        nameWithType: ApplicationUserManager.Create
        qualifiedName: BookstoreProject.ApplicationUserManager.Create
    isDefinition: true
    commentId: Overload:BookstoreProject.ApplicationUserManager.Create
  Microsoft.AspNet.Identity.Owin.SignInManager`2:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2
        name: SignInManager
        nameWithType: SignInManager
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2
        name: SignInManager
        nameWithType: SignInManager
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:Microsoft.AspNet.Identity.Owin.SignInManager`2
  Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2
        name: SignInManager
        nameWithType: SignInManager
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: BookstoreProject.Models.ApplicationUser
        name: ApplicationUser
        nameWithType: ApplicationUser
        qualifiedName: BookstoreProject.Models.ApplicationUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2
        name: SignInManager
        nameWithType: SignInManager
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: BookstoreProject.Models.ApplicationUser
        name: ApplicationUser
        nameWithType: ApplicationUser
        qualifiedName: BookstoreProject.Models.ApplicationUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.Owin.SignInManager`2
    parent: Microsoft.AspNet.Identity.Owin
    commentId: T:Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}
  Microsoft.AspNet.Identity.Owin.SignInManager`2.CreateUserIdentityAsync(`0):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.CreateUserIdentityAsync(`0)
        name: CreateUserIdentityAsync
        nameWithType: SignInManager<TUser, TKey>.CreateUserIdentityAsync
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager<TUser, TKey>.CreateUserIdentityAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.CreateUserIdentityAsync(`0)
        name: CreateUserIdentityAsync
        nameWithType: SignInManager(Of TUser, TKey).CreateUserIdentityAsync
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager(Of TUser, TKey).CreateUserIdentityAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.Owin.SignInManager`2.CreateUserIdentityAsync(`0)
  ? Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}.CreateUserIdentityAsync(BookstoreProject.Models.ApplicationUser)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.CreateUserIdentityAsync(`0)
        name: CreateUserIdentityAsync
        nameWithType: SignInManager<ApplicationUser, String>.CreateUserIdentityAsync
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager<BookstoreProject.Models.ApplicationUser, System.String>.CreateUserIdentityAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: BookstoreProject.Models.ApplicationUser
        name: ApplicationUser
        nameWithType: ApplicationUser
        qualifiedName: BookstoreProject.Models.ApplicationUser
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.CreateUserIdentityAsync(`0)
        name: CreateUserIdentityAsync
        nameWithType: SignInManager(Of ApplicationUser, String).CreateUserIdentityAsync
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager(Of BookstoreProject.Models.ApplicationUser, System.String).CreateUserIdentityAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: BookstoreProject.Models.ApplicationUser
        name: ApplicationUser
        nameWithType: ApplicationUser
        qualifiedName: BookstoreProject.Models.ApplicationUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.Owin.SignInManager`2.CreateUserIdentityAsync(`0)
    parent: Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}.CreateUserIdentityAsync(BookstoreProject.Models.ApplicationUser)
  Microsoft.AspNet.Identity.Owin.SignInManager`2.ConvertIdToString(`1):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.ConvertIdToString(`1)
        name: ConvertIdToString
        nameWithType: SignInManager<TUser, TKey>.ConvertIdToString
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager<TUser, TKey>.ConvertIdToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.ConvertIdToString(`1)
        name: ConvertIdToString
        nameWithType: SignInManager(Of TUser, TKey).ConvertIdToString
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager(Of TUser, TKey).ConvertIdToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.Owin.SignInManager`2.ConvertIdToString(`1)
  ? Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}.ConvertIdToString(System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.ConvertIdToString(`1)
        name: ConvertIdToString
        nameWithType: SignInManager<ApplicationUser, String>.ConvertIdToString
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager<BookstoreProject.Models.ApplicationUser, System.String>.ConvertIdToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.ConvertIdToString(`1)
        name: ConvertIdToString
        nameWithType: SignInManager(Of ApplicationUser, String).ConvertIdToString
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager(Of BookstoreProject.Models.ApplicationUser, System.String).ConvertIdToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.Owin.SignInManager`2.ConvertIdToString(`1)
    parent: Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}.ConvertIdToString(System.String)
  Microsoft.AspNet.Identity.Owin.SignInManager`2.ConvertIdFromString(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.ConvertIdFromString(System.String)
        name: ConvertIdFromString
        nameWithType: SignInManager<TUser, TKey>.ConvertIdFromString
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager<TUser, TKey>.ConvertIdFromString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.ConvertIdFromString(System.String)
        name: ConvertIdFromString
        nameWithType: SignInManager(Of TUser, TKey).ConvertIdFromString
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager(Of TUser, TKey).ConvertIdFromString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.Owin.SignInManager`2.ConvertIdFromString(System.String)
  ? Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}.ConvertIdFromString(System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.ConvertIdFromString(System.String)
        name: ConvertIdFromString
        nameWithType: SignInManager<ApplicationUser, String>.ConvertIdFromString
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager<BookstoreProject.Models.ApplicationUser, System.String>.ConvertIdFromString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.ConvertIdFromString(System.String)
        name: ConvertIdFromString
        nameWithType: SignInManager(Of ApplicationUser, String).ConvertIdFromString
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager(Of BookstoreProject.Models.ApplicationUser, System.String).ConvertIdFromString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.Owin.SignInManager`2.ConvertIdFromString(System.String)
    parent: Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}.ConvertIdFromString(System.String)
  Microsoft.AspNet.Identity.Owin.SignInManager`2.SignInAsync(`0,System.Boolean,System.Boolean):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.SignInAsync(`0,System.Boolean,System.Boolean)
        name: SignInAsync
        nameWithType: SignInManager<TUser, TKey>.SignInAsync
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager<TUser, TKey>.SignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.SignInAsync(`0,System.Boolean,System.Boolean)
        name: SignInAsync
        nameWithType: SignInManager(Of TUser, TKey).SignInAsync
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager(Of TUser, TKey).SignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.Owin.SignInManager`2.SignInAsync(`0,System.Boolean,System.Boolean)
  ? Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}.SignInAsync(BookstoreProject.Models.ApplicationUser,System.Boolean,System.Boolean)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.SignInAsync(`0,System.Boolean,System.Boolean)
        name: SignInAsync
        nameWithType: SignInManager<ApplicationUser, String>.SignInAsync
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager<BookstoreProject.Models.ApplicationUser, System.String>.SignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: BookstoreProject.Models.ApplicationUser
        name: ApplicationUser
        nameWithType: ApplicationUser
        qualifiedName: BookstoreProject.Models.ApplicationUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.SignInAsync(`0,System.Boolean,System.Boolean)
        name: SignInAsync
        nameWithType: SignInManager(Of ApplicationUser, String).SignInAsync
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager(Of BookstoreProject.Models.ApplicationUser, System.String).SignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: BookstoreProject.Models.ApplicationUser
        name: ApplicationUser
        nameWithType: ApplicationUser
        qualifiedName: BookstoreProject.Models.ApplicationUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.Owin.SignInManager`2.SignInAsync(`0,System.Boolean,System.Boolean)
    parent: Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}.SignInAsync(BookstoreProject.Models.ApplicationUser,System.Boolean,System.Boolean)
  Microsoft.AspNet.Identity.Owin.SignInManager`2.SendTwoFactorCodeAsync(System.String):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.SendTwoFactorCodeAsync(System.String)
        name: SendTwoFactorCodeAsync
        nameWithType: SignInManager<TUser, TKey>.SendTwoFactorCodeAsync
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager<TUser, TKey>.SendTwoFactorCodeAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.SendTwoFactorCodeAsync(System.String)
        name: SendTwoFactorCodeAsync
        nameWithType: SignInManager(Of TUser, TKey).SendTwoFactorCodeAsync
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager(Of TUser, TKey).SendTwoFactorCodeAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.Owin.SignInManager`2.SendTwoFactorCodeAsync(System.String)
  ? Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}.SendTwoFactorCodeAsync(System.String)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.SendTwoFactorCodeAsync(System.String)
        name: SendTwoFactorCodeAsync
        nameWithType: SignInManager<ApplicationUser, String>.SendTwoFactorCodeAsync
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager<BookstoreProject.Models.ApplicationUser, System.String>.SendTwoFactorCodeAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.SendTwoFactorCodeAsync(System.String)
        name: SendTwoFactorCodeAsync
        nameWithType: SignInManager(Of ApplicationUser, String).SendTwoFactorCodeAsync
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager(Of BookstoreProject.Models.ApplicationUser, System.String).SendTwoFactorCodeAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.Owin.SignInManager`2.SendTwoFactorCodeAsync(System.String)
    parent: Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}.SendTwoFactorCodeAsync(System.String)
  Microsoft.AspNet.Identity.Owin.SignInManager`2.GetVerifiedUserIdAsync:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.GetVerifiedUserIdAsync
        name: GetVerifiedUserIdAsync
        nameWithType: SignInManager<TUser, TKey>.GetVerifiedUserIdAsync
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager<TUser, TKey>.GetVerifiedUserIdAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.GetVerifiedUserIdAsync
        name: GetVerifiedUserIdAsync
        nameWithType: SignInManager(Of TUser, TKey).GetVerifiedUserIdAsync
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager(Of TUser, TKey).GetVerifiedUserIdAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.Owin.SignInManager`2.GetVerifiedUserIdAsync
  Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}.GetVerifiedUserIdAsync:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.GetVerifiedUserIdAsync
        name: GetVerifiedUserIdAsync
        nameWithType: SignInManager<ApplicationUser, String>.GetVerifiedUserIdAsync
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager<BookstoreProject.Models.ApplicationUser, System.String>.GetVerifiedUserIdAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.GetVerifiedUserIdAsync
        name: GetVerifiedUserIdAsync
        nameWithType: SignInManager(Of ApplicationUser, String).GetVerifiedUserIdAsync
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager(Of BookstoreProject.Models.ApplicationUser, System.String).GetVerifiedUserIdAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.Owin.SignInManager`2.GetVerifiedUserIdAsync
    parent: Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}.GetVerifiedUserIdAsync
  Microsoft.AspNet.Identity.Owin.SignInManager`2.HasBeenVerifiedAsync:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.HasBeenVerifiedAsync
        name: HasBeenVerifiedAsync
        nameWithType: SignInManager<TUser, TKey>.HasBeenVerifiedAsync
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager<TUser, TKey>.HasBeenVerifiedAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.HasBeenVerifiedAsync
        name: HasBeenVerifiedAsync
        nameWithType: SignInManager(Of TUser, TKey).HasBeenVerifiedAsync
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager(Of TUser, TKey).HasBeenVerifiedAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.Owin.SignInManager`2.HasBeenVerifiedAsync
  Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}.HasBeenVerifiedAsync:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.HasBeenVerifiedAsync
        name: HasBeenVerifiedAsync
        nameWithType: SignInManager<ApplicationUser, String>.HasBeenVerifiedAsync
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager<BookstoreProject.Models.ApplicationUser, System.String>.HasBeenVerifiedAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.HasBeenVerifiedAsync
        name: HasBeenVerifiedAsync
        nameWithType: SignInManager(Of ApplicationUser, String).HasBeenVerifiedAsync
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager(Of BookstoreProject.Models.ApplicationUser, System.String).HasBeenVerifiedAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.Owin.SignInManager`2.HasBeenVerifiedAsync
    parent: Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}.HasBeenVerifiedAsync
  Microsoft.AspNet.Identity.Owin.SignInManager`2.TwoFactorSignInAsync(System.String,System.String,System.Boolean,System.Boolean):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.TwoFactorSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
        name: TwoFactorSignInAsync
        nameWithType: SignInManager<TUser, TKey>.TwoFactorSignInAsync
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager<TUser, TKey>.TwoFactorSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.TwoFactorSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
        name: TwoFactorSignInAsync
        nameWithType: SignInManager(Of TUser, TKey).TwoFactorSignInAsync
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager(Of TUser, TKey).TwoFactorSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.Owin.SignInManager`2.TwoFactorSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
  ? Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}.TwoFactorSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.TwoFactorSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
        name: TwoFactorSignInAsync
        nameWithType: SignInManager<ApplicationUser, String>.TwoFactorSignInAsync
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager<BookstoreProject.Models.ApplicationUser, System.String>.TwoFactorSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.TwoFactorSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
        name: TwoFactorSignInAsync
        nameWithType: SignInManager(Of ApplicationUser, String).TwoFactorSignInAsync
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager(Of BookstoreProject.Models.ApplicationUser, System.String).TwoFactorSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.Owin.SignInManager`2.TwoFactorSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
    parent: Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}.TwoFactorSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
  ? Microsoft.AspNet.Identity.Owin.SignInManager`2.ExternalSignInAsync(Microsoft.AspNet.Identity.Owin.ExternalLoginInfo,System.Boolean)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.ExternalSignInAsync(Microsoft.AspNet.Identity.Owin.ExternalLoginInfo,System.Boolean)
        name: ExternalSignInAsync
        nameWithType: SignInManager<TUser, TKey>.ExternalSignInAsync
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager<TUser, TKey>.ExternalSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.AspNet.Identity.Owin.ExternalLoginInfo
        name: ExternalLoginInfo
        nameWithType: ExternalLoginInfo
        qualifiedName: Microsoft.AspNet.Identity.Owin.ExternalLoginInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.ExternalSignInAsync(Microsoft.AspNet.Identity.Owin.ExternalLoginInfo,System.Boolean)
        name: ExternalSignInAsync
        nameWithType: SignInManager(Of TUser, TKey).ExternalSignInAsync
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager(Of TUser, TKey).ExternalSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.AspNet.Identity.Owin.ExternalLoginInfo
        name: ExternalLoginInfo
        nameWithType: ExternalLoginInfo
        qualifiedName: Microsoft.AspNet.Identity.Owin.ExternalLoginInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.Owin.SignInManager`2.ExternalSignInAsync(Microsoft.AspNet.Identity.Owin.ExternalLoginInfo,System.Boolean)
  ? Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}.ExternalSignInAsync(Microsoft.AspNet.Identity.Owin.ExternalLoginInfo,System.Boolean)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.ExternalSignInAsync(Microsoft.AspNet.Identity.Owin.ExternalLoginInfo,System.Boolean)
        name: ExternalSignInAsync
        nameWithType: SignInManager<ApplicationUser, String>.ExternalSignInAsync
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager<BookstoreProject.Models.ApplicationUser, System.String>.ExternalSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.AspNet.Identity.Owin.ExternalLoginInfo
        name: ExternalLoginInfo
        nameWithType: ExternalLoginInfo
        qualifiedName: Microsoft.AspNet.Identity.Owin.ExternalLoginInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.ExternalSignInAsync(Microsoft.AspNet.Identity.Owin.ExternalLoginInfo,System.Boolean)
        name: ExternalSignInAsync
        nameWithType: SignInManager(Of ApplicationUser, String).ExternalSignInAsync
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager(Of BookstoreProject.Models.ApplicationUser, System.String).ExternalSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.AspNet.Identity.Owin.ExternalLoginInfo
        name: ExternalLoginInfo
        nameWithType: ExternalLoginInfo
        qualifiedName: Microsoft.AspNet.Identity.Owin.ExternalLoginInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.Owin.SignInManager`2.ExternalSignInAsync(Microsoft.AspNet.Identity.Owin.ExternalLoginInfo,System.Boolean)
    parent: Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}.ExternalSignInAsync(Microsoft.AspNet.Identity.Owin.ExternalLoginInfo,System.Boolean)
  Microsoft.AspNet.Identity.Owin.SignInManager`2.PasswordSignInAsync(System.String,System.String,System.Boolean,System.Boolean):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.PasswordSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
        name: PasswordSignInAsync
        nameWithType: SignInManager<TUser, TKey>.PasswordSignInAsync
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager<TUser, TKey>.PasswordSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.PasswordSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
        name: PasswordSignInAsync
        nameWithType: SignInManager(Of TUser, TKey).PasswordSignInAsync
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager(Of TUser, TKey).PasswordSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.Owin.SignInManager`2.PasswordSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
  ? Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}.PasswordSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.PasswordSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
        name: PasswordSignInAsync
        nameWithType: SignInManager<ApplicationUser, String>.PasswordSignInAsync
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager<BookstoreProject.Models.ApplicationUser, System.String>.PasswordSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.PasswordSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
        name: PasswordSignInAsync
        nameWithType: SignInManager(Of ApplicationUser, String).PasswordSignInAsync
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager(Of BookstoreProject.Models.ApplicationUser, System.String).PasswordSignInAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.Owin.SignInManager`2.PasswordSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
    parent: Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}.PasswordSignInAsync(System.String,System.String,System.Boolean,System.Boolean)
  Microsoft.AspNet.Identity.Owin.SignInManager`2.Dispose:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.Dispose
        name: Dispose
        nameWithType: SignInManager<TUser, TKey>.Dispose
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager<TUser, TKey>.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.Dispose
        name: Dispose
        nameWithType: SignInManager(Of TUser, TKey).Dispose
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager(Of TUser, TKey).Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.Owin.SignInManager`2.Dispose
  Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}.Dispose:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.Dispose
        name: Dispose
        nameWithType: SignInManager<ApplicationUser, String>.Dispose
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager<BookstoreProject.Models.ApplicationUser, System.String>.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.Dispose
        name: Dispose
        nameWithType: SignInManager(Of ApplicationUser, String).Dispose
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager(Of BookstoreProject.Models.ApplicationUser, System.String).Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.Owin.SignInManager`2.Dispose
    parent: Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}.Dispose
  Microsoft.AspNet.Identity.Owin.SignInManager`2.Dispose(System.Boolean):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.Dispose(System.Boolean)
        name: Dispose
        nameWithType: SignInManager<TUser, TKey>.Dispose
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager<TUser, TKey>.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.Dispose(System.Boolean)
        name: Dispose
        nameWithType: SignInManager(Of TUser, TKey).Dispose
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager(Of TUser, TKey).Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.Owin.SignInManager`2.Dispose(System.Boolean)
  Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}.Dispose(System.Boolean):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.Dispose(System.Boolean)
        name: Dispose
        nameWithType: SignInManager<ApplicationUser, String>.Dispose
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager<BookstoreProject.Models.ApplicationUser, System.String>.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.Dispose(System.Boolean)
        name: Dispose
        nameWithType: SignInManager(Of ApplicationUser, String).Dispose
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager(Of BookstoreProject.Models.ApplicationUser, System.String).Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.Owin.SignInManager`2.Dispose(System.Boolean)
    parent: Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: M:Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}.Dispose(System.Boolean)
  Microsoft.AspNet.Identity.Owin.SignInManager`2.AuthenticationType:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.AuthenticationType
        name: AuthenticationType
        nameWithType: SignInManager<TUser, TKey>.AuthenticationType
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager<TUser, TKey>.AuthenticationType
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.AuthenticationType
        name: AuthenticationType
        nameWithType: SignInManager(Of TUser, TKey).AuthenticationType
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager(Of TUser, TKey).AuthenticationType
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNet.Identity.Owin.SignInManager`2.AuthenticationType
  Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}.AuthenticationType:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.AuthenticationType
        name: AuthenticationType
        nameWithType: SignInManager<ApplicationUser, String>.AuthenticationType
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager<BookstoreProject.Models.ApplicationUser, System.String>.AuthenticationType
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.AuthenticationType
        name: AuthenticationType
        nameWithType: SignInManager(Of ApplicationUser, String).AuthenticationType
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager(Of BookstoreProject.Models.ApplicationUser, System.String).AuthenticationType
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNet.Identity.Owin.SignInManager`2.AuthenticationType
    parent: Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: P:Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}.AuthenticationType
  Microsoft.AspNet.Identity.Owin.SignInManager`2.UserManager:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.UserManager
        name: UserManager
        nameWithType: SignInManager<TUser, TKey>.UserManager
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager<TUser, TKey>.UserManager
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.UserManager
        name: UserManager
        nameWithType: SignInManager(Of TUser, TKey).UserManager
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager(Of TUser, TKey).UserManager
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNet.Identity.Owin.SignInManager`2.UserManager
  Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}.UserManager:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.UserManager
        name: UserManager
        nameWithType: SignInManager<ApplicationUser, String>.UserManager
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager<BookstoreProject.Models.ApplicationUser, System.String>.UserManager
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.UserManager
        name: UserManager
        nameWithType: SignInManager(Of ApplicationUser, String).UserManager
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager(Of BookstoreProject.Models.ApplicationUser, System.String).UserManager
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNet.Identity.Owin.SignInManager`2.UserManager
    parent: Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: P:Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}.UserManager
  Microsoft.AspNet.Identity.Owin.SignInManager`2.AuthenticationManager:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.AuthenticationManager
        name: AuthenticationManager
        nameWithType: SignInManager<TUser, TKey>.AuthenticationManager
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager<TUser, TKey>.AuthenticationManager
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.AuthenticationManager
        name: AuthenticationManager
        nameWithType: SignInManager(Of TUser, TKey).AuthenticationManager
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager(Of TUser, TKey).AuthenticationManager
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNet.Identity.Owin.SignInManager`2.AuthenticationManager
  Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}.AuthenticationManager:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.AuthenticationManager
        name: AuthenticationManager
        nameWithType: SignInManager<ApplicationUser, String>.AuthenticationManager
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager<BookstoreProject.Models.ApplicationUser, System.String>.AuthenticationManager
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.Owin.SignInManager`2.AuthenticationManager
        name: AuthenticationManager
        nameWithType: SignInManager(Of ApplicationUser, String).AuthenticationManager
        qualifiedName: Microsoft.AspNet.Identity.Owin.SignInManager(Of BookstoreProject.Models.ApplicationUser, System.String).AuthenticationManager
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNet.Identity.Owin.SignInManager`2.AuthenticationManager
    parent: Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}
    commentId: P:Microsoft.AspNet.Identity.Owin.SignInManager{BookstoreProject.Models.ApplicationUser,System.String}.AuthenticationManager
  Microsoft.Owin.Security:
    name:
      CSharp:
      - name: Microsoft.Owin.Security
        nameWithType: Microsoft.Owin.Security
        qualifiedName: Microsoft.Owin.Security
        isExternal: true
      VB:
      - name: Microsoft.Owin.Security
        nameWithType: Microsoft.Owin.Security
        qualifiedName: Microsoft.Owin.Security
    isDefinition: true
    commentId: N:Microsoft.Owin.Security
  Microsoft.Owin.Security.IAuthenticationManager:
    name:
      CSharp:
      - id: Microsoft.Owin.Security.IAuthenticationManager
        name: IAuthenticationManager
        nameWithType: IAuthenticationManager
        qualifiedName: Microsoft.Owin.Security.IAuthenticationManager
        isExternal: true
      VB:
      - id: Microsoft.Owin.Security.IAuthenticationManager
        name: IAuthenticationManager
        nameWithType: IAuthenticationManager
        qualifiedName: Microsoft.Owin.Security.IAuthenticationManager
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.Security
    commentId: T:Microsoft.Owin.Security.IAuthenticationManager
  BookstoreProject.ApplicationSignInManager.#ctor*:
    name:
      CSharp:
      - id: BookstoreProject.ApplicationSignInManager.#ctor*
        name: ApplicationSignInManager
        nameWithType: ApplicationSignInManager.ApplicationSignInManager
        qualifiedName: BookstoreProject.ApplicationSignInManager.ApplicationSignInManager
      VB:
      - id: BookstoreProject.ApplicationSignInManager.#ctor*
        name: ApplicationSignInManager
        nameWithType: ApplicationSignInManager.ApplicationSignInManager
        qualifiedName: BookstoreProject.ApplicationSignInManager.ApplicationSignInManager
    isDefinition: true
    commentId: Overload:BookstoreProject.ApplicationSignInManager.#ctor
  System.Threading.Tasks.Task`1:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TResult
        nameWithType: TResult
        qualifiedName: TResult
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TResult
        nameWithType: TResult
        qualifiedName: TResult
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Threading.Tasks.Task`1
  System.Threading.Tasks.Task{System.Security.Claims.ClaimsIdentity}:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Security.Claims.ClaimsIdentity
        name: ClaimsIdentity
        nameWithType: ClaimsIdentity
        qualifiedName: System.Security.Claims.ClaimsIdentity
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Security.Claims.ClaimsIdentity
        name: ClaimsIdentity
        nameWithType: ClaimsIdentity
        qualifiedName: System.Security.Claims.ClaimsIdentity
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Threading.Tasks.Task`1
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task{System.Security.Claims.ClaimsIdentity}
  BookstoreProject.Models:
    name:
      CSharp:
      - name: BookstoreProject.Models
        nameWithType: BookstoreProject.Models
        qualifiedName: BookstoreProject.Models
      VB:
      - name: BookstoreProject.Models
        nameWithType: BookstoreProject.Models
        qualifiedName: BookstoreProject.Models
    isDefinition: true
    commentId: N:BookstoreProject.Models
  BookstoreProject.Models.ApplicationUser:
    name:
      CSharp:
      - id: BookstoreProject.Models.ApplicationUser
        name: ApplicationUser
        nameWithType: ApplicationUser
        qualifiedName: BookstoreProject.Models.ApplicationUser
      VB:
      - id: BookstoreProject.Models.ApplicationUser
        name: ApplicationUser
        nameWithType: ApplicationUser
        qualifiedName: BookstoreProject.Models.ApplicationUser
    isDefinition: true
    parent: BookstoreProject.Models
    commentId: T:BookstoreProject.Models.ApplicationUser
  BookstoreProject.ApplicationSignInManager.CreateUserIdentityAsync*:
    name:
      CSharp:
      - id: BookstoreProject.ApplicationSignInManager.CreateUserIdentityAsync*
        name: CreateUserIdentityAsync
        nameWithType: ApplicationSignInManager.CreateUserIdentityAsync
        qualifiedName: BookstoreProject.ApplicationSignInManager.CreateUserIdentityAsync
      VB:
      - id: BookstoreProject.ApplicationSignInManager.CreateUserIdentityAsync*
        name: CreateUserIdentityAsync
        nameWithType: ApplicationSignInManager.CreateUserIdentityAsync
        qualifiedName: BookstoreProject.ApplicationSignInManager.CreateUserIdentityAsync
    isDefinition: true
    commentId: Overload:BookstoreProject.ApplicationSignInManager.CreateUserIdentityAsync
  BookstoreProject.ApplicationSignInManager:
    name:
      CSharp:
      - id: BookstoreProject.ApplicationSignInManager
        name: ApplicationSignInManager
        nameWithType: ApplicationSignInManager
        qualifiedName: BookstoreProject.ApplicationSignInManager
      VB:
      - id: BookstoreProject.ApplicationSignInManager
        name: ApplicationSignInManager
        nameWithType: ApplicationSignInManager
        qualifiedName: BookstoreProject.ApplicationSignInManager
    isDefinition: true
    parent: BookstoreProject
    commentId: T:BookstoreProject.ApplicationSignInManager
  Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions{BookstoreProject.ApplicationSignInManager}:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions`1
        name: IdentityFactoryOptions
        nameWithType: IdentityFactoryOptions
        qualifiedName: Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: BookstoreProject.ApplicationSignInManager
        name: ApplicationSignInManager
        nameWithType: ApplicationSignInManager
        qualifiedName: BookstoreProject.ApplicationSignInManager
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions`1
        name: IdentityFactoryOptions
        nameWithType: IdentityFactoryOptions
        qualifiedName: Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: BookstoreProject.ApplicationSignInManager
        name: ApplicationSignInManager
        nameWithType: ApplicationSignInManager
        qualifiedName: BookstoreProject.ApplicationSignInManager
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions`1
    parent: Microsoft.AspNet.Identity.Owin
    commentId: T:Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions{BookstoreProject.ApplicationSignInManager}
  BookstoreProject.ApplicationSignInManager.Create*:
    name:
      CSharp:
      - id: BookstoreProject.ApplicationSignInManager.Create*
        name: Create
        nameWithType: ApplicationSignInManager.Create
        qualifiedName: BookstoreProject.ApplicationSignInManager.Create
      VB:
      - id: BookstoreProject.ApplicationSignInManager.Create*
        name: Create
        nameWithType: ApplicationSignInManager.Create
        qualifiedName: BookstoreProject.ApplicationSignInManager.Create
    isDefinition: true
    commentId: Overload:BookstoreProject.ApplicationSignInManager.Create
  System.Web.Routing:
    name:
      CSharp:
      - name: System.Web.Routing
        nameWithType: System.Web.Routing
        qualifiedName: System.Web.Routing
        isExternal: true
      VB:
      - name: System.Web.Routing
        nameWithType: System.Web.Routing
        qualifiedName: System.Web.Routing
    isDefinition: true
    commentId: N:System.Web.Routing
  System.Web.Routing.RouteCollection:
    name:
      CSharp:
      - id: System.Web.Routing.RouteCollection
        name: RouteCollection
        nameWithType: RouteCollection
        qualifiedName: System.Web.Routing.RouteCollection
        isExternal: true
      VB:
      - id: System.Web.Routing.RouteCollection
        name: RouteCollection
        nameWithType: RouteCollection
        qualifiedName: System.Web.Routing.RouteCollection
        isExternal: true
    isDefinition: true
    parent: System.Web.Routing
    commentId: T:System.Web.Routing.RouteCollection
  BookstoreProject.RouteConfig.RegisterRoutes*:
    name:
      CSharp:
      - id: BookstoreProject.RouteConfig.RegisterRoutes*
        name: RegisterRoutes
        nameWithType: RouteConfig.RegisterRoutes
        qualifiedName: BookstoreProject.RouteConfig.RegisterRoutes
      VB:
      - id: BookstoreProject.RouteConfig.RegisterRoutes*
        name: RegisterRoutes
        nameWithType: RouteConfig.RegisterRoutes
        qualifiedName: BookstoreProject.RouteConfig.RegisterRoutes
    isDefinition: true
    commentId: Overload:BookstoreProject.RouteConfig.RegisterRoutes
  BookstoreProject.RouteConfig:
    name:
      CSharp:
      - id: BookstoreProject.RouteConfig
        name: RouteConfig
        nameWithType: RouteConfig
        qualifiedName: BookstoreProject.RouteConfig
      VB:
      - id: BookstoreProject.RouteConfig
        name: RouteConfig
        nameWithType: RouteConfig
        qualifiedName: BookstoreProject.RouteConfig
    isDefinition: true
    commentId: T:BookstoreProject.RouteConfig
  Owin:
    name:
      CSharp:
      - name: Owin
        nameWithType: Owin
        qualifiedName: Owin
        isExternal: true
      VB:
      - name: Owin
        nameWithType: Owin
        qualifiedName: Owin
    isDefinition: true
    commentId: N:Owin
  Owin.IAppBuilder:
    name:
      CSharp:
      - id: Owin.IAppBuilder
        name: IAppBuilder
        nameWithType: IAppBuilder
        qualifiedName: Owin.IAppBuilder
        isExternal: true
      VB:
      - id: Owin.IAppBuilder
        name: IAppBuilder
        nameWithType: IAppBuilder
        qualifiedName: Owin.IAppBuilder
        isExternal: true
    isDefinition: true
    parent: Owin
    commentId: T:Owin.IAppBuilder
  BookstoreProject.Startup.ConfigureAuth*:
    name:
      CSharp:
      - id: BookstoreProject.Startup.ConfigureAuth*
        name: ConfigureAuth
        nameWithType: Startup.ConfigureAuth
        qualifiedName: BookstoreProject.Startup.ConfigureAuth
      VB:
      - id: BookstoreProject.Startup.ConfigureAuth*
        name: ConfigureAuth
        nameWithType: Startup.ConfigureAuth
        qualifiedName: BookstoreProject.Startup.ConfigureAuth
    isDefinition: true
    commentId: Overload:BookstoreProject.Startup.ConfigureAuth
  BookstoreProject.Startup.Configuration*:
    name:
      CSharp:
      - id: BookstoreProject.Startup.Configuration*
        name: Configuration
        nameWithType: Startup.Configuration
        qualifiedName: BookstoreProject.Startup.Configuration
      VB:
      - id: BookstoreProject.Startup.Configuration*
        name: Configuration
        nameWithType: Startup.Configuration
        qualifiedName: BookstoreProject.Startup.Configuration
    isDefinition: true
    commentId: Overload:BookstoreProject.Startup.Configuration
  BookstoreProject.Startup:
    name:
      CSharp:
      - id: BookstoreProject.Startup
        name: Startup
        nameWithType: Startup
        qualifiedName: BookstoreProject.Startup
      VB:
      - id: BookstoreProject.Startup
        name: Startup
        nameWithType: Startup
        qualifiedName: BookstoreProject.Startup
    isDefinition: true
    commentId: T:BookstoreProject.Startup
  System.Web:
    name:
      CSharp:
      - name: System.Web
        nameWithType: System.Web
        qualifiedName: System.Web
        isExternal: true
      VB:
      - name: System.Web
        nameWithType: System.Web
        qualifiedName: System.Web
    isDefinition: true
    commentId: N:System.Web
  System.Web.HttpApplication:
    name:
      CSharp:
      - id: System.Web.HttpApplication
        name: HttpApplication
        nameWithType: HttpApplication
        qualifiedName: System.Web.HttpApplication
        isExternal: true
      VB:
      - id: System.Web.HttpApplication
        name: HttpApplication
        nameWithType: HttpApplication
        qualifiedName: System.Web.HttpApplication
        isExternal: true
    isDefinition: true
    parent: System.Web
    commentId: T:System.Web.HttpApplication
  System.Web.HttpApplication.CompleteRequest:
    name:
      CSharp:
      - id: System.Web.HttpApplication.CompleteRequest
        name: CompleteRequest
        nameWithType: HttpApplication.CompleteRequest
        qualifiedName: System.Web.HttpApplication.CompleteRequest
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.CompleteRequest
        name: CompleteRequest
        nameWithType: HttpApplication.CompleteRequest
        qualifiedName: System.Web.HttpApplication.CompleteRequest
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.CompleteRequest
  System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnBeginRequestAsync
        nameWithType: HttpApplication.AddOnBeginRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnBeginRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnBeginRequestAsync
        nameWithType: HttpApplication.AddOnBeginRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnBeginRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnBeginRequestAsync
        nameWithType: HttpApplication.AddOnBeginRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnBeginRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnBeginRequestAsync
        nameWithType: HttpApplication.AddOnBeginRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnBeginRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnAuthenticateRequestAsync
        nameWithType: HttpApplication.AddOnAuthenticateRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnAuthenticateRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnAuthenticateRequestAsync
        nameWithType: HttpApplication.AddOnAuthenticateRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnAuthenticateRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnAuthenticateRequestAsync
        nameWithType: HttpApplication.AddOnAuthenticateRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnAuthenticateRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnAuthenticateRequestAsync
        nameWithType: HttpApplication.AddOnAuthenticateRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnAuthenticateRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnPostAuthenticateRequestAsync
        nameWithType: HttpApplication.AddOnPostAuthenticateRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnPostAuthenticateRequestAsync
        nameWithType: HttpApplication.AddOnPostAuthenticateRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  ? System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  : name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnPostAuthenticateRequestAsync
        nameWithType: HttpApplication.AddOnPostAuthenticateRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnPostAuthenticateRequestAsync
        nameWithType: HttpApplication.AddOnPostAuthenticateRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnAuthorizeRequestAsync
        nameWithType: HttpApplication.AddOnAuthorizeRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnAuthorizeRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnAuthorizeRequestAsync
        nameWithType: HttpApplication.AddOnAuthorizeRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnAuthorizeRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnAuthorizeRequestAsync
        nameWithType: HttpApplication.AddOnAuthorizeRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnAuthorizeRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnAuthorizeRequestAsync
        nameWithType: HttpApplication.AddOnAuthorizeRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnAuthorizeRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnPostAuthorizeRequestAsync
        nameWithType: HttpApplication.AddOnPostAuthorizeRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnPostAuthorizeRequestAsync
        nameWithType: HttpApplication.AddOnPostAuthorizeRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnPostAuthorizeRequestAsync
        nameWithType: HttpApplication.AddOnPostAuthorizeRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnPostAuthorizeRequestAsync
        nameWithType: HttpApplication.AddOnPostAuthorizeRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnResolveRequestCacheAsync
        nameWithType: HttpApplication.AddOnResolveRequestCacheAsync
        qualifiedName: System.Web.HttpApplication.AddOnResolveRequestCacheAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnResolveRequestCacheAsync
        nameWithType: HttpApplication.AddOnResolveRequestCacheAsync
        qualifiedName: System.Web.HttpApplication.AddOnResolveRequestCacheAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnResolveRequestCacheAsync
        nameWithType: HttpApplication.AddOnResolveRequestCacheAsync
        qualifiedName: System.Web.HttpApplication.AddOnResolveRequestCacheAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnResolveRequestCacheAsync
        nameWithType: HttpApplication.AddOnResolveRequestCacheAsync
        qualifiedName: System.Web.HttpApplication.AddOnResolveRequestCacheAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnPostResolveRequestCacheAsync
        nameWithType: HttpApplication.AddOnPostResolveRequestCacheAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnPostResolveRequestCacheAsync
        nameWithType: HttpApplication.AddOnPostResolveRequestCacheAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  ? System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  : name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnPostResolveRequestCacheAsync
        nameWithType: HttpApplication.AddOnPostResolveRequestCacheAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnPostResolveRequestCacheAsync
        nameWithType: HttpApplication.AddOnPostResolveRequestCacheAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnMapRequestHandlerAsync
        nameWithType: HttpApplication.AddOnMapRequestHandlerAsync
        qualifiedName: System.Web.HttpApplication.AddOnMapRequestHandlerAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnMapRequestHandlerAsync
        nameWithType: HttpApplication.AddOnMapRequestHandlerAsync
        qualifiedName: System.Web.HttpApplication.AddOnMapRequestHandlerAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnMapRequestHandlerAsync
        nameWithType: HttpApplication.AddOnMapRequestHandlerAsync
        qualifiedName: System.Web.HttpApplication.AddOnMapRequestHandlerAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnMapRequestHandlerAsync
        nameWithType: HttpApplication.AddOnMapRequestHandlerAsync
        qualifiedName: System.Web.HttpApplication.AddOnMapRequestHandlerAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnPostMapRequestHandlerAsync
        nameWithType: HttpApplication.AddOnPostMapRequestHandlerAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnPostMapRequestHandlerAsync
        nameWithType: HttpApplication.AddOnPostMapRequestHandlerAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  ? System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  : name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnPostMapRequestHandlerAsync
        nameWithType: HttpApplication.AddOnPostMapRequestHandlerAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnPostMapRequestHandlerAsync
        nameWithType: HttpApplication.AddOnPostMapRequestHandlerAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnAcquireRequestStateAsync
        nameWithType: HttpApplication.AddOnAcquireRequestStateAsync
        qualifiedName: System.Web.HttpApplication.AddOnAcquireRequestStateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnAcquireRequestStateAsync
        nameWithType: HttpApplication.AddOnAcquireRequestStateAsync
        qualifiedName: System.Web.HttpApplication.AddOnAcquireRequestStateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnAcquireRequestStateAsync
        nameWithType: HttpApplication.AddOnAcquireRequestStateAsync
        qualifiedName: System.Web.HttpApplication.AddOnAcquireRequestStateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnAcquireRequestStateAsync
        nameWithType: HttpApplication.AddOnAcquireRequestStateAsync
        qualifiedName: System.Web.HttpApplication.AddOnAcquireRequestStateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnPostAcquireRequestStateAsync
        nameWithType: HttpApplication.AddOnPostAcquireRequestStateAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnPostAcquireRequestStateAsync
        nameWithType: HttpApplication.AddOnPostAcquireRequestStateAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  ? System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  : name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnPostAcquireRequestStateAsync
        nameWithType: HttpApplication.AddOnPostAcquireRequestStateAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnPostAcquireRequestStateAsync
        nameWithType: HttpApplication.AddOnPostAcquireRequestStateAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnPreRequestHandlerExecuteAsync
        nameWithType: HttpApplication.AddOnPreRequestHandlerExecuteAsync
        qualifiedName: System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnPreRequestHandlerExecuteAsync
        nameWithType: HttpApplication.AddOnPreRequestHandlerExecuteAsync
        qualifiedName: System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  ? System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  : name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnPreRequestHandlerExecuteAsync
        nameWithType: HttpApplication.AddOnPreRequestHandlerExecuteAsync
        qualifiedName: System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnPreRequestHandlerExecuteAsync
        nameWithType: HttpApplication.AddOnPreRequestHandlerExecuteAsync
        qualifiedName: System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnPostRequestHandlerExecuteAsync
        nameWithType: HttpApplication.AddOnPostRequestHandlerExecuteAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnPostRequestHandlerExecuteAsync
        nameWithType: HttpApplication.AddOnPostRequestHandlerExecuteAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  ? System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  : name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnPostRequestHandlerExecuteAsync
        nameWithType: HttpApplication.AddOnPostRequestHandlerExecuteAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnPostRequestHandlerExecuteAsync
        nameWithType: HttpApplication.AddOnPostRequestHandlerExecuteAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnReleaseRequestStateAsync
        nameWithType: HttpApplication.AddOnReleaseRequestStateAsync
        qualifiedName: System.Web.HttpApplication.AddOnReleaseRequestStateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnReleaseRequestStateAsync
        nameWithType: HttpApplication.AddOnReleaseRequestStateAsync
        qualifiedName: System.Web.HttpApplication.AddOnReleaseRequestStateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnReleaseRequestStateAsync
        nameWithType: HttpApplication.AddOnReleaseRequestStateAsync
        qualifiedName: System.Web.HttpApplication.AddOnReleaseRequestStateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnReleaseRequestStateAsync
        nameWithType: HttpApplication.AddOnReleaseRequestStateAsync
        qualifiedName: System.Web.HttpApplication.AddOnReleaseRequestStateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnPostReleaseRequestStateAsync
        nameWithType: HttpApplication.AddOnPostReleaseRequestStateAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnPostReleaseRequestStateAsync
        nameWithType: HttpApplication.AddOnPostReleaseRequestStateAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  ? System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  : name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnPostReleaseRequestStateAsync
        nameWithType: HttpApplication.AddOnPostReleaseRequestStateAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnPostReleaseRequestStateAsync
        nameWithType: HttpApplication.AddOnPostReleaseRequestStateAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnUpdateRequestCacheAsync
        nameWithType: HttpApplication.AddOnUpdateRequestCacheAsync
        qualifiedName: System.Web.HttpApplication.AddOnUpdateRequestCacheAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnUpdateRequestCacheAsync
        nameWithType: HttpApplication.AddOnUpdateRequestCacheAsync
        qualifiedName: System.Web.HttpApplication.AddOnUpdateRequestCacheAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnUpdateRequestCacheAsync
        nameWithType: HttpApplication.AddOnUpdateRequestCacheAsync
        qualifiedName: System.Web.HttpApplication.AddOnUpdateRequestCacheAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnUpdateRequestCacheAsync
        nameWithType: HttpApplication.AddOnUpdateRequestCacheAsync
        qualifiedName: System.Web.HttpApplication.AddOnUpdateRequestCacheAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnPostUpdateRequestCacheAsync
        nameWithType: HttpApplication.AddOnPostUpdateRequestCacheAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnPostUpdateRequestCacheAsync
        nameWithType: HttpApplication.AddOnPostUpdateRequestCacheAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  ? System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  : name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnPostUpdateRequestCacheAsync
        nameWithType: HttpApplication.AddOnPostUpdateRequestCacheAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnPostUpdateRequestCacheAsync
        nameWithType: HttpApplication.AddOnPostUpdateRequestCacheAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnLogRequestAsync
        nameWithType: HttpApplication.AddOnLogRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnLogRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnLogRequestAsync
        nameWithType: HttpApplication.AddOnLogRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnLogRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnLogRequestAsync
        nameWithType: HttpApplication.AddOnLogRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnLogRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnLogRequestAsync
        nameWithType: HttpApplication.AddOnLogRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnLogRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnPostLogRequestAsync
        nameWithType: HttpApplication.AddOnPostLogRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostLogRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnPostLogRequestAsync
        nameWithType: HttpApplication.AddOnPostLogRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostLogRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnPostLogRequestAsync
        nameWithType: HttpApplication.AddOnPostLogRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostLogRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnPostLogRequestAsync
        nameWithType: HttpApplication.AddOnPostLogRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnPostLogRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnEndRequestAsync
        nameWithType: HttpApplication.AddOnEndRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnEndRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
        name: AddOnEndRequestAsync
        nameWithType: HttpApplication.AddOnEndRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnEndRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object):
    name:
      CSharp:
      - id: System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnEndRequestAsync
        nameWithType: HttpApplication.AddOnEndRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnEndRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
        name: AddOnEndRequestAsync
        nameWithType: HttpApplication.AddOnEndRequestAsync
        qualifiedName: System.Web.HttpApplication.AddOnEndRequestAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.BeginEventHandler
        name: BeginEventHandler
        nameWithType: BeginEventHandler
        qualifiedName: System.Web.BeginEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.EndEventHandler
        name: EndEventHandler
        nameWithType: EndEventHandler
        qualifiedName: System.Web.EndEventHandler
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  System.Web.HttpApplication.Init:
    name:
      CSharp:
      - id: System.Web.HttpApplication.Init
        name: Init
        nameWithType: HttpApplication.Init
        qualifiedName: System.Web.HttpApplication.Init
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.Init
        name: Init
        nameWithType: HttpApplication.Init
        qualifiedName: System.Web.HttpApplication.Init
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.Init
  System.Web.HttpApplication.Dispose:
    name:
      CSharp:
      - id: System.Web.HttpApplication.Dispose
        name: Dispose
        nameWithType: HttpApplication.Dispose
        qualifiedName: System.Web.HttpApplication.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.Dispose
        name: Dispose
        nameWithType: HttpApplication.Dispose
        qualifiedName: System.Web.HttpApplication.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.Dispose
  System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String):
    name:
      CSharp:
      - id: System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)
        name: GetVaryByCustomString
        nameWithType: HttpApplication.GetVaryByCustomString
        qualifiedName: System.Web.HttpApplication.GetVaryByCustomString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.HttpContext
        name: HttpContext
        nameWithType: HttpContext
        qualifiedName: System.Web.HttpContext
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)
        name: GetVaryByCustomString
        nameWithType: HttpApplication.GetVaryByCustomString
        qualifiedName: System.Web.HttpApplication.GetVaryByCustomString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.HttpContext
        name: HttpContext
        nameWithType: HttpContext
        qualifiedName: System.Web.HttpContext
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)
  System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext):
    name:
      CSharp:
      - id: System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)
        name: GetOutputCacheProviderName
        nameWithType: HttpApplication.GetOutputCacheProviderName
        qualifiedName: System.Web.HttpApplication.GetOutputCacheProviderName
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.HttpContext
        name: HttpContext
        nameWithType: HttpContext
        qualifiedName: System.Web.HttpContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)
        name: GetOutputCacheProviderName
        nameWithType: HttpApplication.GetOutputCacheProviderName
        qualifiedName: System.Web.HttpApplication.GetOutputCacheProviderName
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.HttpContext
        name: HttpContext
        nameWithType: HttpContext
        qualifiedName: System.Web.HttpContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)
  ? System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  : name:
      CSharp:
      - id: System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
        name: IHttpAsyncHandler.BeginProcessRequest
        nameWithType: HttpApplication.IHttpAsyncHandler.BeginProcessRequest
        qualifiedName: System.Web.HttpApplication.System.Web.IHttpAsyncHandler.BeginProcessRequest
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.HttpContext
        name: HttpContext
        nameWithType: HttpContext
        qualifiedName: System.Web.HttpContext
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.AsyncCallback
        name: AsyncCallback
        nameWithType: AsyncCallback
        qualifiedName: System.AsyncCallback
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
        name: System.Web.IHttpAsyncHandler.BeginProcessRequest
        nameWithType: HttpApplication.System.Web.IHttpAsyncHandler.BeginProcessRequest
        qualifiedName: System.Web.HttpApplication.System.Web.IHttpAsyncHandler.BeginProcessRequest
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.HttpContext
        name: HttpContext
        nameWithType: HttpContext
        qualifiedName: System.Web.HttpContext
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.AsyncCallback
        name: AsyncCallback
        nameWithType: AsyncCallback
        qualifiedName: System.AsyncCallback
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  System.Web.HttpApplication.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult):
    name:
      CSharp:
      - id: System.Web.HttpApplication.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)
        name: IHttpAsyncHandler.EndProcessRequest
        nameWithType: HttpApplication.IHttpAsyncHandler.EndProcessRequest
        qualifiedName: System.Web.HttpApplication.System.Web.IHttpAsyncHandler.EndProcessRequest
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.IAsyncResult
        name: IAsyncResult
        nameWithType: IAsyncResult
        qualifiedName: System.IAsyncResult
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)
        name: System.Web.IHttpAsyncHandler.EndProcessRequest
        nameWithType: HttpApplication.System.Web.IHttpAsyncHandler.EndProcessRequest
        qualifiedName: System.Web.HttpApplication.System.Web.IHttpAsyncHandler.EndProcessRequest
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.IAsyncResult
        name: IAsyncResult
        nameWithType: IAsyncResult
        qualifiedName: System.IAsyncResult
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)
  System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext):
    name:
      CSharp:
      - id: System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)
        name: IHttpHandler.ProcessRequest
        nameWithType: HttpApplication.IHttpHandler.ProcessRequest
        qualifiedName: System.Web.HttpApplication.System.Web.IHttpHandler.ProcessRequest
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.HttpContext
        name: HttpContext
        nameWithType: HttpContext
        qualifiedName: System.Web.HttpContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)
        name: System.Web.IHttpHandler.ProcessRequest
        nameWithType: HttpApplication.System.Web.IHttpHandler.ProcessRequest
        qualifiedName: System.Web.HttpApplication.System.Web.IHttpHandler.ProcessRequest
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.HttpContext
        name: HttpContext
        nameWithType: HttpContext
        qualifiedName: System.Web.HttpContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)
  System.Web.HttpApplication.OnExecuteRequestStep(System.Action{System.Web.HttpContextBase,System.Action}):
    name:
      CSharp:
      - id: System.Web.HttpApplication.OnExecuteRequestStep(System.Action{System.Web.HttpContextBase,System.Action})
        name: OnExecuteRequestStep
        nameWithType: HttpApplication.OnExecuteRequestStep
        qualifiedName: System.Web.HttpApplication.OnExecuteRequestStep
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Action`2
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Web.HttpContextBase
        name: HttpContextBase
        nameWithType: HttpContextBase
        qualifiedName: System.Web.HttpContextBase
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Action
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.OnExecuteRequestStep(System.Action{System.Web.HttpContextBase,System.Action})
        name: OnExecuteRequestStep
        nameWithType: HttpApplication.OnExecuteRequestStep
        qualifiedName: System.Web.HttpApplication.OnExecuteRequestStep
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Action`2
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Web.HttpContextBase
        name: HttpContextBase
        nameWithType: HttpContextBase
        qualifiedName: System.Web.HttpContextBase
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Action
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.OnExecuteRequestStep(System.Action{System.Web.HttpContextBase,System.Action})
  System.Web.HttpApplication.RegisterModule(System.Type):
    name:
      CSharp:
      - id: System.Web.HttpApplication.RegisterModule(System.Type)
        name: RegisterModule
        nameWithType: HttpApplication.RegisterModule
        qualifiedName: System.Web.HttpApplication.RegisterModule
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.HttpApplication.RegisterModule(System.Type)
        name: RegisterModule
        nameWithType: HttpApplication.RegisterModule
        qualifiedName: System.Web.HttpApplication.RegisterModule
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: M:System.Web.HttpApplication.RegisterModule(System.Type)
  System.Web.HttpApplication.Context:
    name:
      CSharp:
      - id: System.Web.HttpApplication.Context
        name: Context
        nameWithType: HttpApplication.Context
        qualifiedName: System.Web.HttpApplication.Context
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.Context
        name: Context
        nameWithType: HttpApplication.Context
        qualifiedName: System.Web.HttpApplication.Context
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: P:System.Web.HttpApplication.Context
  System.Web.HttpApplication.Events:
    name:
      CSharp:
      - id: System.Web.HttpApplication.Events
        name: Events
        nameWithType: HttpApplication.Events
        qualifiedName: System.Web.HttpApplication.Events
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.Events
        name: Events
        nameWithType: HttpApplication.Events
        qualifiedName: System.Web.HttpApplication.Events
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: P:System.Web.HttpApplication.Events
  System.Web.HttpApplication.Request:
    name:
      CSharp:
      - id: System.Web.HttpApplication.Request
        name: Request
        nameWithType: HttpApplication.Request
        qualifiedName: System.Web.HttpApplication.Request
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.Request
        name: Request
        nameWithType: HttpApplication.Request
        qualifiedName: System.Web.HttpApplication.Request
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: P:System.Web.HttpApplication.Request
  System.Web.HttpApplication.Response:
    name:
      CSharp:
      - id: System.Web.HttpApplication.Response
        name: Response
        nameWithType: HttpApplication.Response
        qualifiedName: System.Web.HttpApplication.Response
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.Response
        name: Response
        nameWithType: HttpApplication.Response
        qualifiedName: System.Web.HttpApplication.Response
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: P:System.Web.HttpApplication.Response
  System.Web.HttpApplication.Session:
    name:
      CSharp:
      - id: System.Web.HttpApplication.Session
        name: Session
        nameWithType: HttpApplication.Session
        qualifiedName: System.Web.HttpApplication.Session
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.Session
        name: Session
        nameWithType: HttpApplication.Session
        qualifiedName: System.Web.HttpApplication.Session
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: P:System.Web.HttpApplication.Session
  System.Web.HttpApplication.Application:
    name:
      CSharp:
      - id: System.Web.HttpApplication.Application
        name: Application
        nameWithType: HttpApplication.Application
        qualifiedName: System.Web.HttpApplication.Application
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.Application
        name: Application
        nameWithType: HttpApplication.Application
        qualifiedName: System.Web.HttpApplication.Application
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: P:System.Web.HttpApplication.Application
  System.Web.HttpApplication.Server:
    name:
      CSharp:
      - id: System.Web.HttpApplication.Server
        name: Server
        nameWithType: HttpApplication.Server
        qualifiedName: System.Web.HttpApplication.Server
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.Server
        name: Server
        nameWithType: HttpApplication.Server
        qualifiedName: System.Web.HttpApplication.Server
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: P:System.Web.HttpApplication.Server
  System.Web.HttpApplication.User:
    name:
      CSharp:
      - id: System.Web.HttpApplication.User
        name: User
        nameWithType: HttpApplication.User
        qualifiedName: System.Web.HttpApplication.User
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.User
        name: User
        nameWithType: HttpApplication.User
        qualifiedName: System.Web.HttpApplication.User
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: P:System.Web.HttpApplication.User
  System.Web.HttpApplication.Modules:
    name:
      CSharp:
      - id: System.Web.HttpApplication.Modules
        name: Modules
        nameWithType: HttpApplication.Modules
        qualifiedName: System.Web.HttpApplication.Modules
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.Modules
        name: Modules
        nameWithType: HttpApplication.Modules
        qualifiedName: System.Web.HttpApplication.Modules
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: P:System.Web.HttpApplication.Modules
  System.Web.HttpApplication.Site:
    name:
      CSharp:
      - id: System.Web.HttpApplication.Site
        name: Site
        nameWithType: HttpApplication.Site
        qualifiedName: System.Web.HttpApplication.Site
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.Site
        name: Site
        nameWithType: HttpApplication.Site
        qualifiedName: System.Web.HttpApplication.Site
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: P:System.Web.HttpApplication.Site
  System.Web.HttpApplication.System#Web#IHttpHandler#IsReusable:
    name:
      CSharp:
      - id: System.Web.HttpApplication.System#Web#IHttpHandler#IsReusable
        name: IHttpHandler.IsReusable
        nameWithType: HttpApplication.IHttpHandler.IsReusable
        qualifiedName: System.Web.HttpApplication.System.Web.IHttpHandler.IsReusable
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.System#Web#IHttpHandler#IsReusable
        name: System.Web.IHttpHandler.IsReusable
        nameWithType: HttpApplication.System.Web.IHttpHandler.IsReusable
        qualifiedName: System.Web.HttpApplication.System.Web.IHttpHandler.IsReusable
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: P:System.Web.HttpApplication.System#Web#IHttpHandler#IsReusable
  System.Web.HttpApplication.Disposed:
    name:
      CSharp:
      - id: System.Web.HttpApplication.Disposed
        name: Disposed
        nameWithType: HttpApplication.Disposed
        qualifiedName: System.Web.HttpApplication.Disposed
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.Disposed
        name: Disposed
        nameWithType: HttpApplication.Disposed
        qualifiedName: System.Web.HttpApplication.Disposed
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: E:System.Web.HttpApplication.Disposed
  System.Web.HttpApplication.BeginRequest:
    name:
      CSharp:
      - id: System.Web.HttpApplication.BeginRequest
        name: BeginRequest
        nameWithType: HttpApplication.BeginRequest
        qualifiedName: System.Web.HttpApplication.BeginRequest
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.BeginRequest
        name: BeginRequest
        nameWithType: HttpApplication.BeginRequest
        qualifiedName: System.Web.HttpApplication.BeginRequest
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: E:System.Web.HttpApplication.BeginRequest
  System.Web.HttpApplication.AuthenticateRequest:
    name:
      CSharp:
      - id: System.Web.HttpApplication.AuthenticateRequest
        name: AuthenticateRequest
        nameWithType: HttpApplication.AuthenticateRequest
        qualifiedName: System.Web.HttpApplication.AuthenticateRequest
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.AuthenticateRequest
        name: AuthenticateRequest
        nameWithType: HttpApplication.AuthenticateRequest
        qualifiedName: System.Web.HttpApplication.AuthenticateRequest
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: E:System.Web.HttpApplication.AuthenticateRequest
  System.Web.HttpApplication.PostAuthenticateRequest:
    name:
      CSharp:
      - id: System.Web.HttpApplication.PostAuthenticateRequest
        name: PostAuthenticateRequest
        nameWithType: HttpApplication.PostAuthenticateRequest
        qualifiedName: System.Web.HttpApplication.PostAuthenticateRequest
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.PostAuthenticateRequest
        name: PostAuthenticateRequest
        nameWithType: HttpApplication.PostAuthenticateRequest
        qualifiedName: System.Web.HttpApplication.PostAuthenticateRequest
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: E:System.Web.HttpApplication.PostAuthenticateRequest
  System.Web.HttpApplication.AuthorizeRequest:
    name:
      CSharp:
      - id: System.Web.HttpApplication.AuthorizeRequest
        name: AuthorizeRequest
        nameWithType: HttpApplication.AuthorizeRequest
        qualifiedName: System.Web.HttpApplication.AuthorizeRequest
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.AuthorizeRequest
        name: AuthorizeRequest
        nameWithType: HttpApplication.AuthorizeRequest
        qualifiedName: System.Web.HttpApplication.AuthorizeRequest
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: E:System.Web.HttpApplication.AuthorizeRequest
  System.Web.HttpApplication.PostAuthorizeRequest:
    name:
      CSharp:
      - id: System.Web.HttpApplication.PostAuthorizeRequest
        name: PostAuthorizeRequest
        nameWithType: HttpApplication.PostAuthorizeRequest
        qualifiedName: System.Web.HttpApplication.PostAuthorizeRequest
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.PostAuthorizeRequest
        name: PostAuthorizeRequest
        nameWithType: HttpApplication.PostAuthorizeRequest
        qualifiedName: System.Web.HttpApplication.PostAuthorizeRequest
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: E:System.Web.HttpApplication.PostAuthorizeRequest
  System.Web.HttpApplication.ResolveRequestCache:
    name:
      CSharp:
      - id: System.Web.HttpApplication.ResolveRequestCache
        name: ResolveRequestCache
        nameWithType: HttpApplication.ResolveRequestCache
        qualifiedName: System.Web.HttpApplication.ResolveRequestCache
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.ResolveRequestCache
        name: ResolveRequestCache
        nameWithType: HttpApplication.ResolveRequestCache
        qualifiedName: System.Web.HttpApplication.ResolveRequestCache
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: E:System.Web.HttpApplication.ResolveRequestCache
  System.Web.HttpApplication.PostResolveRequestCache:
    name:
      CSharp:
      - id: System.Web.HttpApplication.PostResolveRequestCache
        name: PostResolveRequestCache
        nameWithType: HttpApplication.PostResolveRequestCache
        qualifiedName: System.Web.HttpApplication.PostResolveRequestCache
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.PostResolveRequestCache
        name: PostResolveRequestCache
        nameWithType: HttpApplication.PostResolveRequestCache
        qualifiedName: System.Web.HttpApplication.PostResolveRequestCache
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: E:System.Web.HttpApplication.PostResolveRequestCache
  System.Web.HttpApplication.MapRequestHandler:
    name:
      CSharp:
      - id: System.Web.HttpApplication.MapRequestHandler
        name: MapRequestHandler
        nameWithType: HttpApplication.MapRequestHandler
        qualifiedName: System.Web.HttpApplication.MapRequestHandler
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.MapRequestHandler
        name: MapRequestHandler
        nameWithType: HttpApplication.MapRequestHandler
        qualifiedName: System.Web.HttpApplication.MapRequestHandler
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: E:System.Web.HttpApplication.MapRequestHandler
  System.Web.HttpApplication.PostMapRequestHandler:
    name:
      CSharp:
      - id: System.Web.HttpApplication.PostMapRequestHandler
        name: PostMapRequestHandler
        nameWithType: HttpApplication.PostMapRequestHandler
        qualifiedName: System.Web.HttpApplication.PostMapRequestHandler
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.PostMapRequestHandler
        name: PostMapRequestHandler
        nameWithType: HttpApplication.PostMapRequestHandler
        qualifiedName: System.Web.HttpApplication.PostMapRequestHandler
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: E:System.Web.HttpApplication.PostMapRequestHandler
  System.Web.HttpApplication.AcquireRequestState:
    name:
      CSharp:
      - id: System.Web.HttpApplication.AcquireRequestState
        name: AcquireRequestState
        nameWithType: HttpApplication.AcquireRequestState
        qualifiedName: System.Web.HttpApplication.AcquireRequestState
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.AcquireRequestState
        name: AcquireRequestState
        nameWithType: HttpApplication.AcquireRequestState
        qualifiedName: System.Web.HttpApplication.AcquireRequestState
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: E:System.Web.HttpApplication.AcquireRequestState
  System.Web.HttpApplication.PostAcquireRequestState:
    name:
      CSharp:
      - id: System.Web.HttpApplication.PostAcquireRequestState
        name: PostAcquireRequestState
        nameWithType: HttpApplication.PostAcquireRequestState
        qualifiedName: System.Web.HttpApplication.PostAcquireRequestState
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.PostAcquireRequestState
        name: PostAcquireRequestState
        nameWithType: HttpApplication.PostAcquireRequestState
        qualifiedName: System.Web.HttpApplication.PostAcquireRequestState
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: E:System.Web.HttpApplication.PostAcquireRequestState
  System.Web.HttpApplication.PreRequestHandlerExecute:
    name:
      CSharp:
      - id: System.Web.HttpApplication.PreRequestHandlerExecute
        name: PreRequestHandlerExecute
        nameWithType: HttpApplication.PreRequestHandlerExecute
        qualifiedName: System.Web.HttpApplication.PreRequestHandlerExecute
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.PreRequestHandlerExecute
        name: PreRequestHandlerExecute
        nameWithType: HttpApplication.PreRequestHandlerExecute
        qualifiedName: System.Web.HttpApplication.PreRequestHandlerExecute
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: E:System.Web.HttpApplication.PreRequestHandlerExecute
  System.Web.HttpApplication.PostRequestHandlerExecute:
    name:
      CSharp:
      - id: System.Web.HttpApplication.PostRequestHandlerExecute
        name: PostRequestHandlerExecute
        nameWithType: HttpApplication.PostRequestHandlerExecute
        qualifiedName: System.Web.HttpApplication.PostRequestHandlerExecute
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.PostRequestHandlerExecute
        name: PostRequestHandlerExecute
        nameWithType: HttpApplication.PostRequestHandlerExecute
        qualifiedName: System.Web.HttpApplication.PostRequestHandlerExecute
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: E:System.Web.HttpApplication.PostRequestHandlerExecute
  System.Web.HttpApplication.ReleaseRequestState:
    name:
      CSharp:
      - id: System.Web.HttpApplication.ReleaseRequestState
        name: ReleaseRequestState
        nameWithType: HttpApplication.ReleaseRequestState
        qualifiedName: System.Web.HttpApplication.ReleaseRequestState
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.ReleaseRequestState
        name: ReleaseRequestState
        nameWithType: HttpApplication.ReleaseRequestState
        qualifiedName: System.Web.HttpApplication.ReleaseRequestState
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: E:System.Web.HttpApplication.ReleaseRequestState
  System.Web.HttpApplication.PostReleaseRequestState:
    name:
      CSharp:
      - id: System.Web.HttpApplication.PostReleaseRequestState
        name: PostReleaseRequestState
        nameWithType: HttpApplication.PostReleaseRequestState
        qualifiedName: System.Web.HttpApplication.PostReleaseRequestState
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.PostReleaseRequestState
        name: PostReleaseRequestState
        nameWithType: HttpApplication.PostReleaseRequestState
        qualifiedName: System.Web.HttpApplication.PostReleaseRequestState
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: E:System.Web.HttpApplication.PostReleaseRequestState
  System.Web.HttpApplication.UpdateRequestCache:
    name:
      CSharp:
      - id: System.Web.HttpApplication.UpdateRequestCache
        name: UpdateRequestCache
        nameWithType: HttpApplication.UpdateRequestCache
        qualifiedName: System.Web.HttpApplication.UpdateRequestCache
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.UpdateRequestCache
        name: UpdateRequestCache
        nameWithType: HttpApplication.UpdateRequestCache
        qualifiedName: System.Web.HttpApplication.UpdateRequestCache
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: E:System.Web.HttpApplication.UpdateRequestCache
  System.Web.HttpApplication.PostUpdateRequestCache:
    name:
      CSharp:
      - id: System.Web.HttpApplication.PostUpdateRequestCache
        name: PostUpdateRequestCache
        nameWithType: HttpApplication.PostUpdateRequestCache
        qualifiedName: System.Web.HttpApplication.PostUpdateRequestCache
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.PostUpdateRequestCache
        name: PostUpdateRequestCache
        nameWithType: HttpApplication.PostUpdateRequestCache
        qualifiedName: System.Web.HttpApplication.PostUpdateRequestCache
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: E:System.Web.HttpApplication.PostUpdateRequestCache
  System.Web.HttpApplication.LogRequest:
    name:
      CSharp:
      - id: System.Web.HttpApplication.LogRequest
        name: LogRequest
        nameWithType: HttpApplication.LogRequest
        qualifiedName: System.Web.HttpApplication.LogRequest
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.LogRequest
        name: LogRequest
        nameWithType: HttpApplication.LogRequest
        qualifiedName: System.Web.HttpApplication.LogRequest
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: E:System.Web.HttpApplication.LogRequest
  System.Web.HttpApplication.PostLogRequest:
    name:
      CSharp:
      - id: System.Web.HttpApplication.PostLogRequest
        name: PostLogRequest
        nameWithType: HttpApplication.PostLogRequest
        qualifiedName: System.Web.HttpApplication.PostLogRequest
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.PostLogRequest
        name: PostLogRequest
        nameWithType: HttpApplication.PostLogRequest
        qualifiedName: System.Web.HttpApplication.PostLogRequest
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: E:System.Web.HttpApplication.PostLogRequest
  System.Web.HttpApplication.EndRequest:
    name:
      CSharp:
      - id: System.Web.HttpApplication.EndRequest
        name: EndRequest
        nameWithType: HttpApplication.EndRequest
        qualifiedName: System.Web.HttpApplication.EndRequest
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.EndRequest
        name: EndRequest
        nameWithType: HttpApplication.EndRequest
        qualifiedName: System.Web.HttpApplication.EndRequest
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: E:System.Web.HttpApplication.EndRequest
  System.Web.HttpApplication.Error:
    name:
      CSharp:
      - id: System.Web.HttpApplication.Error
        name: Error
        nameWithType: HttpApplication.Error
        qualifiedName: System.Web.HttpApplication.Error
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.Error
        name: Error
        nameWithType: HttpApplication.Error
        qualifiedName: System.Web.HttpApplication.Error
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: E:System.Web.HttpApplication.Error
  System.Web.HttpApplication.RequestCompleted:
    name:
      CSharp:
      - id: System.Web.HttpApplication.RequestCompleted
        name: RequestCompleted
        nameWithType: HttpApplication.RequestCompleted
        qualifiedName: System.Web.HttpApplication.RequestCompleted
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.RequestCompleted
        name: RequestCompleted
        nameWithType: HttpApplication.RequestCompleted
        qualifiedName: System.Web.HttpApplication.RequestCompleted
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: E:System.Web.HttpApplication.RequestCompleted
  System.Web.HttpApplication.PreSendRequestHeaders:
    name:
      CSharp:
      - id: System.Web.HttpApplication.PreSendRequestHeaders
        name: PreSendRequestHeaders
        nameWithType: HttpApplication.PreSendRequestHeaders
        qualifiedName: System.Web.HttpApplication.PreSendRequestHeaders
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.PreSendRequestHeaders
        name: PreSendRequestHeaders
        nameWithType: HttpApplication.PreSendRequestHeaders
        qualifiedName: System.Web.HttpApplication.PreSendRequestHeaders
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: E:System.Web.HttpApplication.PreSendRequestHeaders
  System.Web.HttpApplication.PreSendRequestContent:
    name:
      CSharp:
      - id: System.Web.HttpApplication.PreSendRequestContent
        name: PreSendRequestContent
        nameWithType: HttpApplication.PreSendRequestContent
        qualifiedName: System.Web.HttpApplication.PreSendRequestContent
        isExternal: true
      VB:
      - id: System.Web.HttpApplication.PreSendRequestContent
        name: PreSendRequestContent
        nameWithType: HttpApplication.PreSendRequestContent
        qualifiedName: System.Web.HttpApplication.PreSendRequestContent
        isExternal: true
    isDefinition: true
    parent: System.Web.HttpApplication
    commentId: E:System.Web.HttpApplication.PreSendRequestContent
  System.ComponentModel:
    name:
      CSharp:
      - name: System.ComponentModel
        nameWithType: System.ComponentModel
        qualifiedName: System.ComponentModel
        isExternal: true
      VB:
      - name: System.ComponentModel
        nameWithType: System.ComponentModel
        qualifiedName: System.ComponentModel
    isDefinition: true
    commentId: N:System.ComponentModel
  System.ComponentModel.IComponent:
    name:
      CSharp:
      - id: System.ComponentModel.IComponent
        name: IComponent
        nameWithType: IComponent
        qualifiedName: System.ComponentModel.IComponent
        isExternal: true
      VB:
      - id: System.ComponentModel.IComponent
        name: IComponent
        nameWithType: IComponent
        qualifiedName: System.ComponentModel.IComponent
        isExternal: true
    isDefinition: true
    parent: System.ComponentModel
    commentId: T:System.ComponentModel.IComponent
  System.Web.IHttpAsyncHandler:
    name:
      CSharp:
      - id: System.Web.IHttpAsyncHandler
        name: IHttpAsyncHandler
        nameWithType: IHttpAsyncHandler
        qualifiedName: System.Web.IHttpAsyncHandler
        isExternal: true
      VB:
      - id: System.Web.IHttpAsyncHandler
        name: IHttpAsyncHandler
        nameWithType: IHttpAsyncHandler
        qualifiedName: System.Web.IHttpAsyncHandler
        isExternal: true
    isDefinition: true
    parent: System.Web
    commentId: T:System.Web.IHttpAsyncHandler
  System.Web.IHttpHandler:
    name:
      CSharp:
      - id: System.Web.IHttpHandler
        name: IHttpHandler
        nameWithType: IHttpHandler
        qualifiedName: System.Web.IHttpHandler
        isExternal: true
      VB:
      - id: System.Web.IHttpHandler
        name: IHttpHandler
        nameWithType: IHttpHandler
        qualifiedName: System.Web.IHttpHandler
        isExternal: true
    isDefinition: true
    parent: System.Web
    commentId: T:System.Web.IHttpHandler
  BookstoreProject.MvcApplication.Application_Start*:
    name:
      CSharp:
      - id: BookstoreProject.MvcApplication.Application_Start*
        name: Application_Start
        nameWithType: MvcApplication.Application_Start
        qualifiedName: BookstoreProject.MvcApplication.Application_Start
      VB:
      - id: BookstoreProject.MvcApplication.Application_Start*
        name: Application_Start
        nameWithType: MvcApplication.Application_Start
        qualifiedName: BookstoreProject.MvcApplication.Application_Start
    isDefinition: true
    commentId: Overload:BookstoreProject.MvcApplication.Application_Start
  BookstoreProject.MvcApplication:
    name:
      CSharp:
      - id: BookstoreProject.MvcApplication
        name: MvcApplication
        nameWithType: MvcApplication
        qualifiedName: BookstoreProject.MvcApplication
      VB:
      - id: BookstoreProject.MvcApplication
        name: MvcApplication
        nameWithType: MvcApplication
        qualifiedName: BookstoreProject.MvcApplication
    isDefinition: true
    commentId: T:BookstoreProject.MvcApplication
  System.Web.Mvc.Controller:
    name:
      CSharp:
      - id: System.Web.Mvc.Controller
        name: Controller
        nameWithType: Controller
        qualifiedName: System.Web.Mvc.Controller
        isExternal: true
      VB:
      - id: System.Web.Mvc.Controller
        name: Controller
        nameWithType: Controller
        qualifiedName: System.Web.Mvc.Controller
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc
    commentId: T:System.Web.Mvc.Controller
  System.Web.Mvc.Controller.Content(System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.Content(System.String)
        name: Content
        nameWithType: Controller.Content
        qualifiedName: System.Web.Mvc.Controller.Content
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.Content(System.String)
        name: Content
        nameWithType: Controller.Content
        qualifiedName: System.Web.Mvc.Controller.Content
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.Content(System.String)
  System.Web.Mvc.Controller.Content(System.String,System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.Content(System.String,System.String)
        name: Content
        nameWithType: Controller.Content
        qualifiedName: System.Web.Mvc.Controller.Content
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.Content(System.String,System.String)
        name: Content
        nameWithType: Controller.Content
        qualifiedName: System.Web.Mvc.Controller.Content
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.Content(System.String,System.String)
  System.Web.Mvc.Controller.Content(System.String,System.String,System.Text.Encoding):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.Content(System.String,System.String,System.Text.Encoding)
        name: Content
        nameWithType: Controller.Content
        qualifiedName: System.Web.Mvc.Controller.Content
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Text.Encoding
        name: Encoding
        nameWithType: Encoding
        qualifiedName: System.Text.Encoding
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.Content(System.String,System.String,System.Text.Encoding)
        name: Content
        nameWithType: Controller.Content
        qualifiedName: System.Web.Mvc.Controller.Content
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Text.Encoding
        name: Encoding
        nameWithType: Encoding
        qualifiedName: System.Text.Encoding
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.Content(System.String,System.String,System.Text.Encoding)
  System.Web.Mvc.Controller.CreateActionInvoker:
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.CreateActionInvoker
        name: CreateActionInvoker
        nameWithType: Controller.CreateActionInvoker
        qualifiedName: System.Web.Mvc.Controller.CreateActionInvoker
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.CreateActionInvoker
        name: CreateActionInvoker
        nameWithType: Controller.CreateActionInvoker
        qualifiedName: System.Web.Mvc.Controller.CreateActionInvoker
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.CreateActionInvoker
  System.Web.Mvc.Controller.CreateTempDataProvider:
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.CreateTempDataProvider
        name: CreateTempDataProvider
        nameWithType: Controller.CreateTempDataProvider
        qualifiedName: System.Web.Mvc.Controller.CreateTempDataProvider
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.CreateTempDataProvider
        name: CreateTempDataProvider
        nameWithType: Controller.CreateTempDataProvider
        qualifiedName: System.Web.Mvc.Controller.CreateTempDataProvider
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.CreateTempDataProvider
  System.Web.Mvc.Controller.Dispose:
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.Dispose
        name: Dispose
        nameWithType: Controller.Dispose
        qualifiedName: System.Web.Mvc.Controller.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.Dispose
        name: Dispose
        nameWithType: Controller.Dispose
        qualifiedName: System.Web.Mvc.Controller.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.Dispose
  System.Web.Mvc.Controller.ExecuteCore:
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.ExecuteCore
        name: ExecuteCore
        nameWithType: Controller.ExecuteCore
        qualifiedName: System.Web.Mvc.Controller.ExecuteCore
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.ExecuteCore
        name: ExecuteCore
        nameWithType: Controller.ExecuteCore
        qualifiedName: System.Web.Mvc.Controller.ExecuteCore
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.ExecuteCore
  System.Web.Mvc.Controller.File(System.Byte[],System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.File(System.Byte[],System.String)
        name: File
        nameWithType: Controller.File
        qualifiedName: System.Web.Mvc.Controller.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.File(System.Byte[],System.String)
        name: File
        nameWithType: Controller.File
        qualifiedName: System.Web.Mvc.Controller.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.File(System.Byte[],System.String)
  System.Web.Mvc.Controller.File(System.Byte[],System.String,System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.File(System.Byte[],System.String,System.String)
        name: File
        nameWithType: Controller.File
        qualifiedName: System.Web.Mvc.Controller.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.File(System.Byte[],System.String,System.String)
        name: File
        nameWithType: Controller.File
        qualifiedName: System.Web.Mvc.Controller.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.File(System.Byte[],System.String,System.String)
  System.Web.Mvc.Controller.File(System.IO.Stream,System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.File(System.IO.Stream,System.String)
        name: File
        nameWithType: Controller.File
        qualifiedName: System.Web.Mvc.Controller.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.IO.Stream
        name: Stream
        nameWithType: Stream
        qualifiedName: System.IO.Stream
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.File(System.IO.Stream,System.String)
        name: File
        nameWithType: Controller.File
        qualifiedName: System.Web.Mvc.Controller.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.IO.Stream
        name: Stream
        nameWithType: Stream
        qualifiedName: System.IO.Stream
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.File(System.IO.Stream,System.String)
  System.Web.Mvc.Controller.File(System.IO.Stream,System.String,System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.File(System.IO.Stream,System.String,System.String)
        name: File
        nameWithType: Controller.File
        qualifiedName: System.Web.Mvc.Controller.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.IO.Stream
        name: Stream
        nameWithType: Stream
        qualifiedName: System.IO.Stream
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.File(System.IO.Stream,System.String,System.String)
        name: File
        nameWithType: Controller.File
        qualifiedName: System.Web.Mvc.Controller.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.IO.Stream
        name: Stream
        nameWithType: Stream
        qualifiedName: System.IO.Stream
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.File(System.IO.Stream,System.String,System.String)
  System.Web.Mvc.Controller.File(System.String,System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.File(System.String,System.String)
        name: File
        nameWithType: Controller.File
        qualifiedName: System.Web.Mvc.Controller.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.File(System.String,System.String)
        name: File
        nameWithType: Controller.File
        qualifiedName: System.Web.Mvc.Controller.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.File(System.String,System.String)
  System.Web.Mvc.Controller.File(System.String,System.String,System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.File(System.String,System.String,System.String)
        name: File
        nameWithType: Controller.File
        qualifiedName: System.Web.Mvc.Controller.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.File(System.String,System.String,System.String)
        name: File
        nameWithType: Controller.File
        qualifiedName: System.Web.Mvc.Controller.File
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.File(System.String,System.String,System.String)
  System.Web.Mvc.Controller.HandleUnknownAction(System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.HandleUnknownAction(System.String)
        name: HandleUnknownAction
        nameWithType: Controller.HandleUnknownAction
        qualifiedName: System.Web.Mvc.Controller.HandleUnknownAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.HandleUnknownAction(System.String)
        name: HandleUnknownAction
        nameWithType: Controller.HandleUnknownAction
        qualifiedName: System.Web.Mvc.Controller.HandleUnknownAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.HandleUnknownAction(System.String)
  System.Web.Mvc.Controller.HttpNotFound:
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.HttpNotFound
        name: HttpNotFound
        nameWithType: Controller.HttpNotFound
        qualifiedName: System.Web.Mvc.Controller.HttpNotFound
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.HttpNotFound
        name: HttpNotFound
        nameWithType: Controller.HttpNotFound
        qualifiedName: System.Web.Mvc.Controller.HttpNotFound
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.HttpNotFound
  System.Web.Mvc.Controller.HttpNotFound(System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.HttpNotFound(System.String)
        name: HttpNotFound
        nameWithType: Controller.HttpNotFound
        qualifiedName: System.Web.Mvc.Controller.HttpNotFound
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.HttpNotFound(System.String)
        name: HttpNotFound
        nameWithType: Controller.HttpNotFound
        qualifiedName: System.Web.Mvc.Controller.HttpNotFound
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.HttpNotFound(System.String)
  System.Web.Mvc.Controller.JavaScript(System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.JavaScript(System.String)
        name: JavaScript
        nameWithType: Controller.JavaScript
        qualifiedName: System.Web.Mvc.Controller.JavaScript
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.JavaScript(System.String)
        name: JavaScript
        nameWithType: Controller.JavaScript
        qualifiedName: System.Web.Mvc.Controller.JavaScript
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.JavaScript(System.String)
  System.Web.Mvc.Controller.Json(System.Object):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.Json(System.Object)
        name: Json
        nameWithType: Controller.Json
        qualifiedName: System.Web.Mvc.Controller.Json
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.Json(System.Object)
        name: Json
        nameWithType: Controller.Json
        qualifiedName: System.Web.Mvc.Controller.Json
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.Json(System.Object)
  System.Web.Mvc.Controller.Json(System.Object,System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.Json(System.Object,System.String)
        name: Json
        nameWithType: Controller.Json
        qualifiedName: System.Web.Mvc.Controller.Json
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.Json(System.Object,System.String)
        name: Json
        nameWithType: Controller.Json
        qualifiedName: System.Web.Mvc.Controller.Json
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.Json(System.Object,System.String)
  System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding)
        name: Json
        nameWithType: Controller.Json
        qualifiedName: System.Web.Mvc.Controller.Json
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Text.Encoding
        name: Encoding
        nameWithType: Encoding
        qualifiedName: System.Text.Encoding
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding)
        name: Json
        nameWithType: Controller.Json
        qualifiedName: System.Web.Mvc.Controller.Json
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Text.Encoding
        name: Encoding
        nameWithType: Encoding
        qualifiedName: System.Text.Encoding
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding)
  System.Web.Mvc.Controller.Json(System.Object,System.Web.Mvc.JsonRequestBehavior):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.Json(System.Object,System.Web.Mvc.JsonRequestBehavior)
        name: Json
        nameWithType: Controller.Json
        qualifiedName: System.Web.Mvc.Controller.Json
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.JsonRequestBehavior
        name: JsonRequestBehavior
        nameWithType: JsonRequestBehavior
        qualifiedName: System.Web.Mvc.JsonRequestBehavior
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.Json(System.Object,System.Web.Mvc.JsonRequestBehavior)
        name: Json
        nameWithType: Controller.Json
        qualifiedName: System.Web.Mvc.Controller.Json
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.JsonRequestBehavior
        name: JsonRequestBehavior
        nameWithType: JsonRequestBehavior
        qualifiedName: System.Web.Mvc.JsonRequestBehavior
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.Json(System.Object,System.Web.Mvc.JsonRequestBehavior)
  System.Web.Mvc.Controller.Json(System.Object,System.String,System.Web.Mvc.JsonRequestBehavior):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.Json(System.Object,System.String,System.Web.Mvc.JsonRequestBehavior)
        name: Json
        nameWithType: Controller.Json
        qualifiedName: System.Web.Mvc.Controller.Json
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.JsonRequestBehavior
        name: JsonRequestBehavior
        nameWithType: JsonRequestBehavior
        qualifiedName: System.Web.Mvc.JsonRequestBehavior
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.Json(System.Object,System.String,System.Web.Mvc.JsonRequestBehavior)
        name: Json
        nameWithType: Controller.Json
        qualifiedName: System.Web.Mvc.Controller.Json
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.JsonRequestBehavior
        name: JsonRequestBehavior
        nameWithType: JsonRequestBehavior
        qualifiedName: System.Web.Mvc.JsonRequestBehavior
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.Json(System.Object,System.String,System.Web.Mvc.JsonRequestBehavior)
  System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding,System.Web.Mvc.JsonRequestBehavior):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding,System.Web.Mvc.JsonRequestBehavior)
        name: Json
        nameWithType: Controller.Json
        qualifiedName: System.Web.Mvc.Controller.Json
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Text.Encoding
        name: Encoding
        nameWithType: Encoding
        qualifiedName: System.Text.Encoding
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.JsonRequestBehavior
        name: JsonRequestBehavior
        nameWithType: JsonRequestBehavior
        qualifiedName: System.Web.Mvc.JsonRequestBehavior
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding,System.Web.Mvc.JsonRequestBehavior)
        name: Json
        nameWithType: Controller.Json
        qualifiedName: System.Web.Mvc.Controller.Json
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Text.Encoding
        name: Encoding
        nameWithType: Encoding
        qualifiedName: System.Text.Encoding
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.JsonRequestBehavior
        name: JsonRequestBehavior
        nameWithType: JsonRequestBehavior
        qualifiedName: System.Web.Mvc.JsonRequestBehavior
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding,System.Web.Mvc.JsonRequestBehavior)
  System.Web.Mvc.Controller.Initialize(System.Web.Routing.RequestContext):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.Initialize(System.Web.Routing.RequestContext)
        name: Initialize
        nameWithType: Controller.Initialize
        qualifiedName: System.Web.Mvc.Controller.Initialize
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Routing.RequestContext
        name: RequestContext
        nameWithType: RequestContext
        qualifiedName: System.Web.Routing.RequestContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.Initialize(System.Web.Routing.RequestContext)
        name: Initialize
        nameWithType: Controller.Initialize
        qualifiedName: System.Web.Mvc.Controller.Initialize
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Routing.RequestContext
        name: RequestContext
        nameWithType: RequestContext
        qualifiedName: System.Web.Routing.RequestContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.Initialize(System.Web.Routing.RequestContext)
  System.Web.Mvc.Controller.OnActionExecuting(System.Web.Mvc.ActionExecutingContext):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)
        name: OnActionExecuting
        nameWithType: Controller.OnActionExecuting
        qualifiedName: System.Web.Mvc.Controller.OnActionExecuting
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.ActionExecutingContext
        name: ActionExecutingContext
        nameWithType: ActionExecutingContext
        qualifiedName: System.Web.Mvc.ActionExecutingContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)
        name: OnActionExecuting
        nameWithType: Controller.OnActionExecuting
        qualifiedName: System.Web.Mvc.Controller.OnActionExecuting
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.ActionExecutingContext
        name: ActionExecutingContext
        nameWithType: ActionExecutingContext
        qualifiedName: System.Web.Mvc.ActionExecutingContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)
  System.Web.Mvc.Controller.OnActionExecuted(System.Web.Mvc.ActionExecutedContext):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)
        name: OnActionExecuted
        nameWithType: Controller.OnActionExecuted
        qualifiedName: System.Web.Mvc.Controller.OnActionExecuted
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.ActionExecutedContext
        name: ActionExecutedContext
        nameWithType: ActionExecutedContext
        qualifiedName: System.Web.Mvc.ActionExecutedContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)
        name: OnActionExecuted
        nameWithType: Controller.OnActionExecuted
        qualifiedName: System.Web.Mvc.Controller.OnActionExecuted
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.ActionExecutedContext
        name: ActionExecutedContext
        nameWithType: ActionExecutedContext
        qualifiedName: System.Web.Mvc.ActionExecutedContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)
  System.Web.Mvc.Controller.OnAuthentication(System.Web.Mvc.Filters.AuthenticationContext):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.OnAuthentication(System.Web.Mvc.Filters.AuthenticationContext)
        name: OnAuthentication
        nameWithType: Controller.OnAuthentication
        qualifiedName: System.Web.Mvc.Controller.OnAuthentication
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.Filters.AuthenticationContext
        name: AuthenticationContext
        nameWithType: AuthenticationContext
        qualifiedName: System.Web.Mvc.Filters.AuthenticationContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.OnAuthentication(System.Web.Mvc.Filters.AuthenticationContext)
        name: OnAuthentication
        nameWithType: Controller.OnAuthentication
        qualifiedName: System.Web.Mvc.Controller.OnAuthentication
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.Filters.AuthenticationContext
        name: AuthenticationContext
        nameWithType: AuthenticationContext
        qualifiedName: System.Web.Mvc.Filters.AuthenticationContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.OnAuthentication(System.Web.Mvc.Filters.AuthenticationContext)
  System.Web.Mvc.Controller.OnAuthenticationChallenge(System.Web.Mvc.Filters.AuthenticationChallengeContext):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.OnAuthenticationChallenge(System.Web.Mvc.Filters.AuthenticationChallengeContext)
        name: OnAuthenticationChallenge
        nameWithType: Controller.OnAuthenticationChallenge
        qualifiedName: System.Web.Mvc.Controller.OnAuthenticationChallenge
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.Filters.AuthenticationChallengeContext
        name: AuthenticationChallengeContext
        nameWithType: AuthenticationChallengeContext
        qualifiedName: System.Web.Mvc.Filters.AuthenticationChallengeContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.OnAuthenticationChallenge(System.Web.Mvc.Filters.AuthenticationChallengeContext)
        name: OnAuthenticationChallenge
        nameWithType: Controller.OnAuthenticationChallenge
        qualifiedName: System.Web.Mvc.Controller.OnAuthenticationChallenge
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.Filters.AuthenticationChallengeContext
        name: AuthenticationChallengeContext
        nameWithType: AuthenticationChallengeContext
        qualifiedName: System.Web.Mvc.Filters.AuthenticationChallengeContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.OnAuthenticationChallenge(System.Web.Mvc.Filters.AuthenticationChallengeContext)
  System.Web.Mvc.Controller.OnAuthorization(System.Web.Mvc.AuthorizationContext):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.OnAuthorization(System.Web.Mvc.AuthorizationContext)
        name: OnAuthorization
        nameWithType: Controller.OnAuthorization
        qualifiedName: System.Web.Mvc.Controller.OnAuthorization
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.AuthorizationContext
        name: AuthorizationContext
        nameWithType: AuthorizationContext
        qualifiedName: System.Web.Mvc.AuthorizationContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.OnAuthorization(System.Web.Mvc.AuthorizationContext)
        name: OnAuthorization
        nameWithType: Controller.OnAuthorization
        qualifiedName: System.Web.Mvc.Controller.OnAuthorization
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.AuthorizationContext
        name: AuthorizationContext
        nameWithType: AuthorizationContext
        qualifiedName: System.Web.Mvc.AuthorizationContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.OnAuthorization(System.Web.Mvc.AuthorizationContext)
  System.Web.Mvc.Controller.OnException(System.Web.Mvc.ExceptionContext):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.OnException(System.Web.Mvc.ExceptionContext)
        name: OnException
        nameWithType: Controller.OnException
        qualifiedName: System.Web.Mvc.Controller.OnException
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.ExceptionContext
        name: ExceptionContext
        nameWithType: ExceptionContext
        qualifiedName: System.Web.Mvc.ExceptionContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.OnException(System.Web.Mvc.ExceptionContext)
        name: OnException
        nameWithType: Controller.OnException
        qualifiedName: System.Web.Mvc.Controller.OnException
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.ExceptionContext
        name: ExceptionContext
        nameWithType: ExceptionContext
        qualifiedName: System.Web.Mvc.ExceptionContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.OnException(System.Web.Mvc.ExceptionContext)
  System.Web.Mvc.Controller.OnResultExecuted(System.Web.Mvc.ResultExecutedContext):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)
        name: OnResultExecuted
        nameWithType: Controller.OnResultExecuted
        qualifiedName: System.Web.Mvc.Controller.OnResultExecuted
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.ResultExecutedContext
        name: ResultExecutedContext
        nameWithType: ResultExecutedContext
        qualifiedName: System.Web.Mvc.ResultExecutedContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)
        name: OnResultExecuted
        nameWithType: Controller.OnResultExecuted
        qualifiedName: System.Web.Mvc.Controller.OnResultExecuted
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.ResultExecutedContext
        name: ResultExecutedContext
        nameWithType: ResultExecutedContext
        qualifiedName: System.Web.Mvc.ResultExecutedContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)
  System.Web.Mvc.Controller.OnResultExecuting(System.Web.Mvc.ResultExecutingContext):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)
        name: OnResultExecuting
        nameWithType: Controller.OnResultExecuting
        qualifiedName: System.Web.Mvc.Controller.OnResultExecuting
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.ResultExecutingContext
        name: ResultExecutingContext
        nameWithType: ResultExecutingContext
        qualifiedName: System.Web.Mvc.ResultExecutingContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)
        name: OnResultExecuting
        nameWithType: Controller.OnResultExecuting
        qualifiedName: System.Web.Mvc.Controller.OnResultExecuting
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.ResultExecutingContext
        name: ResultExecutingContext
        nameWithType: ResultExecutingContext
        qualifiedName: System.Web.Mvc.ResultExecutingContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)
  System.Web.Mvc.Controller.PartialView:
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.PartialView
        name: PartialView
        nameWithType: Controller.PartialView
        qualifiedName: System.Web.Mvc.Controller.PartialView
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.PartialView
        name: PartialView
        nameWithType: Controller.PartialView
        qualifiedName: System.Web.Mvc.Controller.PartialView
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.PartialView
  System.Web.Mvc.Controller.PartialView(System.Object):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.PartialView(System.Object)
        name: PartialView
        nameWithType: Controller.PartialView
        qualifiedName: System.Web.Mvc.Controller.PartialView
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.PartialView(System.Object)
        name: PartialView
        nameWithType: Controller.PartialView
        qualifiedName: System.Web.Mvc.Controller.PartialView
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.PartialView(System.Object)
  System.Web.Mvc.Controller.PartialView(System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.PartialView(System.String)
        name: PartialView
        nameWithType: Controller.PartialView
        qualifiedName: System.Web.Mvc.Controller.PartialView
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.PartialView(System.String)
        name: PartialView
        nameWithType: Controller.PartialView
        qualifiedName: System.Web.Mvc.Controller.PartialView
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.PartialView(System.String)
  System.Web.Mvc.Controller.PartialView(System.String,System.Object):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.PartialView(System.String,System.Object)
        name: PartialView
        nameWithType: Controller.PartialView
        qualifiedName: System.Web.Mvc.Controller.PartialView
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.PartialView(System.String,System.Object)
        name: PartialView
        nameWithType: Controller.PartialView
        qualifiedName: System.Web.Mvc.Controller.PartialView
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.PartialView(System.String,System.Object)
  System.Web.Mvc.Controller.Redirect(System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.Redirect(System.String)
        name: Redirect
        nameWithType: Controller.Redirect
        qualifiedName: System.Web.Mvc.Controller.Redirect
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.Redirect(System.String)
        name: Redirect
        nameWithType: Controller.Redirect
        qualifiedName: System.Web.Mvc.Controller.Redirect
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.Redirect(System.String)
  System.Web.Mvc.Controller.RedirectPermanent(System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.RedirectPermanent(System.String)
        name: RedirectPermanent
        nameWithType: Controller.RedirectPermanent
        qualifiedName: System.Web.Mvc.Controller.RedirectPermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.RedirectPermanent(System.String)
        name: RedirectPermanent
        nameWithType: Controller.RedirectPermanent
        qualifiedName: System.Web.Mvc.Controller.RedirectPermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.RedirectPermanent(System.String)
  System.Web.Mvc.Controller.RedirectToAction(System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.RedirectToAction(System.String)
        name: RedirectToAction
        nameWithType: Controller.RedirectToAction
        qualifiedName: System.Web.Mvc.Controller.RedirectToAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.RedirectToAction(System.String)
        name: RedirectToAction
        nameWithType: Controller.RedirectToAction
        qualifiedName: System.Web.Mvc.Controller.RedirectToAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.RedirectToAction(System.String)
  System.Web.Mvc.Controller.RedirectToAction(System.String,System.Object):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.RedirectToAction(System.String,System.Object)
        name: RedirectToAction
        nameWithType: Controller.RedirectToAction
        qualifiedName: System.Web.Mvc.Controller.RedirectToAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.RedirectToAction(System.String,System.Object)
        name: RedirectToAction
        nameWithType: Controller.RedirectToAction
        qualifiedName: System.Web.Mvc.Controller.RedirectToAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.Object)
  System.Web.Mvc.Controller.RedirectToAction(System.String,System.Web.Routing.RouteValueDictionary):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.RedirectToAction(System.String,System.Web.Routing.RouteValueDictionary)
        name: RedirectToAction
        nameWithType: Controller.RedirectToAction
        qualifiedName: System.Web.Mvc.Controller.RedirectToAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Routing.RouteValueDictionary
        name: RouteValueDictionary
        nameWithType: RouteValueDictionary
        qualifiedName: System.Web.Routing.RouteValueDictionary
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.RedirectToAction(System.String,System.Web.Routing.RouteValueDictionary)
        name: RedirectToAction
        nameWithType: Controller.RedirectToAction
        qualifiedName: System.Web.Mvc.Controller.RedirectToAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Routing.RouteValueDictionary
        name: RouteValueDictionary
        nameWithType: RouteValueDictionary
        qualifiedName: System.Web.Routing.RouteValueDictionary
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.Web.Routing.RouteValueDictionary)
  System.Web.Mvc.Controller.RedirectToAction(System.String,System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.RedirectToAction(System.String,System.String)
        name: RedirectToAction
        nameWithType: Controller.RedirectToAction
        qualifiedName: System.Web.Mvc.Controller.RedirectToAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.RedirectToAction(System.String,System.String)
        name: RedirectToAction
        nameWithType: Controller.RedirectToAction
        qualifiedName: System.Web.Mvc.Controller.RedirectToAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.String)
  System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Object):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Object)
        name: RedirectToAction
        nameWithType: Controller.RedirectToAction
        qualifiedName: System.Web.Mvc.Controller.RedirectToAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Object)
        name: RedirectToAction
        nameWithType: Controller.RedirectToAction
        qualifiedName: System.Web.Mvc.Controller.RedirectToAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Object)
  System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Web.Routing.RouteValueDictionary):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Web.Routing.RouteValueDictionary)
        name: RedirectToAction
        nameWithType: Controller.RedirectToAction
        qualifiedName: System.Web.Mvc.Controller.RedirectToAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Routing.RouteValueDictionary
        name: RouteValueDictionary
        nameWithType: RouteValueDictionary
        qualifiedName: System.Web.Routing.RouteValueDictionary
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Web.Routing.RouteValueDictionary)
        name: RedirectToAction
        nameWithType: Controller.RedirectToAction
        qualifiedName: System.Web.Mvc.Controller.RedirectToAction
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Routing.RouteValueDictionary
        name: RouteValueDictionary
        nameWithType: RouteValueDictionary
        qualifiedName: System.Web.Routing.RouteValueDictionary
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Web.Routing.RouteValueDictionary)
  System.Web.Mvc.Controller.RedirectToActionPermanent(System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.RedirectToActionPermanent(System.String)
        name: RedirectToActionPermanent
        nameWithType: Controller.RedirectToActionPermanent
        qualifiedName: System.Web.Mvc.Controller.RedirectToActionPermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.RedirectToActionPermanent(System.String)
        name: RedirectToActionPermanent
        nameWithType: Controller.RedirectToActionPermanent
        qualifiedName: System.Web.Mvc.Controller.RedirectToActionPermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String)
  System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.Object):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.Object)
        name: RedirectToActionPermanent
        nameWithType: Controller.RedirectToActionPermanent
        qualifiedName: System.Web.Mvc.Controller.RedirectToActionPermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.Object)
        name: RedirectToActionPermanent
        nameWithType: Controller.RedirectToActionPermanent
        qualifiedName: System.Web.Mvc.Controller.RedirectToActionPermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.Object)
  System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.Web.Routing.RouteValueDictionary):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.Web.Routing.RouteValueDictionary)
        name: RedirectToActionPermanent
        nameWithType: Controller.RedirectToActionPermanent
        qualifiedName: System.Web.Mvc.Controller.RedirectToActionPermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Routing.RouteValueDictionary
        name: RouteValueDictionary
        nameWithType: RouteValueDictionary
        qualifiedName: System.Web.Routing.RouteValueDictionary
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.Web.Routing.RouteValueDictionary)
        name: RedirectToActionPermanent
        nameWithType: Controller.RedirectToActionPermanent
        qualifiedName: System.Web.Mvc.Controller.RedirectToActionPermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Routing.RouteValueDictionary
        name: RouteValueDictionary
        nameWithType: RouteValueDictionary
        qualifiedName: System.Web.Routing.RouteValueDictionary
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.Web.Routing.RouteValueDictionary)
  System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String)
        name: RedirectToActionPermanent
        nameWithType: Controller.RedirectToActionPermanent
        qualifiedName: System.Web.Mvc.Controller.RedirectToActionPermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String)
        name: RedirectToActionPermanent
        nameWithType: Controller.RedirectToActionPermanent
        qualifiedName: System.Web.Mvc.Controller.RedirectToActionPermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String)
  System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String,System.Object):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String,System.Object)
        name: RedirectToActionPermanent
        nameWithType: Controller.RedirectToActionPermanent
        qualifiedName: System.Web.Mvc.Controller.RedirectToActionPermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String,System.Object)
        name: RedirectToActionPermanent
        nameWithType: Controller.RedirectToActionPermanent
        qualifiedName: System.Web.Mvc.Controller.RedirectToActionPermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String,System.Object)
  System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String,System.Web.Routing.RouteValueDictionary):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String,System.Web.Routing.RouteValueDictionary)
        name: RedirectToActionPermanent
        nameWithType: Controller.RedirectToActionPermanent
        qualifiedName: System.Web.Mvc.Controller.RedirectToActionPermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Routing.RouteValueDictionary
        name: RouteValueDictionary
        nameWithType: RouteValueDictionary
        qualifiedName: System.Web.Routing.RouteValueDictionary
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String,System.Web.Routing.RouteValueDictionary)
        name: RedirectToActionPermanent
        nameWithType: Controller.RedirectToActionPermanent
        qualifiedName: System.Web.Mvc.Controller.RedirectToActionPermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Routing.RouteValueDictionary
        name: RouteValueDictionary
        nameWithType: RouteValueDictionary
        qualifiedName: System.Web.Routing.RouteValueDictionary
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String,System.Web.Routing.RouteValueDictionary)
  System.Web.Mvc.Controller.RedirectToRoute(System.Object):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.RedirectToRoute(System.Object)
        name: RedirectToRoute
        nameWithType: Controller.RedirectToRoute
        qualifiedName: System.Web.Mvc.Controller.RedirectToRoute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.RedirectToRoute(System.Object)
        name: RedirectToRoute
        nameWithType: Controller.RedirectToRoute
        qualifiedName: System.Web.Mvc.Controller.RedirectToRoute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.RedirectToRoute(System.Object)
  System.Web.Mvc.Controller.RedirectToRoute(System.Web.Routing.RouteValueDictionary):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.RedirectToRoute(System.Web.Routing.RouteValueDictionary)
        name: RedirectToRoute
        nameWithType: Controller.RedirectToRoute
        qualifiedName: System.Web.Mvc.Controller.RedirectToRoute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Routing.RouteValueDictionary
        name: RouteValueDictionary
        nameWithType: RouteValueDictionary
        qualifiedName: System.Web.Routing.RouteValueDictionary
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.RedirectToRoute(System.Web.Routing.RouteValueDictionary)
        name: RedirectToRoute
        nameWithType: Controller.RedirectToRoute
        qualifiedName: System.Web.Mvc.Controller.RedirectToRoute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Routing.RouteValueDictionary
        name: RouteValueDictionary
        nameWithType: RouteValueDictionary
        qualifiedName: System.Web.Routing.RouteValueDictionary
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.RedirectToRoute(System.Web.Routing.RouteValueDictionary)
  System.Web.Mvc.Controller.RedirectToRoute(System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.RedirectToRoute(System.String)
        name: RedirectToRoute
        nameWithType: Controller.RedirectToRoute
        qualifiedName: System.Web.Mvc.Controller.RedirectToRoute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.RedirectToRoute(System.String)
        name: RedirectToRoute
        nameWithType: Controller.RedirectToRoute
        qualifiedName: System.Web.Mvc.Controller.RedirectToRoute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.RedirectToRoute(System.String)
  System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Object):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Object)
        name: RedirectToRoute
        nameWithType: Controller.RedirectToRoute
        qualifiedName: System.Web.Mvc.Controller.RedirectToRoute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Object)
        name: RedirectToRoute
        nameWithType: Controller.RedirectToRoute
        qualifiedName: System.Web.Mvc.Controller.RedirectToRoute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Object)
  System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)
        name: RedirectToRoute
        nameWithType: Controller.RedirectToRoute
        qualifiedName: System.Web.Mvc.Controller.RedirectToRoute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Routing.RouteValueDictionary
        name: RouteValueDictionary
        nameWithType: RouteValueDictionary
        qualifiedName: System.Web.Routing.RouteValueDictionary
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)
        name: RedirectToRoute
        nameWithType: Controller.RedirectToRoute
        qualifiedName: System.Web.Mvc.Controller.RedirectToRoute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Routing.RouteValueDictionary
        name: RouteValueDictionary
        nameWithType: RouteValueDictionary
        qualifiedName: System.Web.Routing.RouteValueDictionary
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)
  System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Object):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Object)
        name: RedirectToRoutePermanent
        nameWithType: Controller.RedirectToRoutePermanent
        qualifiedName: System.Web.Mvc.Controller.RedirectToRoutePermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Object)
        name: RedirectToRoutePermanent
        nameWithType: Controller.RedirectToRoutePermanent
        qualifiedName: System.Web.Mvc.Controller.RedirectToRoutePermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Object)
  System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)
        name: RedirectToRoutePermanent
        nameWithType: Controller.RedirectToRoutePermanent
        qualifiedName: System.Web.Mvc.Controller.RedirectToRoutePermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Routing.RouteValueDictionary
        name: RouteValueDictionary
        nameWithType: RouteValueDictionary
        qualifiedName: System.Web.Routing.RouteValueDictionary
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)
        name: RedirectToRoutePermanent
        nameWithType: Controller.RedirectToRoutePermanent
        qualifiedName: System.Web.Mvc.Controller.RedirectToRoutePermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Routing.RouteValueDictionary
        name: RouteValueDictionary
        nameWithType: RouteValueDictionary
        qualifiedName: System.Web.Routing.RouteValueDictionary
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)
  System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String)
        name: RedirectToRoutePermanent
        nameWithType: Controller.RedirectToRoutePermanent
        qualifiedName: System.Web.Mvc.Controller.RedirectToRoutePermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String)
        name: RedirectToRoutePermanent
        nameWithType: Controller.RedirectToRoutePermanent
        qualifiedName: System.Web.Mvc.Controller.RedirectToRoutePermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String)
  System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String,System.Object):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String,System.Object)
        name: RedirectToRoutePermanent
        nameWithType: Controller.RedirectToRoutePermanent
        qualifiedName: System.Web.Mvc.Controller.RedirectToRoutePermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String,System.Object)
        name: RedirectToRoutePermanent
        nameWithType: Controller.RedirectToRoutePermanent
        qualifiedName: System.Web.Mvc.Controller.RedirectToRoutePermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String,System.Object)
  System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)
        name: RedirectToRoutePermanent
        nameWithType: Controller.RedirectToRoutePermanent
        qualifiedName: System.Web.Mvc.Controller.RedirectToRoutePermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Routing.RouteValueDictionary
        name: RouteValueDictionary
        nameWithType: RouteValueDictionary
        qualifiedName: System.Web.Routing.RouteValueDictionary
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)
        name: RedirectToRoutePermanent
        nameWithType: Controller.RedirectToRoutePermanent
        qualifiedName: System.Web.Mvc.Controller.RedirectToRoutePermanent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Routing.RouteValueDictionary
        name: RouteValueDictionary
        nameWithType: RouteValueDictionary
        qualifiedName: System.Web.Routing.RouteValueDictionary
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)
  System.Web.Mvc.Controller.TryUpdateModel``1(``0):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0)
        name: TryUpdateModel<TModel>
        nameWithType: Controller.TryUpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0)
        name: TryUpdateModel(Of TModel)
        nameWithType: Controller.TryUpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Web.Mvc.Controller.TryUpdateModel``1(``0)
  System.Web.Mvc.Controller.TryUpdateModel``1({TModel}):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0)
        name: TryUpdateModel<TModel>
        nameWithType: Controller.TryUpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0)
        name: TryUpdateModel(Of TModel)
        nameWithType: Controller.TryUpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Web.Mvc.Controller.TryUpdateModel``1(``0)
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.TryUpdateModel``1(``0)
  System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String)
        name: TryUpdateModel<TModel>
        nameWithType: Controller.TryUpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String)
        name: TryUpdateModel(Of TModel)
        nameWithType: Controller.TryUpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String)
  System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String)
        name: TryUpdateModel<TModel>
        nameWithType: Controller.TryUpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String)
        name: TryUpdateModel(Of TModel)
        nameWithType: Controller.TryUpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String)
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String)
  System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[]):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[])
        name: TryUpdateModel<TModel>
        nameWithType: Controller.TryUpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[])
        name: TryUpdateModel(Of TModel)
        nameWithType: Controller.TryUpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[])
  System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String[]):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[])
        name: TryUpdateModel<TModel>
        nameWithType: Controller.TryUpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[])
        name: TryUpdateModel(Of TModel)
        nameWithType: Controller.TryUpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[])
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[])
  System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[]):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[])
        name: TryUpdateModel<TModel>
        nameWithType: Controller.TryUpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[])
        name: TryUpdateModel(Of TModel)
        nameWithType: Controller.TryUpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[])
  System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String,System.String[]):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[])
        name: TryUpdateModel<TModel>
        nameWithType: Controller.TryUpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[])
        name: TryUpdateModel(Of TModel)
        nameWithType: Controller.TryUpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[])
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[])
  System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[]):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[])
        name: TryUpdateModel<TModel>
        nameWithType: Controller.TryUpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[])
        name: TryUpdateModel(Of TModel)
        nameWithType: Controller.TryUpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[])
  System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String,System.String[],System.String[]):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[])
        name: TryUpdateModel<TModel>
        nameWithType: Controller.TryUpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[])
        name: TryUpdateModel(Of TModel)
        nameWithType: Controller.TryUpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[])
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[])
  System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.Web.Mvc.IValueProvider):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.Web.Mvc.IValueProvider)
        name: TryUpdateModel<TModel>
        nameWithType: Controller.TryUpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.Web.Mvc.IValueProvider)
        name: TryUpdateModel(Of TModel)
        nameWithType: Controller.TryUpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.Web.Mvc.IValueProvider)
  System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.Web.Mvc.IValueProvider):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.Web.Mvc.IValueProvider)
        name: TryUpdateModel<TModel>
        nameWithType: Controller.TryUpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.Web.Mvc.IValueProvider)
        name: TryUpdateModel(Of TModel)
        nameWithType: Controller.TryUpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.Web.Mvc.IValueProvider)
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.Web.Mvc.IValueProvider)
  System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider)
        name: TryUpdateModel<TModel>
        nameWithType: Controller.TryUpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider)
        name: TryUpdateModel(Of TModel)
        nameWithType: Controller.TryUpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider)
  System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String,System.Web.Mvc.IValueProvider):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider)
        name: TryUpdateModel<TModel>
        nameWithType: Controller.TryUpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider)
        name: TryUpdateModel(Of TModel)
        nameWithType: Controller.TryUpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider)
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider)
  System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider)
        name: TryUpdateModel<TModel>
        nameWithType: Controller.TryUpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider)
        name: TryUpdateModel(Of TModel)
        nameWithType: Controller.TryUpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider)
  System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String[],System.Web.Mvc.IValueProvider):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider)
        name: TryUpdateModel<TModel>
        nameWithType: Controller.TryUpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider)
        name: TryUpdateModel(Of TModel)
        nameWithType: Controller.TryUpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider)
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider)
  System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider)
        name: TryUpdateModel<TModel>
        nameWithType: Controller.TryUpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider)
        name: TryUpdateModel(Of TModel)
        nameWithType: Controller.TryUpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider)
  System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String,System.String[],System.Web.Mvc.IValueProvider):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider)
        name: TryUpdateModel<TModel>
        nameWithType: Controller.TryUpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider)
        name: TryUpdateModel(Of TModel)
        nameWithType: Controller.TryUpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider)
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider)
  System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)
        name: TryUpdateModel<TModel>
        nameWithType: Controller.TryUpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)
        name: TryUpdateModel(Of TModel)
        nameWithType: Controller.TryUpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)
  ? System.Web.Mvc.Controller.TryUpdateModel``1({TModel},System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)
  : name:
      CSharp:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)
        name: TryUpdateModel<TModel>
        nameWithType: Controller.TryUpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)
        name: TryUpdateModel(Of TModel)
        nameWithType: Controller.TryUpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.TryUpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)
  System.Web.Mvc.Controller.TryValidateModel(System.Object):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.TryValidateModel(System.Object)
        name: TryValidateModel
        nameWithType: Controller.TryValidateModel
        qualifiedName: System.Web.Mvc.Controller.TryValidateModel
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.TryValidateModel(System.Object)
        name: TryValidateModel
        nameWithType: Controller.TryValidateModel
        qualifiedName: System.Web.Mvc.Controller.TryValidateModel
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.TryValidateModel(System.Object)
  System.Web.Mvc.Controller.TryValidateModel(System.Object,System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.TryValidateModel(System.Object,System.String)
        name: TryValidateModel
        nameWithType: Controller.TryValidateModel
        qualifiedName: System.Web.Mvc.Controller.TryValidateModel
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.TryValidateModel(System.Object,System.String)
        name: TryValidateModel
        nameWithType: Controller.TryValidateModel
        qualifiedName: System.Web.Mvc.Controller.TryValidateModel
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.TryValidateModel(System.Object,System.String)
  System.Web.Mvc.Controller.UpdateModel``1(``0):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0)
        name: UpdateModel<TModel>
        nameWithType: Controller.UpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.UpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0)
        name: UpdateModel(Of TModel)
        nameWithType: Controller.UpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.UpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Web.Mvc.Controller.UpdateModel``1(``0)
  System.Web.Mvc.Controller.UpdateModel``1({TModel}):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0)
        name: UpdateModel<TModel>
        nameWithType: Controller.UpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.UpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0)
        name: UpdateModel(Of TModel)
        nameWithType: Controller.UpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.UpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Web.Mvc.Controller.UpdateModel``1(``0)
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.UpdateModel``1(``0)
  System.Web.Mvc.Controller.UpdateModel``1(``0,System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String)
        name: UpdateModel<TModel>
        nameWithType: Controller.UpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.UpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String)
        name: UpdateModel(Of TModel)
        nameWithType: Controller.UpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.UpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String)
  System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String)
        name: UpdateModel<TModel>
        nameWithType: Controller.UpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.UpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String)
        name: UpdateModel(Of TModel)
        nameWithType: Controller.UpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.UpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String)
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String)
  System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[]):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[])
        name: UpdateModel<TModel>
        nameWithType: Controller.UpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.UpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[])
        name: UpdateModel(Of TModel)
        nameWithType: Controller.UpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.UpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[])
  System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String[]):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[])
        name: UpdateModel<TModel>
        nameWithType: Controller.UpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.UpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[])
        name: UpdateModel(Of TModel)
        nameWithType: Controller.UpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.UpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[])
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[])
  System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[]):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[])
        name: UpdateModel<TModel>
        nameWithType: Controller.UpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.UpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[])
        name: UpdateModel(Of TModel)
        nameWithType: Controller.UpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.UpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[])
  System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String,System.String[]):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[])
        name: UpdateModel<TModel>
        nameWithType: Controller.UpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.UpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[])
        name: UpdateModel(Of TModel)
        nameWithType: Controller.UpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.UpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[])
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[])
  System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[]):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[])
        name: UpdateModel<TModel>
        nameWithType: Controller.UpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.UpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[])
        name: UpdateModel(Of TModel)
        nameWithType: Controller.UpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.UpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[])
  System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String,System.String[],System.String[]):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[])
        name: UpdateModel<TModel>
        nameWithType: Controller.UpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.UpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[])
        name: UpdateModel(Of TModel)
        nameWithType: Controller.UpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.UpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[])
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[])
  System.Web.Mvc.Controller.UpdateModel``1(``0,System.Web.Mvc.IValueProvider):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.Web.Mvc.IValueProvider)
        name: UpdateModel<TModel>
        nameWithType: Controller.UpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.UpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.Web.Mvc.IValueProvider)
        name: UpdateModel(Of TModel)
        nameWithType: Controller.UpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.UpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.Web.Mvc.IValueProvider)
  System.Web.Mvc.Controller.UpdateModel``1({TModel},System.Web.Mvc.IValueProvider):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.Web.Mvc.IValueProvider)
        name: UpdateModel<TModel>
        nameWithType: Controller.UpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.UpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.Web.Mvc.IValueProvider)
        name: UpdateModel(Of TModel)
        nameWithType: Controller.UpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.UpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Web.Mvc.Controller.UpdateModel``1(``0,System.Web.Mvc.IValueProvider)
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.Web.Mvc.IValueProvider)
  System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider)
        name: UpdateModel<TModel>
        nameWithType: Controller.UpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.UpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider)
        name: UpdateModel(Of TModel)
        nameWithType: Controller.UpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.UpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider)
  System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String,System.Web.Mvc.IValueProvider):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider)
        name: UpdateModel<TModel>
        nameWithType: Controller.UpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.UpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider)
        name: UpdateModel(Of TModel)
        nameWithType: Controller.UpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.UpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider)
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider)
  System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider)
        name: UpdateModel<TModel>
        nameWithType: Controller.UpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.UpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider)
        name: UpdateModel(Of TModel)
        nameWithType: Controller.UpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.UpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider)
  System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String[],System.Web.Mvc.IValueProvider):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider)
        name: UpdateModel<TModel>
        nameWithType: Controller.UpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.UpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider)
        name: UpdateModel(Of TModel)
        nameWithType: Controller.UpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.UpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider)
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider)
  System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider)
        name: UpdateModel<TModel>
        nameWithType: Controller.UpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.UpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider)
        name: UpdateModel(Of TModel)
        nameWithType: Controller.UpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.UpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider)
  System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String,System.String[],System.Web.Mvc.IValueProvider):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider)
        name: UpdateModel<TModel>
        nameWithType: Controller.UpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.UpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider)
        name: UpdateModel(Of TModel)
        nameWithType: Controller.UpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.UpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider)
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider)
  System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)
        name: UpdateModel<TModel>
        nameWithType: Controller.UpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.UpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)
        name: UpdateModel(Of TModel)
        nameWithType: Controller.UpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.UpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)
  System.Web.Mvc.Controller.UpdateModel``1({TModel},System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)
        name: UpdateModel<TModel>
        nameWithType: Controller.UpdateModel<TModel>
        qualifiedName: System.Web.Mvc.Controller.UpdateModel<TModel>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)
        name: UpdateModel(Of TModel)
        nameWithType: Controller.UpdateModel(Of TModel)
        qualifiedName: System.Web.Mvc.Controller.UpdateModel(Of TModel)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TModel
        nameWithType: TModel
        qualifiedName: TModel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Web.Mvc.IValueProvider
        name: IValueProvider
        nameWithType: IValueProvider
        qualifiedName: System.Web.Mvc.IValueProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)
  System.Web.Mvc.Controller.ValidateModel(System.Object):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.ValidateModel(System.Object)
        name: ValidateModel
        nameWithType: Controller.ValidateModel
        qualifiedName: System.Web.Mvc.Controller.ValidateModel
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.ValidateModel(System.Object)
        name: ValidateModel
        nameWithType: Controller.ValidateModel
        qualifiedName: System.Web.Mvc.Controller.ValidateModel
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.ValidateModel(System.Object)
  System.Web.Mvc.Controller.ValidateModel(System.Object,System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.ValidateModel(System.Object,System.String)
        name: ValidateModel
        nameWithType: Controller.ValidateModel
        qualifiedName: System.Web.Mvc.Controller.ValidateModel
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.ValidateModel(System.Object,System.String)
        name: ValidateModel
        nameWithType: Controller.ValidateModel
        qualifiedName: System.Web.Mvc.Controller.ValidateModel
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.ValidateModel(System.Object,System.String)
  System.Web.Mvc.Controller.View:
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.View
        name: View
        nameWithType: Controller.View
        qualifiedName: System.Web.Mvc.Controller.View
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.View
        name: View
        nameWithType: Controller.View
        qualifiedName: System.Web.Mvc.Controller.View
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.View
  System.Web.Mvc.Controller.View(System.Object):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.View(System.Object)
        name: View
        nameWithType: Controller.View
        qualifiedName: System.Web.Mvc.Controller.View
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.View(System.Object)
        name: View
        nameWithType: Controller.View
        qualifiedName: System.Web.Mvc.Controller.View
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.View(System.Object)
  System.Web.Mvc.Controller.View(System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.View(System.String)
        name: View
        nameWithType: Controller.View
        qualifiedName: System.Web.Mvc.Controller.View
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.View(System.String)
        name: View
        nameWithType: Controller.View
        qualifiedName: System.Web.Mvc.Controller.View
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.View(System.String)
  System.Web.Mvc.Controller.View(System.String,System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.View(System.String,System.String)
        name: View
        nameWithType: Controller.View
        qualifiedName: System.Web.Mvc.Controller.View
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.View(System.String,System.String)
        name: View
        nameWithType: Controller.View
        qualifiedName: System.Web.Mvc.Controller.View
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.View(System.String,System.String)
  System.Web.Mvc.Controller.View(System.String,System.Object):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.View(System.String,System.Object)
        name: View
        nameWithType: Controller.View
        qualifiedName: System.Web.Mvc.Controller.View
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.View(System.String,System.Object)
        name: View
        nameWithType: Controller.View
        qualifiedName: System.Web.Mvc.Controller.View
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.View(System.String,System.Object)
  System.Web.Mvc.Controller.View(System.String,System.String,System.Object):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.View(System.String,System.String,System.Object)
        name: View
        nameWithType: Controller.View
        qualifiedName: System.Web.Mvc.Controller.View
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.View(System.String,System.String,System.Object)
        name: View
        nameWithType: Controller.View
        qualifiedName: System.Web.Mvc.Controller.View
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.View(System.String,System.String,System.Object)
  System.Web.Mvc.Controller.View(System.Web.Mvc.IView):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.View(System.Web.Mvc.IView)
        name: View
        nameWithType: Controller.View
        qualifiedName: System.Web.Mvc.Controller.View
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.IView
        name: IView
        nameWithType: IView
        qualifiedName: System.Web.Mvc.IView
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.View(System.Web.Mvc.IView)
        name: View
        nameWithType: Controller.View
        qualifiedName: System.Web.Mvc.Controller.View
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.IView
        name: IView
        nameWithType: IView
        qualifiedName: System.Web.Mvc.IView
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.View(System.Web.Mvc.IView)
  System.Web.Mvc.Controller.View(System.Web.Mvc.IView,System.Object):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.View(System.Web.Mvc.IView,System.Object)
        name: View
        nameWithType: Controller.View
        qualifiedName: System.Web.Mvc.Controller.View
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.IView
        name: IView
        nameWithType: IView
        qualifiedName: System.Web.Mvc.IView
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.View(System.Web.Mvc.IView,System.Object)
        name: View
        nameWithType: Controller.View
        qualifiedName: System.Web.Mvc.Controller.View
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.IView
        name: IView
        nameWithType: IView
        qualifiedName: System.Web.Mvc.IView
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.View(System.Web.Mvc.IView,System.Object)
  ? System.Web.Mvc.Controller.System#Web#Mvc#Async#IAsyncController#BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)
  : name:
      CSharp:
      - id: System.Web.Mvc.Controller.System#Web#Mvc#Async#IAsyncController#BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)
        name: IAsyncController.BeginExecute
        nameWithType: Controller.IAsyncController.BeginExecute
        qualifiedName: System.Web.Mvc.Controller.System.Web.Mvc.Async.IAsyncController.BeginExecute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Routing.RequestContext
        name: RequestContext
        nameWithType: RequestContext
        qualifiedName: System.Web.Routing.RequestContext
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.AsyncCallback
        name: AsyncCallback
        nameWithType: AsyncCallback
        qualifiedName: System.AsyncCallback
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.System#Web#Mvc#Async#IAsyncController#BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)
        name: System.Web.Mvc.Async.IAsyncController.BeginExecute
        nameWithType: Controller.System.Web.Mvc.Async.IAsyncController.BeginExecute
        qualifiedName: System.Web.Mvc.Controller.System.Web.Mvc.Async.IAsyncController.BeginExecute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Routing.RequestContext
        name: RequestContext
        nameWithType: RequestContext
        qualifiedName: System.Web.Routing.RequestContext
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.AsyncCallback
        name: AsyncCallback
        nameWithType: AsyncCallback
        qualifiedName: System.AsyncCallback
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.System#Web#Mvc#Async#IAsyncController#BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)
  System.Web.Mvc.Controller.System#Web#Mvc#Async#IAsyncController#EndExecute(System.IAsyncResult):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.System#Web#Mvc#Async#IAsyncController#EndExecute(System.IAsyncResult)
        name: IAsyncController.EndExecute
        nameWithType: Controller.IAsyncController.EndExecute
        qualifiedName: System.Web.Mvc.Controller.System.Web.Mvc.Async.IAsyncController.EndExecute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.IAsyncResult
        name: IAsyncResult
        nameWithType: IAsyncResult
        qualifiedName: System.IAsyncResult
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.System#Web#Mvc#Async#IAsyncController#EndExecute(System.IAsyncResult)
        name: System.Web.Mvc.Async.IAsyncController.EndExecute
        nameWithType: Controller.System.Web.Mvc.Async.IAsyncController.EndExecute
        qualifiedName: System.Web.Mvc.Controller.System.Web.Mvc.Async.IAsyncController.EndExecute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.IAsyncResult
        name: IAsyncResult
        nameWithType: IAsyncResult
        qualifiedName: System.IAsyncResult
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.System#Web#Mvc#Async#IAsyncController#EndExecute(System.IAsyncResult)
  System.Web.Mvc.Controller.BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)
        name: BeginExecute
        nameWithType: Controller.BeginExecute
        qualifiedName: System.Web.Mvc.Controller.BeginExecute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Routing.RequestContext
        name: RequestContext
        nameWithType: RequestContext
        qualifiedName: System.Web.Routing.RequestContext
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.AsyncCallback
        name: AsyncCallback
        nameWithType: AsyncCallback
        qualifiedName: System.AsyncCallback
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)
        name: BeginExecute
        nameWithType: Controller.BeginExecute
        qualifiedName: System.Web.Mvc.Controller.BeginExecute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Routing.RequestContext
        name: RequestContext
        nameWithType: RequestContext
        qualifiedName: System.Web.Routing.RequestContext
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.AsyncCallback
        name: AsyncCallback
        nameWithType: AsyncCallback
        qualifiedName: System.AsyncCallback
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)
  System.Web.Mvc.Controller.BeginExecuteCore(System.AsyncCallback,System.Object):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.BeginExecuteCore(System.AsyncCallback,System.Object)
        name: BeginExecuteCore
        nameWithType: Controller.BeginExecuteCore
        qualifiedName: System.Web.Mvc.Controller.BeginExecuteCore
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.AsyncCallback
        name: AsyncCallback
        nameWithType: AsyncCallback
        qualifiedName: System.AsyncCallback
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.BeginExecuteCore(System.AsyncCallback,System.Object)
        name: BeginExecuteCore
        nameWithType: Controller.BeginExecuteCore
        qualifiedName: System.Web.Mvc.Controller.BeginExecuteCore
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.AsyncCallback
        name: AsyncCallback
        nameWithType: AsyncCallback
        qualifiedName: System.AsyncCallback
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.BeginExecuteCore(System.AsyncCallback,System.Object)
  System.Web.Mvc.Controller.EndExecute(System.IAsyncResult):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.EndExecute(System.IAsyncResult)
        name: EndExecute
        nameWithType: Controller.EndExecute
        qualifiedName: System.Web.Mvc.Controller.EndExecute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.IAsyncResult
        name: IAsyncResult
        nameWithType: IAsyncResult
        qualifiedName: System.IAsyncResult
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.EndExecute(System.IAsyncResult)
        name: EndExecute
        nameWithType: Controller.EndExecute
        qualifiedName: System.Web.Mvc.Controller.EndExecute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.IAsyncResult
        name: IAsyncResult
        nameWithType: IAsyncResult
        qualifiedName: System.IAsyncResult
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.EndExecute(System.IAsyncResult)
  System.Web.Mvc.Controller.EndExecuteCore(System.IAsyncResult):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.EndExecuteCore(System.IAsyncResult)
        name: EndExecuteCore
        nameWithType: Controller.EndExecuteCore
        qualifiedName: System.Web.Mvc.Controller.EndExecuteCore
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.IAsyncResult
        name: IAsyncResult
        nameWithType: IAsyncResult
        qualifiedName: System.IAsyncResult
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.EndExecuteCore(System.IAsyncResult)
        name: EndExecuteCore
        nameWithType: Controller.EndExecuteCore
        qualifiedName: System.Web.Mvc.Controller.EndExecuteCore
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.IAsyncResult
        name: IAsyncResult
        nameWithType: IAsyncResult
        qualifiedName: System.IAsyncResult
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.EndExecuteCore(System.IAsyncResult)
  System.Web.Mvc.Controller.System#Web#Mvc#IActionFilter#OnActionExecuting(System.Web.Mvc.ActionExecutingContext):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.System#Web#Mvc#IActionFilter#OnActionExecuting(System.Web.Mvc.ActionExecutingContext)
        name: IActionFilter.OnActionExecuting
        nameWithType: Controller.IActionFilter.OnActionExecuting
        qualifiedName: System.Web.Mvc.Controller.System.Web.Mvc.IActionFilter.OnActionExecuting
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.ActionExecutingContext
        name: ActionExecutingContext
        nameWithType: ActionExecutingContext
        qualifiedName: System.Web.Mvc.ActionExecutingContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.System#Web#Mvc#IActionFilter#OnActionExecuting(System.Web.Mvc.ActionExecutingContext)
        name: System.Web.Mvc.IActionFilter.OnActionExecuting
        nameWithType: Controller.System.Web.Mvc.IActionFilter.OnActionExecuting
        qualifiedName: System.Web.Mvc.Controller.System.Web.Mvc.IActionFilter.OnActionExecuting
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.ActionExecutingContext
        name: ActionExecutingContext
        nameWithType: ActionExecutingContext
        qualifiedName: System.Web.Mvc.ActionExecutingContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.System#Web#Mvc#IActionFilter#OnActionExecuting(System.Web.Mvc.ActionExecutingContext)
  System.Web.Mvc.Controller.System#Web#Mvc#IActionFilter#OnActionExecuted(System.Web.Mvc.ActionExecutedContext):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.System#Web#Mvc#IActionFilter#OnActionExecuted(System.Web.Mvc.ActionExecutedContext)
        name: IActionFilter.OnActionExecuted
        nameWithType: Controller.IActionFilter.OnActionExecuted
        qualifiedName: System.Web.Mvc.Controller.System.Web.Mvc.IActionFilter.OnActionExecuted
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.ActionExecutedContext
        name: ActionExecutedContext
        nameWithType: ActionExecutedContext
        qualifiedName: System.Web.Mvc.ActionExecutedContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.System#Web#Mvc#IActionFilter#OnActionExecuted(System.Web.Mvc.ActionExecutedContext)
        name: System.Web.Mvc.IActionFilter.OnActionExecuted
        nameWithType: Controller.System.Web.Mvc.IActionFilter.OnActionExecuted
        qualifiedName: System.Web.Mvc.Controller.System.Web.Mvc.IActionFilter.OnActionExecuted
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.ActionExecutedContext
        name: ActionExecutedContext
        nameWithType: ActionExecutedContext
        qualifiedName: System.Web.Mvc.ActionExecutedContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.System#Web#Mvc#IActionFilter#OnActionExecuted(System.Web.Mvc.ActionExecutedContext)
  ? System.Web.Mvc.Controller.System#Web#Mvc#Filters#IAuthenticationFilter#OnAuthentication(System.Web.Mvc.Filters.AuthenticationContext)
  : name:
      CSharp:
      - id: System.Web.Mvc.Controller.System#Web#Mvc#Filters#IAuthenticationFilter#OnAuthentication(System.Web.Mvc.Filters.AuthenticationContext)
        name: IAuthenticationFilter.OnAuthentication
        nameWithType: Controller.IAuthenticationFilter.OnAuthentication
        qualifiedName: System.Web.Mvc.Controller.System.Web.Mvc.Filters.IAuthenticationFilter.OnAuthentication
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.Filters.AuthenticationContext
        name: AuthenticationContext
        nameWithType: AuthenticationContext
        qualifiedName: System.Web.Mvc.Filters.AuthenticationContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.System#Web#Mvc#Filters#IAuthenticationFilter#OnAuthentication(System.Web.Mvc.Filters.AuthenticationContext)
        name: System.Web.Mvc.Filters.IAuthenticationFilter.OnAuthentication
        nameWithType: Controller.System.Web.Mvc.Filters.IAuthenticationFilter.OnAuthentication
        qualifiedName: System.Web.Mvc.Controller.System.Web.Mvc.Filters.IAuthenticationFilter.OnAuthentication
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.Filters.AuthenticationContext
        name: AuthenticationContext
        nameWithType: AuthenticationContext
        qualifiedName: System.Web.Mvc.Filters.AuthenticationContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.System#Web#Mvc#Filters#IAuthenticationFilter#OnAuthentication(System.Web.Mvc.Filters.AuthenticationContext)
  ? System.Web.Mvc.Controller.System#Web#Mvc#Filters#IAuthenticationFilter#OnAuthenticationChallenge(System.Web.Mvc.Filters.AuthenticationChallengeContext)
  : name:
      CSharp:
      - id: System.Web.Mvc.Controller.System#Web#Mvc#Filters#IAuthenticationFilter#OnAuthenticationChallenge(System.Web.Mvc.Filters.AuthenticationChallengeContext)
        name: IAuthenticationFilter.OnAuthenticationChallenge
        nameWithType: Controller.IAuthenticationFilter.OnAuthenticationChallenge
        qualifiedName: System.Web.Mvc.Controller.System.Web.Mvc.Filters.IAuthenticationFilter.OnAuthenticationChallenge
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.Filters.AuthenticationChallengeContext
        name: AuthenticationChallengeContext
        nameWithType: AuthenticationChallengeContext
        qualifiedName: System.Web.Mvc.Filters.AuthenticationChallengeContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.System#Web#Mvc#Filters#IAuthenticationFilter#OnAuthenticationChallenge(System.Web.Mvc.Filters.AuthenticationChallengeContext)
        name: System.Web.Mvc.Filters.IAuthenticationFilter.OnAuthenticationChallenge
        nameWithType: Controller.System.Web.Mvc.Filters.IAuthenticationFilter.OnAuthenticationChallenge
        qualifiedName: System.Web.Mvc.Controller.System.Web.Mvc.Filters.IAuthenticationFilter.OnAuthenticationChallenge
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.Filters.AuthenticationChallengeContext
        name: AuthenticationChallengeContext
        nameWithType: AuthenticationChallengeContext
        qualifiedName: System.Web.Mvc.Filters.AuthenticationChallengeContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.System#Web#Mvc#Filters#IAuthenticationFilter#OnAuthenticationChallenge(System.Web.Mvc.Filters.AuthenticationChallengeContext)
  System.Web.Mvc.Controller.System#Web#Mvc#IAuthorizationFilter#OnAuthorization(System.Web.Mvc.AuthorizationContext):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.System#Web#Mvc#IAuthorizationFilter#OnAuthorization(System.Web.Mvc.AuthorizationContext)
        name: IAuthorizationFilter.OnAuthorization
        nameWithType: Controller.IAuthorizationFilter.OnAuthorization
        qualifiedName: System.Web.Mvc.Controller.System.Web.Mvc.IAuthorizationFilter.OnAuthorization
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.AuthorizationContext
        name: AuthorizationContext
        nameWithType: AuthorizationContext
        qualifiedName: System.Web.Mvc.AuthorizationContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.System#Web#Mvc#IAuthorizationFilter#OnAuthorization(System.Web.Mvc.AuthorizationContext)
        name: System.Web.Mvc.IAuthorizationFilter.OnAuthorization
        nameWithType: Controller.System.Web.Mvc.IAuthorizationFilter.OnAuthorization
        qualifiedName: System.Web.Mvc.Controller.System.Web.Mvc.IAuthorizationFilter.OnAuthorization
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.AuthorizationContext
        name: AuthorizationContext
        nameWithType: AuthorizationContext
        qualifiedName: System.Web.Mvc.AuthorizationContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.System#Web#Mvc#IAuthorizationFilter#OnAuthorization(System.Web.Mvc.AuthorizationContext)
  System.Web.Mvc.Controller.System#Web#Mvc#IExceptionFilter#OnException(System.Web.Mvc.ExceptionContext):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.System#Web#Mvc#IExceptionFilter#OnException(System.Web.Mvc.ExceptionContext)
        name: IExceptionFilter.OnException
        nameWithType: Controller.IExceptionFilter.OnException
        qualifiedName: System.Web.Mvc.Controller.System.Web.Mvc.IExceptionFilter.OnException
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.ExceptionContext
        name: ExceptionContext
        nameWithType: ExceptionContext
        qualifiedName: System.Web.Mvc.ExceptionContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.System#Web#Mvc#IExceptionFilter#OnException(System.Web.Mvc.ExceptionContext)
        name: System.Web.Mvc.IExceptionFilter.OnException
        nameWithType: Controller.System.Web.Mvc.IExceptionFilter.OnException
        qualifiedName: System.Web.Mvc.Controller.System.Web.Mvc.IExceptionFilter.OnException
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.ExceptionContext
        name: ExceptionContext
        nameWithType: ExceptionContext
        qualifiedName: System.Web.Mvc.ExceptionContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.System#Web#Mvc#IExceptionFilter#OnException(System.Web.Mvc.ExceptionContext)
  System.Web.Mvc.Controller.System#Web#Mvc#IResultFilter#OnResultExecuting(System.Web.Mvc.ResultExecutingContext):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.System#Web#Mvc#IResultFilter#OnResultExecuting(System.Web.Mvc.ResultExecutingContext)
        name: IResultFilter.OnResultExecuting
        nameWithType: Controller.IResultFilter.OnResultExecuting
        qualifiedName: System.Web.Mvc.Controller.System.Web.Mvc.IResultFilter.OnResultExecuting
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.ResultExecutingContext
        name: ResultExecutingContext
        nameWithType: ResultExecutingContext
        qualifiedName: System.Web.Mvc.ResultExecutingContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.System#Web#Mvc#IResultFilter#OnResultExecuting(System.Web.Mvc.ResultExecutingContext)
        name: System.Web.Mvc.IResultFilter.OnResultExecuting
        nameWithType: Controller.System.Web.Mvc.IResultFilter.OnResultExecuting
        qualifiedName: System.Web.Mvc.Controller.System.Web.Mvc.IResultFilter.OnResultExecuting
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.ResultExecutingContext
        name: ResultExecutingContext
        nameWithType: ResultExecutingContext
        qualifiedName: System.Web.Mvc.ResultExecutingContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.System#Web#Mvc#IResultFilter#OnResultExecuting(System.Web.Mvc.ResultExecutingContext)
  System.Web.Mvc.Controller.System#Web#Mvc#IResultFilter#OnResultExecuted(System.Web.Mvc.ResultExecutedContext):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.System#Web#Mvc#IResultFilter#OnResultExecuted(System.Web.Mvc.ResultExecutedContext)
        name: IResultFilter.OnResultExecuted
        nameWithType: Controller.IResultFilter.OnResultExecuted
        qualifiedName: System.Web.Mvc.Controller.System.Web.Mvc.IResultFilter.OnResultExecuted
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.ResultExecutedContext
        name: ResultExecutedContext
        nameWithType: ResultExecutedContext
        qualifiedName: System.Web.Mvc.ResultExecutedContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.System#Web#Mvc#IResultFilter#OnResultExecuted(System.Web.Mvc.ResultExecutedContext)
        name: System.Web.Mvc.IResultFilter.OnResultExecuted
        nameWithType: Controller.System.Web.Mvc.IResultFilter.OnResultExecuted
        qualifiedName: System.Web.Mvc.Controller.System.Web.Mvc.IResultFilter.OnResultExecuted
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Mvc.ResultExecutedContext
        name: ResultExecutedContext
        nameWithType: ResultExecutedContext
        qualifiedName: System.Web.Mvc.ResultExecutedContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.System#Web#Mvc#IResultFilter#OnResultExecuted(System.Web.Mvc.ResultExecutedContext)
  System.Web.Mvc.Controller.Resolver:
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.Resolver
        name: Resolver
        nameWithType: Controller.Resolver
        qualifiedName: System.Web.Mvc.Controller.Resolver
        isExternal: true
      VB:
      - id: System.Web.Mvc.Controller.Resolver
        name: Resolver
        nameWithType: Controller.Resolver
        qualifiedName: System.Web.Mvc.Controller.Resolver
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: P:System.Web.Mvc.Controller.Resolver
  System.Web.Mvc.Controller.AsyncManager:
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.AsyncManager
        name: AsyncManager
        nameWithType: Controller.AsyncManager
        qualifiedName: System.Web.Mvc.Controller.AsyncManager
        isExternal: true
      VB:
      - id: System.Web.Mvc.Controller.AsyncManager
        name: AsyncManager
        nameWithType: Controller.AsyncManager
        qualifiedName: System.Web.Mvc.Controller.AsyncManager
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: P:System.Web.Mvc.Controller.AsyncManager
  System.Web.Mvc.Controller.DisableAsyncSupport:
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.DisableAsyncSupport
        name: DisableAsyncSupport
        nameWithType: Controller.DisableAsyncSupport
        qualifiedName: System.Web.Mvc.Controller.DisableAsyncSupport
        isExternal: true
      VB:
      - id: System.Web.Mvc.Controller.DisableAsyncSupport
        name: DisableAsyncSupport
        nameWithType: Controller.DisableAsyncSupport
        qualifiedName: System.Web.Mvc.Controller.DisableAsyncSupport
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: P:System.Web.Mvc.Controller.DisableAsyncSupport
  System.Web.Mvc.Controller.ActionInvoker:
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.ActionInvoker
        name: ActionInvoker
        nameWithType: Controller.ActionInvoker
        qualifiedName: System.Web.Mvc.Controller.ActionInvoker
        isExternal: true
      VB:
      - id: System.Web.Mvc.Controller.ActionInvoker
        name: ActionInvoker
        nameWithType: Controller.ActionInvoker
        qualifiedName: System.Web.Mvc.Controller.ActionInvoker
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: P:System.Web.Mvc.Controller.ActionInvoker
  System.Web.Mvc.Controller.Binders:
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.Binders
        name: Binders
        nameWithType: Controller.Binders
        qualifiedName: System.Web.Mvc.Controller.Binders
        isExternal: true
      VB:
      - id: System.Web.Mvc.Controller.Binders
        name: Binders
        nameWithType: Controller.Binders
        qualifiedName: System.Web.Mvc.Controller.Binders
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: P:System.Web.Mvc.Controller.Binders
  System.Web.Mvc.Controller.HttpContext:
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.HttpContext
        name: HttpContext
        nameWithType: Controller.HttpContext
        qualifiedName: System.Web.Mvc.Controller.HttpContext
        isExternal: true
      VB:
      - id: System.Web.Mvc.Controller.HttpContext
        name: HttpContext
        nameWithType: Controller.HttpContext
        qualifiedName: System.Web.Mvc.Controller.HttpContext
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: P:System.Web.Mvc.Controller.HttpContext
  System.Web.Mvc.Controller.ModelState:
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.ModelState
        name: ModelState
        nameWithType: Controller.ModelState
        qualifiedName: System.Web.Mvc.Controller.ModelState
        isExternal: true
      VB:
      - id: System.Web.Mvc.Controller.ModelState
        name: ModelState
        nameWithType: Controller.ModelState
        qualifiedName: System.Web.Mvc.Controller.ModelState
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: P:System.Web.Mvc.Controller.ModelState
  System.Web.Mvc.Controller.Profile:
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.Profile
        name: Profile
        nameWithType: Controller.Profile
        qualifiedName: System.Web.Mvc.Controller.Profile
        isExternal: true
      VB:
      - id: System.Web.Mvc.Controller.Profile
        name: Profile
        nameWithType: Controller.Profile
        qualifiedName: System.Web.Mvc.Controller.Profile
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: P:System.Web.Mvc.Controller.Profile
  System.Web.Mvc.Controller.Request:
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.Request
        name: Request
        nameWithType: Controller.Request
        qualifiedName: System.Web.Mvc.Controller.Request
        isExternal: true
      VB:
      - id: System.Web.Mvc.Controller.Request
        name: Request
        nameWithType: Controller.Request
        qualifiedName: System.Web.Mvc.Controller.Request
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: P:System.Web.Mvc.Controller.Request
  System.Web.Mvc.Controller.Response:
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.Response
        name: Response
        nameWithType: Controller.Response
        qualifiedName: System.Web.Mvc.Controller.Response
        isExternal: true
      VB:
      - id: System.Web.Mvc.Controller.Response
        name: Response
        nameWithType: Controller.Response
        qualifiedName: System.Web.Mvc.Controller.Response
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: P:System.Web.Mvc.Controller.Response
  System.Web.Mvc.Controller.RouteData:
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.RouteData
        name: RouteData
        nameWithType: Controller.RouteData
        qualifiedName: System.Web.Mvc.Controller.RouteData
        isExternal: true
      VB:
      - id: System.Web.Mvc.Controller.RouteData
        name: RouteData
        nameWithType: Controller.RouteData
        qualifiedName: System.Web.Mvc.Controller.RouteData
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: P:System.Web.Mvc.Controller.RouteData
  System.Web.Mvc.Controller.Server:
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.Server
        name: Server
        nameWithType: Controller.Server
        qualifiedName: System.Web.Mvc.Controller.Server
        isExternal: true
      VB:
      - id: System.Web.Mvc.Controller.Server
        name: Server
        nameWithType: Controller.Server
        qualifiedName: System.Web.Mvc.Controller.Server
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: P:System.Web.Mvc.Controller.Server
  System.Web.Mvc.Controller.Session:
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.Session
        name: Session
        nameWithType: Controller.Session
        qualifiedName: System.Web.Mvc.Controller.Session
        isExternal: true
      VB:
      - id: System.Web.Mvc.Controller.Session
        name: Session
        nameWithType: Controller.Session
        qualifiedName: System.Web.Mvc.Controller.Session
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: P:System.Web.Mvc.Controller.Session
  System.Web.Mvc.Controller.TempDataProvider:
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.TempDataProvider
        name: TempDataProvider
        nameWithType: Controller.TempDataProvider
        qualifiedName: System.Web.Mvc.Controller.TempDataProvider
        isExternal: true
      VB:
      - id: System.Web.Mvc.Controller.TempDataProvider
        name: TempDataProvider
        nameWithType: Controller.TempDataProvider
        qualifiedName: System.Web.Mvc.Controller.TempDataProvider
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: P:System.Web.Mvc.Controller.TempDataProvider
  System.Web.Mvc.Controller.Url:
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.Url
        name: Url
        nameWithType: Controller.Url
        qualifiedName: System.Web.Mvc.Controller.Url
        isExternal: true
      VB:
      - id: System.Web.Mvc.Controller.Url
        name: Url
        nameWithType: Controller.Url
        qualifiedName: System.Web.Mvc.Controller.Url
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: P:System.Web.Mvc.Controller.Url
  System.Web.Mvc.Controller.User:
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.User
        name: User
        nameWithType: Controller.User
        qualifiedName: System.Web.Mvc.Controller.User
        isExternal: true
      VB:
      - id: System.Web.Mvc.Controller.User
        name: User
        nameWithType: Controller.User
        qualifiedName: System.Web.Mvc.Controller.User
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: P:System.Web.Mvc.Controller.User
  System.Web.Mvc.Controller.ViewEngineCollection:
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.ViewEngineCollection
        name: ViewEngineCollection
        nameWithType: Controller.ViewEngineCollection
        qualifiedName: System.Web.Mvc.Controller.ViewEngineCollection
        isExternal: true
      VB:
      - id: System.Web.Mvc.Controller.ViewEngineCollection
        name: ViewEngineCollection
        nameWithType: Controller.ViewEngineCollection
        qualifiedName: System.Web.Mvc.Controller.ViewEngineCollection
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: P:System.Web.Mvc.Controller.ViewEngineCollection
  System.Web.Mvc.ControllerBase:
    name:
      CSharp:
      - id: System.Web.Mvc.ControllerBase
        name: ControllerBase
        nameWithType: ControllerBase
        qualifiedName: System.Web.Mvc.ControllerBase
        isExternal: true
      VB:
      - id: System.Web.Mvc.ControllerBase
        name: ControllerBase
        nameWithType: ControllerBase
        qualifiedName: System.Web.Mvc.ControllerBase
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc
    commentId: T:System.Web.Mvc.ControllerBase
  System.Web.Mvc.ControllerBase.Execute(System.Web.Routing.RequestContext):
    name:
      CSharp:
      - id: System.Web.Mvc.ControllerBase.Execute(System.Web.Routing.RequestContext)
        name: Execute
        nameWithType: ControllerBase.Execute
        qualifiedName: System.Web.Mvc.ControllerBase.Execute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Routing.RequestContext
        name: RequestContext
        nameWithType: RequestContext
        qualifiedName: System.Web.Routing.RequestContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.ControllerBase.Execute(System.Web.Routing.RequestContext)
        name: Execute
        nameWithType: ControllerBase.Execute
        qualifiedName: System.Web.Mvc.ControllerBase.Execute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Routing.RequestContext
        name: RequestContext
        nameWithType: RequestContext
        qualifiedName: System.Web.Routing.RequestContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.ControllerBase
    commentId: M:System.Web.Mvc.ControllerBase.Execute(System.Web.Routing.RequestContext)
  System.Web.Mvc.ControllerBase.System#Web#Mvc#IController#Execute(System.Web.Routing.RequestContext):
    name:
      CSharp:
      - id: System.Web.Mvc.ControllerBase.System#Web#Mvc#IController#Execute(System.Web.Routing.RequestContext)
        name: IController.Execute
        nameWithType: ControllerBase.IController.Execute
        qualifiedName: System.Web.Mvc.ControllerBase.System.Web.Mvc.IController.Execute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Routing.RequestContext
        name: RequestContext
        nameWithType: RequestContext
        qualifiedName: System.Web.Routing.RequestContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.ControllerBase.System#Web#Mvc#IController#Execute(System.Web.Routing.RequestContext)
        name: System.Web.Mvc.IController.Execute
        nameWithType: ControllerBase.System.Web.Mvc.IController.Execute
        qualifiedName: System.Web.Mvc.ControllerBase.System.Web.Mvc.IController.Execute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Web.Routing.RequestContext
        name: RequestContext
        nameWithType: RequestContext
        qualifiedName: System.Web.Routing.RequestContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.ControllerBase
    commentId: M:System.Web.Mvc.ControllerBase.System#Web#Mvc#IController#Execute(System.Web.Routing.RequestContext)
  System.Web.Mvc.ControllerBase.ControllerContext:
    name:
      CSharp:
      - id: System.Web.Mvc.ControllerBase.ControllerContext
        name: ControllerContext
        nameWithType: ControllerBase.ControllerContext
        qualifiedName: System.Web.Mvc.ControllerBase.ControllerContext
        isExternal: true
      VB:
      - id: System.Web.Mvc.ControllerBase.ControllerContext
        name: ControllerContext
        nameWithType: ControllerBase.ControllerContext
        qualifiedName: System.Web.Mvc.ControllerBase.ControllerContext
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.ControllerBase
    commentId: P:System.Web.Mvc.ControllerBase.ControllerContext
  System.Web.Mvc.ControllerBase.TempData:
    name:
      CSharp:
      - id: System.Web.Mvc.ControllerBase.TempData
        name: TempData
        nameWithType: ControllerBase.TempData
        qualifiedName: System.Web.Mvc.ControllerBase.TempData
        isExternal: true
      VB:
      - id: System.Web.Mvc.ControllerBase.TempData
        name: TempData
        nameWithType: ControllerBase.TempData
        qualifiedName: System.Web.Mvc.ControllerBase.TempData
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.ControllerBase
    commentId: P:System.Web.Mvc.ControllerBase.TempData
  System.Web.Mvc.ControllerBase.ValidateRequest:
    name:
      CSharp:
      - id: System.Web.Mvc.ControllerBase.ValidateRequest
        name: ValidateRequest
        nameWithType: ControllerBase.ValidateRequest
        qualifiedName: System.Web.Mvc.ControllerBase.ValidateRequest
        isExternal: true
      VB:
      - id: System.Web.Mvc.ControllerBase.ValidateRequest
        name: ValidateRequest
        nameWithType: ControllerBase.ValidateRequest
        qualifiedName: System.Web.Mvc.ControllerBase.ValidateRequest
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.ControllerBase
    commentId: P:System.Web.Mvc.ControllerBase.ValidateRequest
  System.Web.Mvc.ControllerBase.ValueProvider:
    name:
      CSharp:
      - id: System.Web.Mvc.ControllerBase.ValueProvider
        name: ValueProvider
        nameWithType: ControllerBase.ValueProvider
        qualifiedName: System.Web.Mvc.ControllerBase.ValueProvider
        isExternal: true
      VB:
      - id: System.Web.Mvc.ControllerBase.ValueProvider
        name: ValueProvider
        nameWithType: ControllerBase.ValueProvider
        qualifiedName: System.Web.Mvc.ControllerBase.ValueProvider
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.ControllerBase
    commentId: P:System.Web.Mvc.ControllerBase.ValueProvider
  System.Web.Mvc.ControllerBase.ViewBag:
    name:
      CSharp:
      - id: System.Web.Mvc.ControllerBase.ViewBag
        name: ViewBag
        nameWithType: ControllerBase.ViewBag
        qualifiedName: System.Web.Mvc.ControllerBase.ViewBag
        isExternal: true
      VB:
      - id: System.Web.Mvc.ControllerBase.ViewBag
        name: ViewBag
        nameWithType: ControllerBase.ViewBag
        qualifiedName: System.Web.Mvc.ControllerBase.ViewBag
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.ControllerBase
    commentId: P:System.Web.Mvc.ControllerBase.ViewBag
  System.Web.Mvc.ControllerBase.ViewData:
    name:
      CSharp:
      - id: System.Web.Mvc.ControllerBase.ViewData
        name: ViewData
        nameWithType: ControllerBase.ViewData
        qualifiedName: System.Web.Mvc.ControllerBase.ViewData
        isExternal: true
      VB:
      - id: System.Web.Mvc.ControllerBase.ViewData
        name: ViewData
        nameWithType: ControllerBase.ViewData
        qualifiedName: System.Web.Mvc.ControllerBase.ViewData
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.ControllerBase
    commentId: P:System.Web.Mvc.ControllerBase.ViewData
  System.Web.Mvc.IActionFilter:
    name:
      CSharp:
      - id: System.Web.Mvc.IActionFilter
        name: IActionFilter
        nameWithType: IActionFilter
        qualifiedName: System.Web.Mvc.IActionFilter
        isExternal: true
      VB:
      - id: System.Web.Mvc.IActionFilter
        name: IActionFilter
        nameWithType: IActionFilter
        qualifiedName: System.Web.Mvc.IActionFilter
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc
    commentId: T:System.Web.Mvc.IActionFilter
  System.Web.Mvc.Filters:
    name:
      CSharp:
      - name: System.Web.Mvc.Filters
        nameWithType: System.Web.Mvc.Filters
        qualifiedName: System.Web.Mvc.Filters
        isExternal: true
      VB:
      - name: System.Web.Mvc.Filters
        nameWithType: System.Web.Mvc.Filters
        qualifiedName: System.Web.Mvc.Filters
    isDefinition: true
    commentId: N:System.Web.Mvc.Filters
  System.Web.Mvc.Filters.IAuthenticationFilter:
    name:
      CSharp:
      - id: System.Web.Mvc.Filters.IAuthenticationFilter
        name: IAuthenticationFilter
        nameWithType: IAuthenticationFilter
        qualifiedName: System.Web.Mvc.Filters.IAuthenticationFilter
        isExternal: true
      VB:
      - id: System.Web.Mvc.Filters.IAuthenticationFilter
        name: IAuthenticationFilter
        nameWithType: IAuthenticationFilter
        qualifiedName: System.Web.Mvc.Filters.IAuthenticationFilter
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.Filters
    commentId: T:System.Web.Mvc.Filters.IAuthenticationFilter
  System.Web.Mvc.IAuthorizationFilter:
    name:
      CSharp:
      - id: System.Web.Mvc.IAuthorizationFilter
        name: IAuthorizationFilter
        nameWithType: IAuthorizationFilter
        qualifiedName: System.Web.Mvc.IAuthorizationFilter
        isExternal: true
      VB:
      - id: System.Web.Mvc.IAuthorizationFilter
        name: IAuthorizationFilter
        nameWithType: IAuthorizationFilter
        qualifiedName: System.Web.Mvc.IAuthorizationFilter
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc
    commentId: T:System.Web.Mvc.IAuthorizationFilter
  System.Web.Mvc.IExceptionFilter:
    name:
      CSharp:
      - id: System.Web.Mvc.IExceptionFilter
        name: IExceptionFilter
        nameWithType: IExceptionFilter
        qualifiedName: System.Web.Mvc.IExceptionFilter
        isExternal: true
      VB:
      - id: System.Web.Mvc.IExceptionFilter
        name: IExceptionFilter
        nameWithType: IExceptionFilter
        qualifiedName: System.Web.Mvc.IExceptionFilter
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc
    commentId: T:System.Web.Mvc.IExceptionFilter
  System.Web.Mvc.IResultFilter:
    name:
      CSharp:
      - id: System.Web.Mvc.IResultFilter
        name: IResultFilter
        nameWithType: IResultFilter
        qualifiedName: System.Web.Mvc.IResultFilter
        isExternal: true
      VB:
      - id: System.Web.Mvc.IResultFilter
        name: IResultFilter
        nameWithType: IResultFilter
        qualifiedName: System.Web.Mvc.IResultFilter
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc
    commentId: T:System.Web.Mvc.IResultFilter
  System.Web.Mvc.Async:
    name:
      CSharp:
      - name: System.Web.Mvc.Async
        nameWithType: System.Web.Mvc.Async
        qualifiedName: System.Web.Mvc.Async
        isExternal: true
      VB:
      - name: System.Web.Mvc.Async
        nameWithType: System.Web.Mvc.Async
        qualifiedName: System.Web.Mvc.Async
    isDefinition: true
    commentId: N:System.Web.Mvc.Async
  System.Web.Mvc.Async.IAsyncController:
    name:
      CSharp:
      - id: System.Web.Mvc.Async.IAsyncController
        name: IAsyncController
        nameWithType: IAsyncController
        qualifiedName: System.Web.Mvc.Async.IAsyncController
        isExternal: true
      VB:
      - id: System.Web.Mvc.Async.IAsyncController
        name: IAsyncController
        nameWithType: IAsyncController
        qualifiedName: System.Web.Mvc.Async.IAsyncController
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.Async
    commentId: T:System.Web.Mvc.Async.IAsyncController
  System.Web.Mvc.IController:
    name:
      CSharp:
      - id: System.Web.Mvc.IController
        name: IController
        nameWithType: IController
        qualifiedName: System.Web.Mvc.IController
        isExternal: true
      VB:
      - id: System.Web.Mvc.IController
        name: IController
        nameWithType: IController
        qualifiedName: System.Web.Mvc.IController
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc
    commentId: T:System.Web.Mvc.IController
  System.Web.Mvc.Async.IAsyncManagerContainer:
    name:
      CSharp:
      - id: System.Web.Mvc.Async.IAsyncManagerContainer
        name: IAsyncManagerContainer
        nameWithType: IAsyncManagerContainer
        qualifiedName: System.Web.Mvc.Async.IAsyncManagerContainer
        isExternal: true
      VB:
      - id: System.Web.Mvc.Async.IAsyncManagerContainer
        name: IAsyncManagerContainer
        nameWithType: IAsyncManagerContainer
        qualifiedName: System.Web.Mvc.Async.IAsyncManagerContainer
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc.Async
    commentId: T:System.Web.Mvc.Async.IAsyncManagerContainer
  BookstoreProject.Controllers.AccountController.#ctor*:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.AccountController.#ctor*
        name: AccountController
        nameWithType: AccountController.AccountController
        qualifiedName: BookstoreProject.Controllers.AccountController.AccountController
      VB:
      - id: BookstoreProject.Controllers.AccountController.#ctor*
        name: AccountController
        nameWithType: AccountController.AccountController
        qualifiedName: BookstoreProject.Controllers.AccountController.AccountController
    isDefinition: true
    commentId: Overload:BookstoreProject.Controllers.AccountController.#ctor
  BookstoreProject.Controllers.AccountController.SignInManager*:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.AccountController.SignInManager*
        name: SignInManager
        nameWithType: AccountController.SignInManager
        qualifiedName: BookstoreProject.Controllers.AccountController.SignInManager
      VB:
      - id: BookstoreProject.Controllers.AccountController.SignInManager*
        name: SignInManager
        nameWithType: AccountController.SignInManager
        qualifiedName: BookstoreProject.Controllers.AccountController.SignInManager
    isDefinition: true
    commentId: Overload:BookstoreProject.Controllers.AccountController.SignInManager
  BookstoreProject.Controllers.AccountController.UserManager*:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.AccountController.UserManager*
        name: UserManager
        nameWithType: AccountController.UserManager
        qualifiedName: BookstoreProject.Controllers.AccountController.UserManager
      VB:
      - id: BookstoreProject.Controllers.AccountController.UserManager*
        name: UserManager
        nameWithType: AccountController.UserManager
        qualifiedName: BookstoreProject.Controllers.AccountController.UserManager
    isDefinition: true
    commentId: Overload:BookstoreProject.Controllers.AccountController.UserManager
  System.Web.Mvc.ActionResult:
    name:
      CSharp:
      - id: System.Web.Mvc.ActionResult
        name: ActionResult
        nameWithType: ActionResult
        qualifiedName: System.Web.Mvc.ActionResult
        isExternal: true
      VB:
      - id: System.Web.Mvc.ActionResult
        name: ActionResult
        nameWithType: ActionResult
        qualifiedName: System.Web.Mvc.ActionResult
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc
    commentId: T:System.Web.Mvc.ActionResult
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  BookstoreProject.Controllers.AccountController.Login*:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.AccountController.Login*
        name: Login
        nameWithType: AccountController.Login
        qualifiedName: BookstoreProject.Controllers.AccountController.Login
      VB:
      - id: BookstoreProject.Controllers.AccountController.Login*
        name: Login
        nameWithType: AccountController.Login
        qualifiedName: BookstoreProject.Controllers.AccountController.Login
    isDefinition: true
    commentId: Overload:BookstoreProject.Controllers.AccountController.Login
  System.Web.Mvc.AllowAnonymousAttribute:
    name:
      CSharp:
      - id: System.Web.Mvc.AllowAnonymousAttribute
        name: AllowAnonymousAttribute
        nameWithType: AllowAnonymousAttribute
        qualifiedName: System.Web.Mvc.AllowAnonymousAttribute
        isExternal: true
      VB:
      - id: System.Web.Mvc.AllowAnonymousAttribute
        name: AllowAnonymousAttribute
        nameWithType: AllowAnonymousAttribute
        qualifiedName: System.Web.Mvc.AllowAnonymousAttribute
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc
    commentId: T:System.Web.Mvc.AllowAnonymousAttribute
  System.Web.Mvc.AllowAnonymousAttribute.#ctor:
    name:
      CSharp:
      - id: System.Web.Mvc.AllowAnonymousAttribute.#ctor
        name: AllowAnonymousAttribute
        nameWithType: AllowAnonymousAttribute.AllowAnonymousAttribute
        qualifiedName: System.Web.Mvc.AllowAnonymousAttribute.AllowAnonymousAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.AllowAnonymousAttribute.#ctor
        name: AllowAnonymousAttribute
        nameWithType: AllowAnonymousAttribute.AllowAnonymousAttribute
        qualifiedName: System.Web.Mvc.AllowAnonymousAttribute.AllowAnonymousAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.AllowAnonymousAttribute
    commentId: M:System.Web.Mvc.AllowAnonymousAttribute.#ctor
  System.Threading.Tasks.Task{System.Web.Mvc.ActionResult}:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Web.Mvc.ActionResult
        name: ActionResult
        nameWithType: ActionResult
        qualifiedName: System.Web.Mvc.ActionResult
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Web.Mvc.ActionResult
        name: ActionResult
        nameWithType: ActionResult
        qualifiedName: System.Web.Mvc.ActionResult
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Threading.Tasks.Task`1
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task{System.Web.Mvc.ActionResult}
  BookstoreProject.Models.LoginViewModel:
    name:
      CSharp:
      - id: BookstoreProject.Models.LoginViewModel
        name: LoginViewModel
        nameWithType: LoginViewModel
        qualifiedName: BookstoreProject.Models.LoginViewModel
      VB:
      - id: BookstoreProject.Models.LoginViewModel
        name: LoginViewModel
        nameWithType: LoginViewModel
        qualifiedName: BookstoreProject.Models.LoginViewModel
    isDefinition: true
    parent: BookstoreProject.Models
    commentId: T:BookstoreProject.Models.LoginViewModel
  System.Web.Mvc.HttpPostAttribute:
    name:
      CSharp:
      - id: System.Web.Mvc.HttpPostAttribute
        name: HttpPostAttribute
        nameWithType: HttpPostAttribute
        qualifiedName: System.Web.Mvc.HttpPostAttribute
        isExternal: true
      VB:
      - id: System.Web.Mvc.HttpPostAttribute
        name: HttpPostAttribute
        nameWithType: HttpPostAttribute
        qualifiedName: System.Web.Mvc.HttpPostAttribute
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc
    commentId: T:System.Web.Mvc.HttpPostAttribute
  System.Web.Mvc.HttpPostAttribute.#ctor:
    name:
      CSharp:
      - id: System.Web.Mvc.HttpPostAttribute.#ctor
        name: HttpPostAttribute
        nameWithType: HttpPostAttribute.HttpPostAttribute
        qualifiedName: System.Web.Mvc.HttpPostAttribute.HttpPostAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.HttpPostAttribute.#ctor
        name: HttpPostAttribute
        nameWithType: HttpPostAttribute.HttpPostAttribute
        qualifiedName: System.Web.Mvc.HttpPostAttribute.HttpPostAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.HttpPostAttribute
    commentId: M:System.Web.Mvc.HttpPostAttribute.#ctor
  System.Web.Mvc.ValidateAntiForgeryTokenAttribute:
    name:
      CSharp:
      - id: System.Web.Mvc.ValidateAntiForgeryTokenAttribute
        name: ValidateAntiForgeryTokenAttribute
        nameWithType: ValidateAntiForgeryTokenAttribute
        qualifiedName: System.Web.Mvc.ValidateAntiForgeryTokenAttribute
        isExternal: true
      VB:
      - id: System.Web.Mvc.ValidateAntiForgeryTokenAttribute
        name: ValidateAntiForgeryTokenAttribute
        nameWithType: ValidateAntiForgeryTokenAttribute
        qualifiedName: System.Web.Mvc.ValidateAntiForgeryTokenAttribute
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc
    commentId: T:System.Web.Mvc.ValidateAntiForgeryTokenAttribute
  System.Web.Mvc.ValidateAntiForgeryTokenAttribute.#ctor:
    name:
      CSharp:
      - id: System.Web.Mvc.ValidateAntiForgeryTokenAttribute.#ctor
        name: ValidateAntiForgeryTokenAttribute
        nameWithType: ValidateAntiForgeryTokenAttribute.ValidateAntiForgeryTokenAttribute
        qualifiedName: System.Web.Mvc.ValidateAntiForgeryTokenAttribute.ValidateAntiForgeryTokenAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.ValidateAntiForgeryTokenAttribute.#ctor
        name: ValidateAntiForgeryTokenAttribute
        nameWithType: ValidateAntiForgeryTokenAttribute.ValidateAntiForgeryTokenAttribute
        qualifiedName: System.Web.Mvc.ValidateAntiForgeryTokenAttribute.ValidateAntiForgeryTokenAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.ValidateAntiForgeryTokenAttribute
    commentId: M:System.Web.Mvc.ValidateAntiForgeryTokenAttribute.#ctor
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  BookstoreProject.Controllers.AccountController.VerifyCode*:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.AccountController.VerifyCode*
        name: VerifyCode
        nameWithType: AccountController.VerifyCode
        qualifiedName: BookstoreProject.Controllers.AccountController.VerifyCode
      VB:
      - id: BookstoreProject.Controllers.AccountController.VerifyCode*
        name: VerifyCode
        nameWithType: AccountController.VerifyCode
        qualifiedName: BookstoreProject.Controllers.AccountController.VerifyCode
    isDefinition: true
    commentId: Overload:BookstoreProject.Controllers.AccountController.VerifyCode
  BookstoreProject.Models.VerifyCodeViewModel:
    name:
      CSharp:
      - id: BookstoreProject.Models.VerifyCodeViewModel
        name: VerifyCodeViewModel
        nameWithType: VerifyCodeViewModel
        qualifiedName: BookstoreProject.Models.VerifyCodeViewModel
      VB:
      - id: BookstoreProject.Models.VerifyCodeViewModel
        name: VerifyCodeViewModel
        nameWithType: VerifyCodeViewModel
        qualifiedName: BookstoreProject.Models.VerifyCodeViewModel
    isDefinition: true
    parent: BookstoreProject.Models
    commentId: T:BookstoreProject.Models.VerifyCodeViewModel
  BookstoreProject.Controllers.AccountController.Register*:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.AccountController.Register*
        name: Register
        nameWithType: AccountController.Register
        qualifiedName: BookstoreProject.Controllers.AccountController.Register
      VB:
      - id: BookstoreProject.Controllers.AccountController.Register*
        name: Register
        nameWithType: AccountController.Register
        qualifiedName: BookstoreProject.Controllers.AccountController.Register
    isDefinition: true
    commentId: Overload:BookstoreProject.Controllers.AccountController.Register
  BookstoreProject.Models.RegisterViewModel:
    name:
      CSharp:
      - id: BookstoreProject.Models.RegisterViewModel
        name: RegisterViewModel
        nameWithType: RegisterViewModel
        qualifiedName: BookstoreProject.Models.RegisterViewModel
      VB:
      - id: BookstoreProject.Models.RegisterViewModel
        name: RegisterViewModel
        nameWithType: RegisterViewModel
        qualifiedName: BookstoreProject.Models.RegisterViewModel
    isDefinition: true
    parent: BookstoreProject.Models
    commentId: T:BookstoreProject.Models.RegisterViewModel
  BookstoreProject.Controllers.AccountController.ConfirmEmail*:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.AccountController.ConfirmEmail*
        name: ConfirmEmail
        nameWithType: AccountController.ConfirmEmail
        qualifiedName: BookstoreProject.Controllers.AccountController.ConfirmEmail
      VB:
      - id: BookstoreProject.Controllers.AccountController.ConfirmEmail*
        name: ConfirmEmail
        nameWithType: AccountController.ConfirmEmail
        qualifiedName: BookstoreProject.Controllers.AccountController.ConfirmEmail
    isDefinition: true
    commentId: Overload:BookstoreProject.Controllers.AccountController.ConfirmEmail
  BookstoreProject.Controllers.AccountController.ForgotPassword*:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.AccountController.ForgotPassword*
        name: ForgotPassword
        nameWithType: AccountController.ForgotPassword
        qualifiedName: BookstoreProject.Controllers.AccountController.ForgotPassword
      VB:
      - id: BookstoreProject.Controllers.AccountController.ForgotPassword*
        name: ForgotPassword
        nameWithType: AccountController.ForgotPassword
        qualifiedName: BookstoreProject.Controllers.AccountController.ForgotPassword
    isDefinition: true
    commentId: Overload:BookstoreProject.Controllers.AccountController.ForgotPassword
  BookstoreProject.Models.ForgotPasswordViewModel:
    name:
      CSharp:
      - id: BookstoreProject.Models.ForgotPasswordViewModel
        name: ForgotPasswordViewModel
        nameWithType: ForgotPasswordViewModel
        qualifiedName: BookstoreProject.Models.ForgotPasswordViewModel
      VB:
      - id: BookstoreProject.Models.ForgotPasswordViewModel
        name: ForgotPasswordViewModel
        nameWithType: ForgotPasswordViewModel
        qualifiedName: BookstoreProject.Models.ForgotPasswordViewModel
    isDefinition: true
    parent: BookstoreProject.Models
    commentId: T:BookstoreProject.Models.ForgotPasswordViewModel
  BookstoreProject.Controllers.AccountController.ForgotPasswordConfirmation*:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.AccountController.ForgotPasswordConfirmation*
        name: ForgotPasswordConfirmation
        nameWithType: AccountController.ForgotPasswordConfirmation
        qualifiedName: BookstoreProject.Controllers.AccountController.ForgotPasswordConfirmation
      VB:
      - id: BookstoreProject.Controllers.AccountController.ForgotPasswordConfirmation*
        name: ForgotPasswordConfirmation
        nameWithType: AccountController.ForgotPasswordConfirmation
        qualifiedName: BookstoreProject.Controllers.AccountController.ForgotPasswordConfirmation
    isDefinition: true
    commentId: Overload:BookstoreProject.Controllers.AccountController.ForgotPasswordConfirmation
  BookstoreProject.Controllers.AccountController.ResetPassword*:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.AccountController.ResetPassword*
        name: ResetPassword
        nameWithType: AccountController.ResetPassword
        qualifiedName: BookstoreProject.Controllers.AccountController.ResetPassword
      VB:
      - id: BookstoreProject.Controllers.AccountController.ResetPassword*
        name: ResetPassword
        nameWithType: AccountController.ResetPassword
        qualifiedName: BookstoreProject.Controllers.AccountController.ResetPassword
    isDefinition: true
    commentId: Overload:BookstoreProject.Controllers.AccountController.ResetPassword
  BookstoreProject.Models.ResetPasswordViewModel:
    name:
      CSharp:
      - id: BookstoreProject.Models.ResetPasswordViewModel
        name: ResetPasswordViewModel
        nameWithType: ResetPasswordViewModel
        qualifiedName: BookstoreProject.Models.ResetPasswordViewModel
      VB:
      - id: BookstoreProject.Models.ResetPasswordViewModel
        name: ResetPasswordViewModel
        nameWithType: ResetPasswordViewModel
        qualifiedName: BookstoreProject.Models.ResetPasswordViewModel
    isDefinition: true
    parent: BookstoreProject.Models
    commentId: T:BookstoreProject.Models.ResetPasswordViewModel
  BookstoreProject.Controllers.AccountController.ResetPasswordConfirmation*:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.AccountController.ResetPasswordConfirmation*
        name: ResetPasswordConfirmation
        nameWithType: AccountController.ResetPasswordConfirmation
        qualifiedName: BookstoreProject.Controllers.AccountController.ResetPasswordConfirmation
      VB:
      - id: BookstoreProject.Controllers.AccountController.ResetPasswordConfirmation*
        name: ResetPasswordConfirmation
        nameWithType: AccountController.ResetPasswordConfirmation
        qualifiedName: BookstoreProject.Controllers.AccountController.ResetPasswordConfirmation
    isDefinition: true
    commentId: Overload:BookstoreProject.Controllers.AccountController.ResetPasswordConfirmation
  BookstoreProject.Controllers.AccountController.ExternalLogin*:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.AccountController.ExternalLogin*
        name: ExternalLogin
        nameWithType: AccountController.ExternalLogin
        qualifiedName: BookstoreProject.Controllers.AccountController.ExternalLogin
      VB:
      - id: BookstoreProject.Controllers.AccountController.ExternalLogin*
        name: ExternalLogin
        nameWithType: AccountController.ExternalLogin
        qualifiedName: BookstoreProject.Controllers.AccountController.ExternalLogin
    isDefinition: true
    commentId: Overload:BookstoreProject.Controllers.AccountController.ExternalLogin
  BookstoreProject.Controllers.AccountController.SendCode*:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.AccountController.SendCode*
        name: SendCode
        nameWithType: AccountController.SendCode
        qualifiedName: BookstoreProject.Controllers.AccountController.SendCode
      VB:
      - id: BookstoreProject.Controllers.AccountController.SendCode*
        name: SendCode
        nameWithType: AccountController.SendCode
        qualifiedName: BookstoreProject.Controllers.AccountController.SendCode
    isDefinition: true
    commentId: Overload:BookstoreProject.Controllers.AccountController.SendCode
  BookstoreProject.Models.SendCodeViewModel:
    name:
      CSharp:
      - id: BookstoreProject.Models.SendCodeViewModel
        name: SendCodeViewModel
        nameWithType: SendCodeViewModel
        qualifiedName: BookstoreProject.Models.SendCodeViewModel
      VB:
      - id: BookstoreProject.Models.SendCodeViewModel
        name: SendCodeViewModel
        nameWithType: SendCodeViewModel
        qualifiedName: BookstoreProject.Models.SendCodeViewModel
    isDefinition: true
    parent: BookstoreProject.Models
    commentId: T:BookstoreProject.Models.SendCodeViewModel
  BookstoreProject.Controllers.AccountController.ExternalLoginCallback*:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.AccountController.ExternalLoginCallback*
        name: ExternalLoginCallback
        nameWithType: AccountController.ExternalLoginCallback
        qualifiedName: BookstoreProject.Controllers.AccountController.ExternalLoginCallback
      VB:
      - id: BookstoreProject.Controllers.AccountController.ExternalLoginCallback*
        name: ExternalLoginCallback
        nameWithType: AccountController.ExternalLoginCallback
        qualifiedName: BookstoreProject.Controllers.AccountController.ExternalLoginCallback
    isDefinition: true
    commentId: Overload:BookstoreProject.Controllers.AccountController.ExternalLoginCallback
  BookstoreProject.Models.ExternalLoginConfirmationViewModel:
    name:
      CSharp:
      - id: BookstoreProject.Models.ExternalLoginConfirmationViewModel
        name: ExternalLoginConfirmationViewModel
        nameWithType: ExternalLoginConfirmationViewModel
        qualifiedName: BookstoreProject.Models.ExternalLoginConfirmationViewModel
      VB:
      - id: BookstoreProject.Models.ExternalLoginConfirmationViewModel
        name: ExternalLoginConfirmationViewModel
        nameWithType: ExternalLoginConfirmationViewModel
        qualifiedName: BookstoreProject.Models.ExternalLoginConfirmationViewModel
    isDefinition: true
    parent: BookstoreProject.Models
    commentId: T:BookstoreProject.Models.ExternalLoginConfirmationViewModel
  BookstoreProject.Controllers.AccountController.ExternalLoginConfirmation*:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.AccountController.ExternalLoginConfirmation*
        name: ExternalLoginConfirmation
        nameWithType: AccountController.ExternalLoginConfirmation
        qualifiedName: BookstoreProject.Controllers.AccountController.ExternalLoginConfirmation
      VB:
      - id: BookstoreProject.Controllers.AccountController.ExternalLoginConfirmation*
        name: ExternalLoginConfirmation
        nameWithType: AccountController.ExternalLoginConfirmation
        qualifiedName: BookstoreProject.Controllers.AccountController.ExternalLoginConfirmation
    isDefinition: true
    commentId: Overload:BookstoreProject.Controllers.AccountController.ExternalLoginConfirmation
  BookstoreProject.Controllers.AccountController.LogOff*:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.AccountController.LogOff*
        name: LogOff
        nameWithType: AccountController.LogOff
        qualifiedName: BookstoreProject.Controllers.AccountController.LogOff
      VB:
      - id: BookstoreProject.Controllers.AccountController.LogOff*
        name: LogOff
        nameWithType: AccountController.LogOff
        qualifiedName: BookstoreProject.Controllers.AccountController.LogOff
    isDefinition: true
    commentId: Overload:BookstoreProject.Controllers.AccountController.LogOff
  BookstoreProject.Controllers.AccountController.ExternalLoginFailure*:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.AccountController.ExternalLoginFailure*
        name: ExternalLoginFailure
        nameWithType: AccountController.ExternalLoginFailure
        qualifiedName: BookstoreProject.Controllers.AccountController.ExternalLoginFailure
      VB:
      - id: BookstoreProject.Controllers.AccountController.ExternalLoginFailure*
        name: ExternalLoginFailure
        nameWithType: AccountController.ExternalLoginFailure
        qualifiedName: BookstoreProject.Controllers.AccountController.ExternalLoginFailure
    isDefinition: true
    commentId: Overload:BookstoreProject.Controllers.AccountController.ExternalLoginFailure
  System.Web.Mvc.Controller.Dispose(System.Boolean):
    name:
      CSharp:
      - id: System.Web.Mvc.Controller.Dispose(System.Boolean)
        name: Dispose
        nameWithType: Controller.Dispose
        qualifiedName: System.Web.Mvc.Controller.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.Controller.Dispose(System.Boolean)
        name: Dispose
        nameWithType: Controller.Dispose
        qualifiedName: System.Web.Mvc.Controller.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.Controller
    commentId: M:System.Web.Mvc.Controller.Dispose(System.Boolean)
  BookstoreProject.Controllers.AccountController.Dispose*:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.AccountController.Dispose*
        name: Dispose
        nameWithType: AccountController.Dispose
        qualifiedName: BookstoreProject.Controllers.AccountController.Dispose
      VB:
      - id: BookstoreProject.Controllers.AccountController.Dispose*
        name: Dispose
        nameWithType: AccountController.Dispose
        qualifiedName: BookstoreProject.Controllers.AccountController.Dispose
    isDefinition: true
    commentId: Overload:BookstoreProject.Controllers.AccountController.Dispose
  BookstoreProject.Controllers.AccountController:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.AccountController
        name: AccountController
        nameWithType: AccountController
        qualifiedName: BookstoreProject.Controllers.AccountController
      VB:
      - id: BookstoreProject.Controllers.AccountController
        name: AccountController
        nameWithType: AccountController
        qualifiedName: BookstoreProject.Controllers.AccountController
    isDefinition: true
    commentId: T:BookstoreProject.Controllers.AccountController
  System.Web.Mvc.AuthorizeAttribute:
    name:
      CSharp:
      - id: System.Web.Mvc.AuthorizeAttribute
        name: AuthorizeAttribute
        nameWithType: AuthorizeAttribute
        qualifiedName: System.Web.Mvc.AuthorizeAttribute
        isExternal: true
      VB:
      - id: System.Web.Mvc.AuthorizeAttribute
        name: AuthorizeAttribute
        nameWithType: AuthorizeAttribute
        qualifiedName: System.Web.Mvc.AuthorizeAttribute
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc
    commentId: T:System.Web.Mvc.AuthorizeAttribute
  System.Web.Mvc.AuthorizeAttribute.#ctor:
    name:
      CSharp:
      - id: System.Web.Mvc.AuthorizeAttribute.#ctor
        name: AuthorizeAttribute
        nameWithType: AuthorizeAttribute.AuthorizeAttribute
        qualifiedName: System.Web.Mvc.AuthorizeAttribute.AuthorizeAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.AuthorizeAttribute.#ctor
        name: AuthorizeAttribute
        nameWithType: AuthorizeAttribute.AuthorizeAttribute
        qualifiedName: System.Web.Mvc.AuthorizeAttribute.AuthorizeAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.AuthorizeAttribute
    commentId: M:System.Web.Mvc.AuthorizeAttribute.#ctor
  BookstoreProject.Controllers.BooksController.Index*:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.BooksController.Index*
        name: Index
        nameWithType: BooksController.Index
        qualifiedName: BookstoreProject.Controllers.BooksController.Index
      VB:
      - id: BookstoreProject.Controllers.BooksController.Index*
        name: Index
        nameWithType: BooksController.Index
        qualifiedName: BookstoreProject.Controllers.BooksController.Index
    isDefinition: true
    commentId: Overload:BookstoreProject.Controllers.BooksController.Index
  System.Nullable`1:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Nullable`1
  System.Nullable{System.Int32}:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Nullable`1
    parent: System
    commentId: T:System.Nullable{System.Int32}
  BookstoreProject.Controllers.BooksController.Details*:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.BooksController.Details*
        name: Details
        nameWithType: BooksController.Details
        qualifiedName: BookstoreProject.Controllers.BooksController.Details
      VB:
      - id: BookstoreProject.Controllers.BooksController.Details*
        name: Details
        nameWithType: BooksController.Details
        qualifiedName: BookstoreProject.Controllers.BooksController.Details
    isDefinition: true
    commentId: Overload:BookstoreProject.Controllers.BooksController.Details
  BookstoreProject.Controllers.BooksController.Create*:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.BooksController.Create*
        name: Create
        nameWithType: BooksController.Create
        qualifiedName: BookstoreProject.Controllers.BooksController.Create
      VB:
      - id: BookstoreProject.Controllers.BooksController.Create*
        name: Create
        nameWithType: BooksController.Create
        qualifiedName: BookstoreProject.Controllers.BooksController.Create
    isDefinition: true
    commentId: Overload:BookstoreProject.Controllers.BooksController.Create
  BookstoreProject.Models.Book:
    name:
      CSharp:
      - id: BookstoreProject.Models.Book
        name: Book
        nameWithType: Book
        qualifiedName: BookstoreProject.Models.Book
      VB:
      - id: BookstoreProject.Models.Book
        name: Book
        nameWithType: Book
        qualifiedName: BookstoreProject.Models.Book
    isDefinition: true
    parent: BookstoreProject.Models
    commentId: T:BookstoreProject.Models.Book
  System.Web.Mvc.BindAttribute:
    name:
      CSharp:
      - id: System.Web.Mvc.BindAttribute
        name: BindAttribute
        nameWithType: BindAttribute
        qualifiedName: System.Web.Mvc.BindAttribute
        isExternal: true
      VB:
      - id: System.Web.Mvc.BindAttribute
        name: BindAttribute
        nameWithType: BindAttribute
        qualifiedName: System.Web.Mvc.BindAttribute
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc
    commentId: T:System.Web.Mvc.BindAttribute
  System.Web.Mvc.BindAttribute.#ctor:
    name:
      CSharp:
      - id: System.Web.Mvc.BindAttribute.#ctor
        name: BindAttribute
        nameWithType: BindAttribute.BindAttribute
        qualifiedName: System.Web.Mvc.BindAttribute.BindAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.BindAttribute.#ctor
        name: BindAttribute
        nameWithType: BindAttribute.BindAttribute
        qualifiedName: System.Web.Mvc.BindAttribute.BindAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.BindAttribute
    commentId: M:System.Web.Mvc.BindAttribute.#ctor
  BookstoreProject.Controllers.BooksController.Edit*:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.BooksController.Edit*
        name: Edit
        nameWithType: BooksController.Edit
        qualifiedName: BookstoreProject.Controllers.BooksController.Edit
      VB:
      - id: BookstoreProject.Controllers.BooksController.Edit*
        name: Edit
        nameWithType: BooksController.Edit
        qualifiedName: BookstoreProject.Controllers.BooksController.Edit
    isDefinition: true
    commentId: Overload:BookstoreProject.Controllers.BooksController.Edit
  BookstoreProject.Controllers.BooksController.Delete*:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.BooksController.Delete*
        name: Delete
        nameWithType: BooksController.Delete
        qualifiedName: BookstoreProject.Controllers.BooksController.Delete
      VB:
      - id: BookstoreProject.Controllers.BooksController.Delete*
        name: Delete
        nameWithType: BooksController.Delete
        qualifiedName: BookstoreProject.Controllers.BooksController.Delete
    isDefinition: true
    commentId: Overload:BookstoreProject.Controllers.BooksController.Delete
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int32
  BookstoreProject.Controllers.BooksController.DeleteConfirmed*:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.BooksController.DeleteConfirmed*
        name: DeleteConfirmed
        nameWithType: BooksController.DeleteConfirmed
        qualifiedName: BookstoreProject.Controllers.BooksController.DeleteConfirmed
      VB:
      - id: BookstoreProject.Controllers.BooksController.DeleteConfirmed*
        name: DeleteConfirmed
        nameWithType: BooksController.DeleteConfirmed
        qualifiedName: BookstoreProject.Controllers.BooksController.DeleteConfirmed
    isDefinition: true
    commentId: Overload:BookstoreProject.Controllers.BooksController.DeleteConfirmed
  System.Web.Mvc.ActionNameAttribute:
    name:
      CSharp:
      - id: System.Web.Mvc.ActionNameAttribute
        name: ActionNameAttribute
        nameWithType: ActionNameAttribute
        qualifiedName: System.Web.Mvc.ActionNameAttribute
        isExternal: true
      VB:
      - id: System.Web.Mvc.ActionNameAttribute
        name: ActionNameAttribute
        nameWithType: ActionNameAttribute
        qualifiedName: System.Web.Mvc.ActionNameAttribute
        isExternal: true
    isDefinition: true
    parent: System.Web.Mvc
    commentId: T:System.Web.Mvc.ActionNameAttribute
  System.Web.Mvc.ActionNameAttribute.#ctor(System.String):
    name:
      CSharp:
      - id: System.Web.Mvc.ActionNameAttribute.#ctor(System.String)
        name: ActionNameAttribute
        nameWithType: ActionNameAttribute.ActionNameAttribute
        qualifiedName: System.Web.Mvc.ActionNameAttribute.ActionNameAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Web.Mvc.ActionNameAttribute.#ctor(System.String)
        name: ActionNameAttribute
        nameWithType: ActionNameAttribute.ActionNameAttribute
        qualifiedName: System.Web.Mvc.ActionNameAttribute.ActionNameAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Web.Mvc.ActionNameAttribute
    commentId: M:System.Web.Mvc.ActionNameAttribute.#ctor(System.String)
  BookstoreProject.Controllers.BooksController.Dispose*:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.BooksController.Dispose*
        name: Dispose
        nameWithType: BooksController.Dispose
        qualifiedName: BookstoreProject.Controllers.BooksController.Dispose
      VB:
      - id: BookstoreProject.Controllers.BooksController.Dispose*
        name: Dispose
        nameWithType: BooksController.Dispose
        qualifiedName: BookstoreProject.Controllers.BooksController.Dispose
    isDefinition: true
    commentId: Overload:BookstoreProject.Controllers.BooksController.Dispose
  BookstoreProject.Controllers.BooksController:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.BooksController
        name: BooksController
        nameWithType: BooksController
        qualifiedName: BookstoreProject.Controllers.BooksController
      VB:
      - id: BookstoreProject.Controllers.BooksController
        name: BooksController
        nameWithType: BooksController
        qualifiedName: BookstoreProject.Controllers.BooksController
    isDefinition: true
    commentId: T:BookstoreProject.Controllers.BooksController
  BookstoreProject.Controllers.HomeController.Index*:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.HomeController.Index*
        name: Index
        nameWithType: HomeController.Index
        qualifiedName: BookstoreProject.Controllers.HomeController.Index
      VB:
      - id: BookstoreProject.Controllers.HomeController.Index*
        name: Index
        nameWithType: HomeController.Index
        qualifiedName: BookstoreProject.Controllers.HomeController.Index
    isDefinition: true
    commentId: Overload:BookstoreProject.Controllers.HomeController.Index
  BookstoreProject.Controllers.HomeController.About*:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.HomeController.About*
        name: About
        nameWithType: HomeController.About
        qualifiedName: BookstoreProject.Controllers.HomeController.About
      VB:
      - id: BookstoreProject.Controllers.HomeController.About*
        name: About
        nameWithType: HomeController.About
        qualifiedName: BookstoreProject.Controllers.HomeController.About
    isDefinition: true
    commentId: Overload:BookstoreProject.Controllers.HomeController.About
  BookstoreProject.Controllers.HomeController.Contact*:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.HomeController.Contact*
        name: Contact
        nameWithType: HomeController.Contact
        qualifiedName: BookstoreProject.Controllers.HomeController.Contact
      VB:
      - id: BookstoreProject.Controllers.HomeController.Contact*
        name: Contact
        nameWithType: HomeController.Contact
        qualifiedName: BookstoreProject.Controllers.HomeController.Contact
    isDefinition: true
    commentId: Overload:BookstoreProject.Controllers.HomeController.Contact
  BookstoreProject.Controllers.HomeController.Store*:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.HomeController.Store*
        name: Store
        nameWithType: HomeController.Store
        qualifiedName: BookstoreProject.Controllers.HomeController.Store
      VB:
      - id: BookstoreProject.Controllers.HomeController.Store*
        name: Store
        nameWithType: HomeController.Store
        qualifiedName: BookstoreProject.Controllers.HomeController.Store
    isDefinition: true
    commentId: Overload:BookstoreProject.Controllers.HomeController.Store
  BookstoreProject.Controllers.HomeController.ProductPage*:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.HomeController.ProductPage*
        name: ProductPage
        nameWithType: HomeController.ProductPage
        qualifiedName: BookstoreProject.Controllers.HomeController.ProductPage
      VB:
      - id: BookstoreProject.Controllers.HomeController.ProductPage*
        name: ProductPage
        nameWithType: HomeController.ProductPage
        qualifiedName: BookstoreProject.Controllers.HomeController.ProductPage
    isDefinition: true
    commentId: Overload:BookstoreProject.Controllers.HomeController.ProductPage
  BookstoreProject.Controllers.HomeController:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.HomeController
        name: HomeController
        nameWithType: HomeController
        qualifiedName: BookstoreProject.Controllers.HomeController
      VB:
      - id: BookstoreProject.Controllers.HomeController
        name: HomeController
        nameWithType: HomeController
        qualifiedName: BookstoreProject.Controllers.HomeController
    isDefinition: true
    commentId: T:BookstoreProject.Controllers.HomeController
  BookstoreProject.Controllers.ManageController.#ctor*:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.ManageController.#ctor*
        name: ManageController
        nameWithType: ManageController.ManageController
        qualifiedName: BookstoreProject.Controllers.ManageController.ManageController
      VB:
      - id: BookstoreProject.Controllers.ManageController.#ctor*
        name: ManageController
        nameWithType: ManageController.ManageController
        qualifiedName: BookstoreProject.Controllers.ManageController.ManageController
    isDefinition: true
    commentId: Overload:BookstoreProject.Controllers.ManageController.#ctor
  BookstoreProject.Controllers.ManageController.SignInManager*:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.ManageController.SignInManager*
        name: SignInManager
        nameWithType: ManageController.SignInManager
        qualifiedName: BookstoreProject.Controllers.ManageController.SignInManager
      VB:
      - id: BookstoreProject.Controllers.ManageController.SignInManager*
        name: SignInManager
        nameWithType: ManageController.SignInManager
        qualifiedName: BookstoreProject.Controllers.ManageController.SignInManager
    isDefinition: true
    commentId: Overload:BookstoreProject.Controllers.ManageController.SignInManager
  BookstoreProject.Controllers.ManageController.UserManager*:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.ManageController.UserManager*
        name: UserManager
        nameWithType: ManageController.UserManager
        qualifiedName: BookstoreProject.Controllers.ManageController.UserManager
      VB:
      - id: BookstoreProject.Controllers.ManageController.UserManager*
        name: UserManager
        nameWithType: ManageController.UserManager
        qualifiedName: BookstoreProject.Controllers.ManageController.UserManager
    isDefinition: true
    commentId: Overload:BookstoreProject.Controllers.ManageController.UserManager
  System.Nullable{BookstoreProject.Controllers.ManageController.ManageMessageId}:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: BookstoreProject.Controllers.ManageController.ManageMessageId
        name: ManageController.ManageMessageId
        nameWithType: ManageController.ManageMessageId
        qualifiedName: BookstoreProject.Controllers.ManageController.ManageMessageId
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: BookstoreProject.Controllers.ManageController.ManageMessageId
        name: ManageController.ManageMessageId
        nameWithType: ManageController.ManageMessageId
        qualifiedName: BookstoreProject.Controllers.ManageController.ManageMessageId
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Nullable`1
    parent: System
    commentId: T:System.Nullable{BookstoreProject.Controllers.ManageController.ManageMessageId}
  BookstoreProject.Controllers.ManageController.Index*:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.ManageController.Index*
        name: Index
        nameWithType: ManageController.Index
        qualifiedName: BookstoreProject.Controllers.ManageController.Index
      VB:
      - id: BookstoreProject.Controllers.ManageController.Index*
        name: Index
        nameWithType: ManageController.Index
        qualifiedName: BookstoreProject.Controllers.ManageController.Index
    isDefinition: true
    commentId: Overload:BookstoreProject.Controllers.ManageController.Index
  BookstoreProject.Controllers.ManageController.RemoveLogin*:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.ManageController.RemoveLogin*
        name: RemoveLogin
        nameWithType: ManageController.RemoveLogin
        qualifiedName: BookstoreProject.Controllers.ManageController.RemoveLogin
      VB:
      - id: BookstoreProject.Controllers.ManageController.RemoveLogin*
        name: RemoveLogin
        nameWithType: ManageController.RemoveLogin
        qualifiedName: BookstoreProject.Controllers.ManageController.RemoveLogin
    isDefinition: true
    commentId: Overload:BookstoreProject.Controllers.ManageController.RemoveLogin
  BookstoreProject.Controllers.ManageController.AddPhoneNumber*:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.ManageController.AddPhoneNumber*
        name: AddPhoneNumber
        nameWithType: ManageController.AddPhoneNumber
        qualifiedName: BookstoreProject.Controllers.ManageController.AddPhoneNumber
      VB:
      - id: BookstoreProject.Controllers.ManageController.AddPhoneNumber*
        name: AddPhoneNumber
        nameWithType: ManageController.AddPhoneNumber
        qualifiedName: BookstoreProject.Controllers.ManageController.AddPhoneNumber
    isDefinition: true
    commentId: Overload:BookstoreProject.Controllers.ManageController.AddPhoneNumber
  BookstoreProject.Models.AddPhoneNumberViewModel:
    name:
      CSharp:
      - id: BookstoreProject.Models.AddPhoneNumberViewModel
        name: AddPhoneNumberViewModel
        nameWithType: AddPhoneNumberViewModel
        qualifiedName: BookstoreProject.Models.AddPhoneNumberViewModel
      VB:
      - id: BookstoreProject.Models.AddPhoneNumberViewModel
        name: AddPhoneNumberViewModel
        nameWithType: AddPhoneNumberViewModel
        qualifiedName: BookstoreProject.Models.AddPhoneNumberViewModel
    isDefinition: true
    parent: BookstoreProject.Models
    commentId: T:BookstoreProject.Models.AddPhoneNumberViewModel
  BookstoreProject.Controllers.ManageController.EnableTwoFactorAuthentication*:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.ManageController.EnableTwoFactorAuthentication*
        name: EnableTwoFactorAuthentication
        nameWithType: ManageController.EnableTwoFactorAuthentication
        qualifiedName: BookstoreProject.Controllers.ManageController.EnableTwoFactorAuthentication
      VB:
      - id: BookstoreProject.Controllers.ManageController.EnableTwoFactorAuthentication*
        name: EnableTwoFactorAuthentication
        nameWithType: ManageController.EnableTwoFactorAuthentication
        qualifiedName: BookstoreProject.Controllers.ManageController.EnableTwoFactorAuthentication
    isDefinition: true
    commentId: Overload:BookstoreProject.Controllers.ManageController.EnableTwoFactorAuthentication
  BookstoreProject.Controllers.ManageController.DisableTwoFactorAuthentication*:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.ManageController.DisableTwoFactorAuthentication*
        name: DisableTwoFactorAuthentication
        nameWithType: ManageController.DisableTwoFactorAuthentication
        qualifiedName: BookstoreProject.Controllers.ManageController.DisableTwoFactorAuthentication
      VB:
      - id: BookstoreProject.Controllers.ManageController.DisableTwoFactorAuthentication*
        name: DisableTwoFactorAuthentication
        nameWithType: ManageController.DisableTwoFactorAuthentication
        qualifiedName: BookstoreProject.Controllers.ManageController.DisableTwoFactorAuthentication
    isDefinition: true
    commentId: Overload:BookstoreProject.Controllers.ManageController.DisableTwoFactorAuthentication
  BookstoreProject.Controllers.ManageController.VerifyPhoneNumber*:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.ManageController.VerifyPhoneNumber*
        name: VerifyPhoneNumber
        nameWithType: ManageController.VerifyPhoneNumber
        qualifiedName: BookstoreProject.Controllers.ManageController.VerifyPhoneNumber
      VB:
      - id: BookstoreProject.Controllers.ManageController.VerifyPhoneNumber*
        name: VerifyPhoneNumber
        nameWithType: ManageController.VerifyPhoneNumber
        qualifiedName: BookstoreProject.Controllers.ManageController.VerifyPhoneNumber
    isDefinition: true
    commentId: Overload:BookstoreProject.Controllers.ManageController.VerifyPhoneNumber
  BookstoreProject.Models.VerifyPhoneNumberViewModel:
    name:
      CSharp:
      - id: BookstoreProject.Models.VerifyPhoneNumberViewModel
        name: VerifyPhoneNumberViewModel
        nameWithType: VerifyPhoneNumberViewModel
        qualifiedName: BookstoreProject.Models.VerifyPhoneNumberViewModel
      VB:
      - id: BookstoreProject.Models.VerifyPhoneNumberViewModel
        name: VerifyPhoneNumberViewModel
        nameWithType: VerifyPhoneNumberViewModel
        qualifiedName: BookstoreProject.Models.VerifyPhoneNumberViewModel
    isDefinition: true
    parent: BookstoreProject.Models
    commentId: T:BookstoreProject.Models.VerifyPhoneNumberViewModel
  BookstoreProject.Controllers.ManageController.RemovePhoneNumber*:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.ManageController.RemovePhoneNumber*
        name: RemovePhoneNumber
        nameWithType: ManageController.RemovePhoneNumber
        qualifiedName: BookstoreProject.Controllers.ManageController.RemovePhoneNumber
      VB:
      - id: BookstoreProject.Controllers.ManageController.RemovePhoneNumber*
        name: RemovePhoneNumber
        nameWithType: ManageController.RemovePhoneNumber
        qualifiedName: BookstoreProject.Controllers.ManageController.RemovePhoneNumber
    isDefinition: true
    commentId: Overload:BookstoreProject.Controllers.ManageController.RemovePhoneNumber
  BookstoreProject.Controllers.ManageController.ChangePassword*:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.ManageController.ChangePassword*
        name: ChangePassword
        nameWithType: ManageController.ChangePassword
        qualifiedName: BookstoreProject.Controllers.ManageController.ChangePassword
      VB:
      - id: BookstoreProject.Controllers.ManageController.ChangePassword*
        name: ChangePassword
        nameWithType: ManageController.ChangePassword
        qualifiedName: BookstoreProject.Controllers.ManageController.ChangePassword
    isDefinition: true
    commentId: Overload:BookstoreProject.Controllers.ManageController.ChangePassword
  BookstoreProject.Models.ChangePasswordViewModel:
    name:
      CSharp:
      - id: BookstoreProject.Models.ChangePasswordViewModel
        name: ChangePasswordViewModel
        nameWithType: ChangePasswordViewModel
        qualifiedName: BookstoreProject.Models.ChangePasswordViewModel
      VB:
      - id: BookstoreProject.Models.ChangePasswordViewModel
        name: ChangePasswordViewModel
        nameWithType: ChangePasswordViewModel
        qualifiedName: BookstoreProject.Models.ChangePasswordViewModel
    isDefinition: true
    parent: BookstoreProject.Models
    commentId: T:BookstoreProject.Models.ChangePasswordViewModel
  BookstoreProject.Controllers.ManageController.SetPassword*:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.ManageController.SetPassword*
        name: SetPassword
        nameWithType: ManageController.SetPassword
        qualifiedName: BookstoreProject.Controllers.ManageController.SetPassword
      VB:
      - id: BookstoreProject.Controllers.ManageController.SetPassword*
        name: SetPassword
        nameWithType: ManageController.SetPassword
        qualifiedName: BookstoreProject.Controllers.ManageController.SetPassword
    isDefinition: true
    commentId: Overload:BookstoreProject.Controllers.ManageController.SetPassword
  BookstoreProject.Models.SetPasswordViewModel:
    name:
      CSharp:
      - id: BookstoreProject.Models.SetPasswordViewModel
        name: SetPasswordViewModel
        nameWithType: SetPasswordViewModel
        qualifiedName: BookstoreProject.Models.SetPasswordViewModel
      VB:
      - id: BookstoreProject.Models.SetPasswordViewModel
        name: SetPasswordViewModel
        nameWithType: SetPasswordViewModel
        qualifiedName: BookstoreProject.Models.SetPasswordViewModel
    isDefinition: true
    parent: BookstoreProject.Models
    commentId: T:BookstoreProject.Models.SetPasswordViewModel
  BookstoreProject.Controllers.ManageController.ManageLogins*:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.ManageController.ManageLogins*
        name: ManageLogins
        nameWithType: ManageController.ManageLogins
        qualifiedName: BookstoreProject.Controllers.ManageController.ManageLogins
      VB:
      - id: BookstoreProject.Controllers.ManageController.ManageLogins*
        name: ManageLogins
        nameWithType: ManageController.ManageLogins
        qualifiedName: BookstoreProject.Controllers.ManageController.ManageLogins
    isDefinition: true
    commentId: Overload:BookstoreProject.Controllers.ManageController.ManageLogins
  BookstoreProject.Controllers.ManageController.LinkLogin*:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.ManageController.LinkLogin*
        name: LinkLogin
        nameWithType: ManageController.LinkLogin
        qualifiedName: BookstoreProject.Controllers.ManageController.LinkLogin
      VB:
      - id: BookstoreProject.Controllers.ManageController.LinkLogin*
        name: LinkLogin
        nameWithType: ManageController.LinkLogin
        qualifiedName: BookstoreProject.Controllers.ManageController.LinkLogin
    isDefinition: true
    commentId: Overload:BookstoreProject.Controllers.ManageController.LinkLogin
  BookstoreProject.Controllers.ManageController.LinkLoginCallback*:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.ManageController.LinkLoginCallback*
        name: LinkLoginCallback
        nameWithType: ManageController.LinkLoginCallback
        qualifiedName: BookstoreProject.Controllers.ManageController.LinkLoginCallback
      VB:
      - id: BookstoreProject.Controllers.ManageController.LinkLoginCallback*
        name: LinkLoginCallback
        nameWithType: ManageController.LinkLoginCallback
        qualifiedName: BookstoreProject.Controllers.ManageController.LinkLoginCallback
    isDefinition: true
    commentId: Overload:BookstoreProject.Controllers.ManageController.LinkLoginCallback
  BookstoreProject.Controllers.ManageController.Dispose*:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.ManageController.Dispose*
        name: Dispose
        nameWithType: ManageController.Dispose
        qualifiedName: BookstoreProject.Controllers.ManageController.Dispose
      VB:
      - id: BookstoreProject.Controllers.ManageController.Dispose*
        name: Dispose
        nameWithType: ManageController.Dispose
        qualifiedName: BookstoreProject.Controllers.ManageController.Dispose
    isDefinition: true
    commentId: Overload:BookstoreProject.Controllers.ManageController.Dispose
  BookstoreProject.Controllers.ManageController:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.ManageController
        name: ManageController
        nameWithType: ManageController
        qualifiedName: BookstoreProject.Controllers.ManageController
      VB:
      - id: BookstoreProject.Controllers.ManageController
        name: ManageController
        nameWithType: ManageController
        qualifiedName: BookstoreProject.Controllers.ManageController
    isDefinition: true
    commentId: T:BookstoreProject.Controllers.ManageController
  BookstoreProject.Controllers:
    name:
      CSharp:
      - name: BookstoreProject.Controllers
        nameWithType: BookstoreProject.Controllers
        qualifiedName: BookstoreProject.Controllers
      VB:
      - name: BookstoreProject.Controllers
        nameWithType: BookstoreProject.Controllers
        qualifiedName: BookstoreProject.Controllers
    isDefinition: true
    commentId: N:BookstoreProject.Controllers
  BookstoreProject.Controllers.ManageController.ManageMessageId:
    name:
      CSharp:
      - id: BookstoreProject.Controllers.ManageController.ManageMessageId
        name: ManageController.ManageMessageId
        nameWithType: ManageController.ManageMessageId
        qualifiedName: BookstoreProject.Controllers.ManageController.ManageMessageId
      VB:
      - id: BookstoreProject.Controllers.ManageController.ManageMessageId
        name: ManageController.ManageMessageId
        nameWithType: ManageController.ManageMessageId
        qualifiedName: BookstoreProject.Controllers.ManageController.ManageMessageId
    isDefinition: true
    parent: BookstoreProject.Controllers
    commentId: T:BookstoreProject.Controllers.ManageController.ManageMessageId
  System.Data.Entity.Migrations:
    name:
      CSharp:
      - name: System.Data.Entity.Migrations
        nameWithType: System.Data.Entity.Migrations
        qualifiedName: System.Data.Entity.Migrations
        isExternal: true
      VB:
      - name: System.Data.Entity.Migrations
        nameWithType: System.Data.Entity.Migrations
        qualifiedName: System.Data.Entity.Migrations
    isDefinition: true
    commentId: N:System.Data.Entity.Migrations
  System.Data.Entity.Migrations.DbMigration:
    name:
      CSharp:
      - id: System.Data.Entity.Migrations.DbMigration
        name: DbMigration
        nameWithType: DbMigration
        qualifiedName: System.Data.Entity.Migrations.DbMigration
        isExternal: true
      VB:
      - id: System.Data.Entity.Migrations.DbMigration
        name: DbMigration
        nameWithType: DbMigration
        qualifiedName: System.Data.Entity.Migrations.DbMigration
        isExternal: true
    isDefinition: true
    parent: System.Data.Entity.Migrations
    commentId: T:System.Data.Entity.Migrations.DbMigration
  System.Data.Entity.Migrations.DbMigration.CreateStoredProcedure(System.String,System.String,System.Object):
    name:
      CSharp:
      - id: System.Data.Entity.Migrations.DbMigration.CreateStoredProcedure(System.String,System.String,System.Object)
        name: CreateStoredProcedure
        nameWithType: DbMigration.CreateStoredProcedure
        qualifiedName: System.Data.Entity.Migrations.DbMigration.CreateStoredProcedure
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.Migrations.DbMigration.CreateStoredProcedure(System.String,System.String,System.Object)
        name: CreateStoredProcedure
        nameWithType: DbMigration.CreateStoredProcedure
        qualifiedName: System.Data.Entity.Migrations.DbMigration.CreateStoredProcedure
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Data.Entity.Migrations.DbMigration
    commentId: M:System.Data.Entity.Migrations.DbMigration.CreateStoredProcedure(System.String,System.String,System.Object)
  ? System.Data.Entity.Migrations.DbMigration.CreateStoredProcedure``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ParameterBuilder,``0},System.String,System.Object)
  : name:
      CSharp:
      - id: System.Data.Entity.Migrations.DbMigration.CreateStoredProcedure``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ParameterBuilder,``0},System.String,System.Object)
        name: CreateStoredProcedure<TParameters>
        nameWithType: DbMigration.CreateStoredProcedure<TParameters>
        qualifiedName: System.Data.Entity.Migrations.DbMigration.CreateStoredProcedure<TParameters>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Data.Entity.Migrations.Builders.ParameterBuilder
        name: ParameterBuilder
        nameWithType: ParameterBuilder
        qualifiedName: System.Data.Entity.Migrations.Builders.ParameterBuilder
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TParameters
        nameWithType: TParameters
        qualifiedName: TParameters
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.Migrations.DbMigration.CreateStoredProcedure``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ParameterBuilder,``0},System.String,System.Object)
        name: CreateStoredProcedure(Of TParameters)
        nameWithType: DbMigration.CreateStoredProcedure(Of TParameters)
        qualifiedName: System.Data.Entity.Migrations.DbMigration.CreateStoredProcedure(Of TParameters)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Data.Entity.Migrations.Builders.ParameterBuilder
        name: ParameterBuilder
        nameWithType: ParameterBuilder
        qualifiedName: System.Data.Entity.Migrations.Builders.ParameterBuilder
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TParameters
        nameWithType: TParameters
        qualifiedName: TParameters
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Data.Entity.Migrations.DbMigration.CreateStoredProcedure``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ParameterBuilder,``0},System.String,System.Object)
  ? System.Data.Entity.Migrations.DbMigration.CreateStoredProcedure``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ParameterBuilder,{TParameters}},System.String,System.Object)
  : name:
      CSharp:
      - id: System.Data.Entity.Migrations.DbMigration.CreateStoredProcedure``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ParameterBuilder,``0},System.String,System.Object)
        name: CreateStoredProcedure<TParameters>
        nameWithType: DbMigration.CreateStoredProcedure<TParameters>
        qualifiedName: System.Data.Entity.Migrations.DbMigration.CreateStoredProcedure<TParameters>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Data.Entity.Migrations.Builders.ParameterBuilder
        name: ParameterBuilder
        nameWithType: ParameterBuilder
        qualifiedName: System.Data.Entity.Migrations.Builders.ParameterBuilder
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TParameters
        nameWithType: TParameters
        qualifiedName: TParameters
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.Migrations.DbMigration.CreateStoredProcedure``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ParameterBuilder,``0},System.String,System.Object)
        name: CreateStoredProcedure(Of TParameters)
        nameWithType: DbMigration.CreateStoredProcedure(Of TParameters)
        qualifiedName: System.Data.Entity.Migrations.DbMigration.CreateStoredProcedure(Of TParameters)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Data.Entity.Migrations.Builders.ParameterBuilder
        name: ParameterBuilder
        nameWithType: ParameterBuilder
        qualifiedName: System.Data.Entity.Migrations.Builders.ParameterBuilder
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TParameters
        nameWithType: TParameters
        qualifiedName: TParameters
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Data.Entity.Migrations.DbMigration.CreateStoredProcedure``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ParameterBuilder,``0},System.String,System.Object)
    parent: System.Data.Entity.Migrations.DbMigration
    commentId: M:System.Data.Entity.Migrations.DbMigration.CreateStoredProcedure``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ParameterBuilder,``0},System.String,System.Object)
  System.Data.Entity.Migrations.DbMigration.AlterStoredProcedure(System.String,System.String,System.Object):
    name:
      CSharp:
      - id: System.Data.Entity.Migrations.DbMigration.AlterStoredProcedure(System.String,System.String,System.Object)
        name: AlterStoredProcedure
        nameWithType: DbMigration.AlterStoredProcedure
        qualifiedName: System.Data.Entity.Migrations.DbMigration.AlterStoredProcedure
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.Migrations.DbMigration.AlterStoredProcedure(System.String,System.String,System.Object)
        name: AlterStoredProcedure
        nameWithType: DbMigration.AlterStoredProcedure
        qualifiedName: System.Data.Entity.Migrations.DbMigration.AlterStoredProcedure
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Data.Entity.Migrations.DbMigration
    commentId: M:System.Data.Entity.Migrations.DbMigration.AlterStoredProcedure(System.String,System.String,System.Object)
  ? System.Data.Entity.Migrations.DbMigration.AlterStoredProcedure``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ParameterBuilder,``0},System.String,System.Object)
  : name:
      CSharp:
      - id: System.Data.Entity.Migrations.DbMigration.AlterStoredProcedure``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ParameterBuilder,``0},System.String,System.Object)
        name: AlterStoredProcedure<TParameters>
        nameWithType: DbMigration.AlterStoredProcedure<TParameters>
        qualifiedName: System.Data.Entity.Migrations.DbMigration.AlterStoredProcedure<TParameters>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Data.Entity.Migrations.Builders.ParameterBuilder
        name: ParameterBuilder
        nameWithType: ParameterBuilder
        qualifiedName: System.Data.Entity.Migrations.Builders.ParameterBuilder
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TParameters
        nameWithType: TParameters
        qualifiedName: TParameters
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.Migrations.DbMigration.AlterStoredProcedure``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ParameterBuilder,``0},System.String,System.Object)
        name: AlterStoredProcedure(Of TParameters)
        nameWithType: DbMigration.AlterStoredProcedure(Of TParameters)
        qualifiedName: System.Data.Entity.Migrations.DbMigration.AlterStoredProcedure(Of TParameters)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Data.Entity.Migrations.Builders.ParameterBuilder
        name: ParameterBuilder
        nameWithType: ParameterBuilder
        qualifiedName: System.Data.Entity.Migrations.Builders.ParameterBuilder
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TParameters
        nameWithType: TParameters
        qualifiedName: TParameters
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Data.Entity.Migrations.DbMigration.AlterStoredProcedure``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ParameterBuilder,``0},System.String,System.Object)
  ? System.Data.Entity.Migrations.DbMigration.AlterStoredProcedure``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ParameterBuilder,{TParameters}},System.String,System.Object)
  : name:
      CSharp:
      - id: System.Data.Entity.Migrations.DbMigration.AlterStoredProcedure``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ParameterBuilder,``0},System.String,System.Object)
        name: AlterStoredProcedure<TParameters>
        nameWithType: DbMigration.AlterStoredProcedure<TParameters>
        qualifiedName: System.Data.Entity.Migrations.DbMigration.AlterStoredProcedure<TParameters>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Data.Entity.Migrations.Builders.ParameterBuilder
        name: ParameterBuilder
        nameWithType: ParameterBuilder
        qualifiedName: System.Data.Entity.Migrations.Builders.ParameterBuilder
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TParameters
        nameWithType: TParameters
        qualifiedName: TParameters
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.Migrations.DbMigration.AlterStoredProcedure``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ParameterBuilder,``0},System.String,System.Object)
        name: AlterStoredProcedure(Of TParameters)
        nameWithType: DbMigration.AlterStoredProcedure(Of TParameters)
        qualifiedName: System.Data.Entity.Migrations.DbMigration.AlterStoredProcedure(Of TParameters)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Data.Entity.Migrations.Builders.ParameterBuilder
        name: ParameterBuilder
        nameWithType: ParameterBuilder
        qualifiedName: System.Data.Entity.Migrations.Builders.ParameterBuilder
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TParameters
        nameWithType: TParameters
        qualifiedName: TParameters
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Data.Entity.Migrations.DbMigration.AlterStoredProcedure``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ParameterBuilder,``0},System.String,System.Object)
    parent: System.Data.Entity.Migrations.DbMigration
    commentId: M:System.Data.Entity.Migrations.DbMigration.AlterStoredProcedure``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ParameterBuilder,``0},System.String,System.Object)
  System.Data.Entity.Migrations.DbMigration.DropStoredProcedure(System.String,System.Object):
    name:
      CSharp:
      - id: System.Data.Entity.Migrations.DbMigration.DropStoredProcedure(System.String,System.Object)
        name: DropStoredProcedure
        nameWithType: DbMigration.DropStoredProcedure
        qualifiedName: System.Data.Entity.Migrations.DbMigration.DropStoredProcedure
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.Migrations.DbMigration.DropStoredProcedure(System.String,System.Object)
        name: DropStoredProcedure
        nameWithType: DbMigration.DropStoredProcedure
        qualifiedName: System.Data.Entity.Migrations.DbMigration.DropStoredProcedure
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Data.Entity.Migrations.DbMigration
    commentId: M:System.Data.Entity.Migrations.DbMigration.DropStoredProcedure(System.String,System.Object)
  ? System.Data.Entity.Migrations.DbMigration.CreateTable``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,``0},System.Object)
  : name:
      CSharp:
      - id: System.Data.Entity.Migrations.DbMigration.CreateTable``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,``0},System.Object)
        name: CreateTable<TColumns>
        nameWithType: DbMigration.CreateTable<TColumns>
        qualifiedName: System.Data.Entity.Migrations.DbMigration.CreateTable<TColumns>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Data.Entity.Migrations.Builders.ColumnBuilder
        name: ColumnBuilder
        nameWithType: ColumnBuilder
        qualifiedName: System.Data.Entity.Migrations.Builders.ColumnBuilder
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TColumns
        nameWithType: TColumns
        qualifiedName: TColumns
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.Migrations.DbMigration.CreateTable``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,``0},System.Object)
        name: CreateTable(Of TColumns)
        nameWithType: DbMigration.CreateTable(Of TColumns)
        qualifiedName: System.Data.Entity.Migrations.DbMigration.CreateTable(Of TColumns)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Data.Entity.Migrations.Builders.ColumnBuilder
        name: ColumnBuilder
        nameWithType: ColumnBuilder
        qualifiedName: System.Data.Entity.Migrations.Builders.ColumnBuilder
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TColumns
        nameWithType: TColumns
        qualifiedName: TColumns
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Data.Entity.Migrations.DbMigration.CreateTable``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,``0},System.Object)
  ? System.Data.Entity.Migrations.DbMigration.CreateTable``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,{TColumns}},System.Object)
  : name:
      CSharp:
      - id: System.Data.Entity.Migrations.DbMigration.CreateTable``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,``0},System.Object)
        name: CreateTable<TColumns>
        nameWithType: DbMigration.CreateTable<TColumns>
        qualifiedName: System.Data.Entity.Migrations.DbMigration.CreateTable<TColumns>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Data.Entity.Migrations.Builders.ColumnBuilder
        name: ColumnBuilder
        nameWithType: ColumnBuilder
        qualifiedName: System.Data.Entity.Migrations.Builders.ColumnBuilder
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TColumns
        nameWithType: TColumns
        qualifiedName: TColumns
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.Migrations.DbMigration.CreateTable``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,``0},System.Object)
        name: CreateTable(Of TColumns)
        nameWithType: DbMigration.CreateTable(Of TColumns)
        qualifiedName: System.Data.Entity.Migrations.DbMigration.CreateTable(Of TColumns)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Data.Entity.Migrations.Builders.ColumnBuilder
        name: ColumnBuilder
        nameWithType: ColumnBuilder
        qualifiedName: System.Data.Entity.Migrations.Builders.ColumnBuilder
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TColumns
        nameWithType: TColumns
        qualifiedName: TColumns
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Data.Entity.Migrations.DbMigration.CreateTable``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,``0},System.Object)
    parent: System.Data.Entity.Migrations.DbMigration
    commentId: M:System.Data.Entity.Migrations.DbMigration.CreateTable``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,``0},System.Object)
  ? System.Data.Entity.Migrations.DbMigration.CreateTable``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,``0},System.Collections.Generic.IDictionary{System.String,System.Object},System.Object)
  : name:
      CSharp:
      - id: System.Data.Entity.Migrations.DbMigration.CreateTable``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,``0},System.Collections.Generic.IDictionary{System.String,System.Object},System.Object)
        name: CreateTable<TColumns>
        nameWithType: DbMigration.CreateTable<TColumns>
        qualifiedName: System.Data.Entity.Migrations.DbMigration.CreateTable<TColumns>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Data.Entity.Migrations.Builders.ColumnBuilder
        name: ColumnBuilder
        nameWithType: ColumnBuilder
        qualifiedName: System.Data.Entity.Migrations.Builders.ColumnBuilder
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TColumns
        nameWithType: TColumns
        qualifiedName: TColumns
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.Generic.IDictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.Migrations.DbMigration.CreateTable``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,``0},System.Collections.Generic.IDictionary{System.String,System.Object},System.Object)
        name: CreateTable(Of TColumns)
        nameWithType: DbMigration.CreateTable(Of TColumns)
        qualifiedName: System.Data.Entity.Migrations.DbMigration.CreateTable(Of TColumns)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Data.Entity.Migrations.Builders.ColumnBuilder
        name: ColumnBuilder
        nameWithType: ColumnBuilder
        qualifiedName: System.Data.Entity.Migrations.Builders.ColumnBuilder
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TColumns
        nameWithType: TColumns
        qualifiedName: TColumns
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.Generic.IDictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Data.Entity.Migrations.DbMigration.CreateTable``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,``0},System.Collections.Generic.IDictionary{System.String,System.Object},System.Object)
  ? System.Data.Entity.Migrations.DbMigration.CreateTable``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,{TColumns}},System.Collections.Generic.IDictionary{System.String,System.Object},System.Object)
  : name:
      CSharp:
      - id: System.Data.Entity.Migrations.DbMigration.CreateTable``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,``0},System.Collections.Generic.IDictionary{System.String,System.Object},System.Object)
        name: CreateTable<TColumns>
        nameWithType: DbMigration.CreateTable<TColumns>
        qualifiedName: System.Data.Entity.Migrations.DbMigration.CreateTable<TColumns>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Data.Entity.Migrations.Builders.ColumnBuilder
        name: ColumnBuilder
        nameWithType: ColumnBuilder
        qualifiedName: System.Data.Entity.Migrations.Builders.ColumnBuilder
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TColumns
        nameWithType: TColumns
        qualifiedName: TColumns
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.Generic.IDictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.Migrations.DbMigration.CreateTable``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,``0},System.Collections.Generic.IDictionary{System.String,System.Object},System.Object)
        name: CreateTable(Of TColumns)
        nameWithType: DbMigration.CreateTable(Of TColumns)
        qualifiedName: System.Data.Entity.Migrations.DbMigration.CreateTable(Of TColumns)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Data.Entity.Migrations.Builders.ColumnBuilder
        name: ColumnBuilder
        nameWithType: ColumnBuilder
        qualifiedName: System.Data.Entity.Migrations.Builders.ColumnBuilder
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TColumns
        nameWithType: TColumns
        qualifiedName: TColumns
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.Generic.IDictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Data.Entity.Migrations.DbMigration.CreateTable``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,``0},System.Collections.Generic.IDictionary{System.String,System.Object},System.Object)
    parent: System.Data.Entity.Migrations.DbMigration
    commentId: M:System.Data.Entity.Migrations.DbMigration.CreateTable``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,``0},System.Collections.Generic.IDictionary{System.String,System.Object},System.Object)
  ? System.Data.Entity.Migrations.DbMigration.AlterTableAnnotations``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,``0},System.Collections.Generic.IDictionary{System.String,System.Data.Entity.Infrastructure.Annotations.AnnotationValues},System.Object)
  : name:
      CSharp:
      - id: System.Data.Entity.Migrations.DbMigration.AlterTableAnnotations``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,``0},System.Collections.Generic.IDictionary{System.String,System.Data.Entity.Infrastructure.Annotations.AnnotationValues},System.Object)
        name: AlterTableAnnotations<TColumns>
        nameWithType: DbMigration.AlterTableAnnotations<TColumns>
        qualifiedName: System.Data.Entity.Migrations.DbMigration.AlterTableAnnotations<TColumns>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Data.Entity.Migrations.Builders.ColumnBuilder
        name: ColumnBuilder
        nameWithType: ColumnBuilder
        qualifiedName: System.Data.Entity.Migrations.Builders.ColumnBuilder
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TColumns
        nameWithType: TColumns
        qualifiedName: TColumns
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.Generic.IDictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Data.Entity.Infrastructure.Annotations.AnnotationValues
        name: AnnotationValues
        nameWithType: AnnotationValues
        qualifiedName: System.Data.Entity.Infrastructure.Annotations.AnnotationValues
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.Migrations.DbMigration.AlterTableAnnotations``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,``0},System.Collections.Generic.IDictionary{System.String,System.Data.Entity.Infrastructure.Annotations.AnnotationValues},System.Object)
        name: AlterTableAnnotations(Of TColumns)
        nameWithType: DbMigration.AlterTableAnnotations(Of TColumns)
        qualifiedName: System.Data.Entity.Migrations.DbMigration.AlterTableAnnotations(Of TColumns)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Data.Entity.Migrations.Builders.ColumnBuilder
        name: ColumnBuilder
        nameWithType: ColumnBuilder
        qualifiedName: System.Data.Entity.Migrations.Builders.ColumnBuilder
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TColumns
        nameWithType: TColumns
        qualifiedName: TColumns
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.Generic.IDictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Data.Entity.Infrastructure.Annotations.AnnotationValues
        name: AnnotationValues
        nameWithType: AnnotationValues
        qualifiedName: System.Data.Entity.Infrastructure.Annotations.AnnotationValues
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Data.Entity.Migrations.DbMigration.AlterTableAnnotations``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,``0},System.Collections.Generic.IDictionary{System.String,System.Data.Entity.Infrastructure.Annotations.AnnotationValues},System.Object)
  ? System.Data.Entity.Migrations.DbMigration.AlterTableAnnotations``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,{TColumns}},System.Collections.Generic.IDictionary{System.String,System.Data.Entity.Infrastructure.Annotations.AnnotationValues},System.Object)
  : name:
      CSharp:
      - id: System.Data.Entity.Migrations.DbMigration.AlterTableAnnotations``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,``0},System.Collections.Generic.IDictionary{System.String,System.Data.Entity.Infrastructure.Annotations.AnnotationValues},System.Object)
        name: AlterTableAnnotations<TColumns>
        nameWithType: DbMigration.AlterTableAnnotations<TColumns>
        qualifiedName: System.Data.Entity.Migrations.DbMigration.AlterTableAnnotations<TColumns>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Data.Entity.Migrations.Builders.ColumnBuilder
        name: ColumnBuilder
        nameWithType: ColumnBuilder
        qualifiedName: System.Data.Entity.Migrations.Builders.ColumnBuilder
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TColumns
        nameWithType: TColumns
        qualifiedName: TColumns
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.Generic.IDictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Data.Entity.Infrastructure.Annotations.AnnotationValues
        name: AnnotationValues
        nameWithType: AnnotationValues
        qualifiedName: System.Data.Entity.Infrastructure.Annotations.AnnotationValues
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.Migrations.DbMigration.AlterTableAnnotations``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,``0},System.Collections.Generic.IDictionary{System.String,System.Data.Entity.Infrastructure.Annotations.AnnotationValues},System.Object)
        name: AlterTableAnnotations(Of TColumns)
        nameWithType: DbMigration.AlterTableAnnotations(Of TColumns)
        qualifiedName: System.Data.Entity.Migrations.DbMigration.AlterTableAnnotations(Of TColumns)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Data.Entity.Migrations.Builders.ColumnBuilder
        name: ColumnBuilder
        nameWithType: ColumnBuilder
        qualifiedName: System.Data.Entity.Migrations.Builders.ColumnBuilder
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TColumns
        nameWithType: TColumns
        qualifiedName: TColumns
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.Generic.IDictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Data.Entity.Infrastructure.Annotations.AnnotationValues
        name: AnnotationValues
        nameWithType: AnnotationValues
        qualifiedName: System.Data.Entity.Infrastructure.Annotations.AnnotationValues
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Data.Entity.Migrations.DbMigration.AlterTableAnnotations``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,``0},System.Collections.Generic.IDictionary{System.String,System.Data.Entity.Infrastructure.Annotations.AnnotationValues},System.Object)
    parent: System.Data.Entity.Migrations.DbMigration
    commentId: M:System.Data.Entity.Migrations.DbMigration.AlterTableAnnotations``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,``0},System.Collections.Generic.IDictionary{System.String,System.Data.Entity.Infrastructure.Annotations.AnnotationValues},System.Object)
  ? System.Data.Entity.Migrations.DbMigration.AddForeignKey(System.String,System.String,System.String,System.String,System.Boolean,System.String,System.Object)
  : name:
      CSharp:
      - id: System.Data.Entity.Migrations.DbMigration.AddForeignKey(System.String,System.String,System.String,System.String,System.Boolean,System.String,System.Object)
        name: AddForeignKey
        nameWithType: DbMigration.AddForeignKey
        qualifiedName: System.Data.Entity.Migrations.DbMigration.AddForeignKey
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.Migrations.DbMigration.AddForeignKey(System.String,System.String,System.String,System.String,System.Boolean,System.String,System.Object)
        name: AddForeignKey
        nameWithType: DbMigration.AddForeignKey
        qualifiedName: System.Data.Entity.Migrations.DbMigration.AddForeignKey
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Data.Entity.Migrations.DbMigration
    commentId: M:System.Data.Entity.Migrations.DbMigration.AddForeignKey(System.String,System.String,System.String,System.String,System.Boolean,System.String,System.Object)
  ? System.Data.Entity.Migrations.DbMigration.AddForeignKey(System.String,System.String[],System.String,System.String[],System.Boolean,System.String,System.Object)
  : name:
      CSharp:
      - id: System.Data.Entity.Migrations.DbMigration.AddForeignKey(System.String,System.String[],System.String,System.String[],System.Boolean,System.String,System.Object)
        name: AddForeignKey
        nameWithType: DbMigration.AddForeignKey
        qualifiedName: System.Data.Entity.Migrations.DbMigration.AddForeignKey
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.Migrations.DbMigration.AddForeignKey(System.String,System.String[],System.String,System.String[],System.Boolean,System.String,System.Object)
        name: AddForeignKey
        nameWithType: DbMigration.AddForeignKey
        qualifiedName: System.Data.Entity.Migrations.DbMigration.AddForeignKey
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Data.Entity.Migrations.DbMigration
    commentId: M:System.Data.Entity.Migrations.DbMigration.AddForeignKey(System.String,System.String[],System.String,System.String[],System.Boolean,System.String,System.Object)
  System.Data.Entity.Migrations.DbMigration.DropForeignKey(System.String,System.String,System.Object):
    name:
      CSharp:
      - id: System.Data.Entity.Migrations.DbMigration.DropForeignKey(System.String,System.String,System.Object)
        name: DropForeignKey
        nameWithType: DbMigration.DropForeignKey
        qualifiedName: System.Data.Entity.Migrations.DbMigration.DropForeignKey
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.Migrations.DbMigration.DropForeignKey(System.String,System.String,System.Object)
        name: DropForeignKey
        nameWithType: DbMigration.DropForeignKey
        qualifiedName: System.Data.Entity.Migrations.DbMigration.DropForeignKey
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Data.Entity.Migrations.DbMigration
    commentId: M:System.Data.Entity.Migrations.DbMigration.DropForeignKey(System.String,System.String,System.Object)
  System.Data.Entity.Migrations.DbMigration.DropForeignKey(System.String,System.String,System.String,System.Object):
    name:
      CSharp:
      - id: System.Data.Entity.Migrations.DbMigration.DropForeignKey(System.String,System.String,System.String,System.Object)
        name: DropForeignKey
        nameWithType: DbMigration.DropForeignKey
        qualifiedName: System.Data.Entity.Migrations.DbMigration.DropForeignKey
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.Migrations.DbMigration.DropForeignKey(System.String,System.String,System.String,System.Object)
        name: DropForeignKey
        nameWithType: DbMigration.DropForeignKey
        qualifiedName: System.Data.Entity.Migrations.DbMigration.DropForeignKey
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Data.Entity.Migrations.DbMigration
    commentId: M:System.Data.Entity.Migrations.DbMigration.DropForeignKey(System.String,System.String,System.String,System.Object)
  System.Data.Entity.Migrations.DbMigration.DropForeignKey(System.String,System.String,System.String,System.String,System.Object):
    name:
      CSharp:
      - id: System.Data.Entity.Migrations.DbMigration.DropForeignKey(System.String,System.String,System.String,System.String,System.Object)
        name: DropForeignKey
        nameWithType: DbMigration.DropForeignKey
        qualifiedName: System.Data.Entity.Migrations.DbMigration.DropForeignKey
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.Migrations.DbMigration.DropForeignKey(System.String,System.String,System.String,System.String,System.Object)
        name: DropForeignKey
        nameWithType: DbMigration.DropForeignKey
        qualifiedName: System.Data.Entity.Migrations.DbMigration.DropForeignKey
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Data.Entity.Migrations.DbMigration
    commentId: M:System.Data.Entity.Migrations.DbMigration.DropForeignKey(System.String,System.String,System.String,System.String,System.Object)
  System.Data.Entity.Migrations.DbMigration.DropForeignKey(System.String,System.String[],System.String,System.Object):
    name:
      CSharp:
      - id: System.Data.Entity.Migrations.DbMigration.DropForeignKey(System.String,System.String[],System.String,System.Object)
        name: DropForeignKey
        nameWithType: DbMigration.DropForeignKey
        qualifiedName: System.Data.Entity.Migrations.DbMigration.DropForeignKey
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.Migrations.DbMigration.DropForeignKey(System.String,System.String[],System.String,System.Object)
        name: DropForeignKey
        nameWithType: DbMigration.DropForeignKey
        qualifiedName: System.Data.Entity.Migrations.DbMigration.DropForeignKey
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Data.Entity.Migrations.DbMigration
    commentId: M:System.Data.Entity.Migrations.DbMigration.DropForeignKey(System.String,System.String[],System.String,System.Object)
  System.Data.Entity.Migrations.DbMigration.DropTable(System.String,System.Object):
    name:
      CSharp:
      - id: System.Data.Entity.Migrations.DbMigration.DropTable(System.String,System.Object)
        name: DropTable
        nameWithType: DbMigration.DropTable
        qualifiedName: System.Data.Entity.Migrations.DbMigration.DropTable
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.Migrations.DbMigration.DropTable(System.String,System.Object)
        name: DropTable
        nameWithType: DbMigration.DropTable
        qualifiedName: System.Data.Entity.Migrations.DbMigration.DropTable
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Data.Entity.Migrations.DbMigration
    commentId: M:System.Data.Entity.Migrations.DbMigration.DropTable(System.String,System.Object)
  ? System.Data.Entity.Migrations.DbMigration.DropTable(System.String,System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IDictionary{System.String,System.Object}},System.Object)
  : name:
      CSharp:
      - id: System.Data.Entity.Migrations.DbMigration.DropTable(System.String,System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IDictionary{System.String,System.Object}},System.Object)
        name: DropTable
        nameWithType: DbMigration.DropTable
        qualifiedName: System.Data.Entity.Migrations.DbMigration.DropTable
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.Generic.IDictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.Generic.IDictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.Migrations.DbMigration.DropTable(System.String,System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IDictionary{System.String,System.Object}},System.Object)
        name: DropTable
        nameWithType: DbMigration.DropTable
        qualifiedName: System.Data.Entity.Migrations.DbMigration.DropTable
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.Generic.IDictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.Generic.IDictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Data.Entity.Migrations.DbMigration
    commentId: M:System.Data.Entity.Migrations.DbMigration.DropTable(System.String,System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IDictionary{System.String,System.Object}},System.Object)
  ? System.Data.Entity.Migrations.DbMigration.DropTable(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Object)
  : name:
      CSharp:
      - id: System.Data.Entity.Migrations.DbMigration.DropTable(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Object)
        name: DropTable
        nameWithType: DbMigration.DropTable
        qualifiedName: System.Data.Entity.Migrations.DbMigration.DropTable
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.Generic.IDictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.Migrations.DbMigration.DropTable(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Object)
        name: DropTable
        nameWithType: DbMigration.DropTable
        qualifiedName: System.Data.Entity.Migrations.DbMigration.DropTable
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.Generic.IDictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Data.Entity.Migrations.DbMigration
    commentId: M:System.Data.Entity.Migrations.DbMigration.DropTable(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Object)
  ? System.Data.Entity.Migrations.DbMigration.DropTable(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IDictionary{System.String,System.Object}},System.Object)
  : name:
      CSharp:
      - id: System.Data.Entity.Migrations.DbMigration.DropTable(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IDictionary{System.String,System.Object}},System.Object)
        name: DropTable
        nameWithType: DbMigration.DropTable
        qualifiedName: System.Data.Entity.Migrations.DbMigration.DropTable
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.Generic.IDictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.Generic.IDictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.Generic.IDictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.Migrations.DbMigration.DropTable(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IDictionary{System.String,System.Object}},System.Object)
        name: DropTable
        nameWithType: DbMigration.DropTable
        qualifiedName: System.Data.Entity.Migrations.DbMigration.DropTable
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.Generic.IDictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.Generic.IDictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.Generic.IDictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Data.Entity.Migrations.DbMigration
    commentId: M:System.Data.Entity.Migrations.DbMigration.DropTable(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IDictionary{System.String,System.Object}},System.Object)
  System.Data.Entity.Migrations.DbMigration.MoveTable(System.String,System.String,System.Object):
    name:
      CSharp:
      - id: System.Data.Entity.Migrations.DbMigration.MoveTable(System.String,System.String,System.Object)
        name: MoveTable
        nameWithType: DbMigration.MoveTable
        qualifiedName: System.Data.Entity.Migrations.DbMigration.MoveTable
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.Migrations.DbMigration.MoveTable(System.String,System.String,System.Object)
        name: MoveTable
        nameWithType: DbMigration.MoveTable
        qualifiedName: System.Data.Entity.Migrations.DbMigration.MoveTable
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Data.Entity.Migrations.DbMigration
    commentId: M:System.Data.Entity.Migrations.DbMigration.MoveTable(System.String,System.String,System.Object)
  System.Data.Entity.Migrations.DbMigration.MoveStoredProcedure(System.String,System.String,System.Object):
    name:
      CSharp:
      - id: System.Data.Entity.Migrations.DbMigration.MoveStoredProcedure(System.String,System.String,System.Object)
        name: MoveStoredProcedure
        nameWithType: DbMigration.MoveStoredProcedure
        qualifiedName: System.Data.Entity.Migrations.DbMigration.MoveStoredProcedure
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.Migrations.DbMigration.MoveStoredProcedure(System.String,System.String,System.Object)
        name: MoveStoredProcedure
        nameWithType: DbMigration.MoveStoredProcedure
        qualifiedName: System.Data.Entity.Migrations.DbMigration.MoveStoredProcedure
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Data.Entity.Migrations.DbMigration
    commentId: M:System.Data.Entity.Migrations.DbMigration.MoveStoredProcedure(System.String,System.String,System.Object)
  System.Data.Entity.Migrations.DbMigration.RenameTable(System.String,System.String,System.Object):
    name:
      CSharp:
      - id: System.Data.Entity.Migrations.DbMigration.RenameTable(System.String,System.String,System.Object)
        name: RenameTable
        nameWithType: DbMigration.RenameTable
        qualifiedName: System.Data.Entity.Migrations.DbMigration.RenameTable
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.Migrations.DbMigration.RenameTable(System.String,System.String,System.Object)
        name: RenameTable
        nameWithType: DbMigration.RenameTable
        qualifiedName: System.Data.Entity.Migrations.DbMigration.RenameTable
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Data.Entity.Migrations.DbMigration
    commentId: M:System.Data.Entity.Migrations.DbMigration.RenameTable(System.String,System.String,System.Object)
  System.Data.Entity.Migrations.DbMigration.RenameStoredProcedure(System.String,System.String,System.Object):
    name:
      CSharp:
      - id: System.Data.Entity.Migrations.DbMigration.RenameStoredProcedure(System.String,System.String,System.Object)
        name: RenameStoredProcedure
        nameWithType: DbMigration.RenameStoredProcedure
        qualifiedName: System.Data.Entity.Migrations.DbMigration.RenameStoredProcedure
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.Migrations.DbMigration.RenameStoredProcedure(System.String,System.String,System.Object)
        name: RenameStoredProcedure
        nameWithType: DbMigration.RenameStoredProcedure
        qualifiedName: System.Data.Entity.Migrations.DbMigration.RenameStoredProcedure
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Data.Entity.Migrations.DbMigration
    commentId: M:System.Data.Entity.Migrations.DbMigration.RenameStoredProcedure(System.String,System.String,System.Object)
  System.Data.Entity.Migrations.DbMigration.RenameColumn(System.String,System.String,System.String,System.Object):
    name:
      CSharp:
      - id: System.Data.Entity.Migrations.DbMigration.RenameColumn(System.String,System.String,System.String,System.Object)
        name: RenameColumn
        nameWithType: DbMigration.RenameColumn
        qualifiedName: System.Data.Entity.Migrations.DbMigration.RenameColumn
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.Migrations.DbMigration.RenameColumn(System.String,System.String,System.String,System.Object)
        name: RenameColumn
        nameWithType: DbMigration.RenameColumn
        qualifiedName: System.Data.Entity.Migrations.DbMigration.RenameColumn
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Data.Entity.Migrations.DbMigration
    commentId: M:System.Data.Entity.Migrations.DbMigration.RenameColumn(System.String,System.String,System.String,System.Object)
  ? System.Data.Entity.Migrations.DbMigration.AddColumn(System.String,System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,System.Data.Entity.Migrations.Model.ColumnModel},System.Object)
  : name:
      CSharp:
      - id: System.Data.Entity.Migrations.DbMigration.AddColumn(System.String,System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,System.Data.Entity.Migrations.Model.ColumnModel},System.Object)
        name: AddColumn
        nameWithType: DbMigration.AddColumn
        qualifiedName: System.Data.Entity.Migrations.DbMigration.AddColumn
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Data.Entity.Migrations.Builders.ColumnBuilder
        name: ColumnBuilder
        nameWithType: ColumnBuilder
        qualifiedName: System.Data.Entity.Migrations.Builders.ColumnBuilder
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Data.Entity.Migrations.Model.ColumnModel
        name: ColumnModel
        nameWithType: ColumnModel
        qualifiedName: System.Data.Entity.Migrations.Model.ColumnModel
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.Migrations.DbMigration.AddColumn(System.String,System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,System.Data.Entity.Migrations.Model.ColumnModel},System.Object)
        name: AddColumn
        nameWithType: DbMigration.AddColumn
        qualifiedName: System.Data.Entity.Migrations.DbMigration.AddColumn
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Data.Entity.Migrations.Builders.ColumnBuilder
        name: ColumnBuilder
        nameWithType: ColumnBuilder
        qualifiedName: System.Data.Entity.Migrations.Builders.ColumnBuilder
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Data.Entity.Migrations.Model.ColumnModel
        name: ColumnModel
        nameWithType: ColumnModel
        qualifiedName: System.Data.Entity.Migrations.Model.ColumnModel
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Data.Entity.Migrations.DbMigration
    commentId: M:System.Data.Entity.Migrations.DbMigration.AddColumn(System.String,System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,System.Data.Entity.Migrations.Model.ColumnModel},System.Object)
  System.Data.Entity.Migrations.DbMigration.DropColumn(System.String,System.String,System.Object):
    name:
      CSharp:
      - id: System.Data.Entity.Migrations.DbMigration.DropColumn(System.String,System.String,System.Object)
        name: DropColumn
        nameWithType: DbMigration.DropColumn
        qualifiedName: System.Data.Entity.Migrations.DbMigration.DropColumn
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.Migrations.DbMigration.DropColumn(System.String,System.String,System.Object)
        name: DropColumn
        nameWithType: DbMigration.DropColumn
        qualifiedName: System.Data.Entity.Migrations.DbMigration.DropColumn
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Data.Entity.Migrations.DbMigration
    commentId: M:System.Data.Entity.Migrations.DbMigration.DropColumn(System.String,System.String,System.Object)
  ? System.Data.Entity.Migrations.DbMigration.DropColumn(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Object)
  : name:
      CSharp:
      - id: System.Data.Entity.Migrations.DbMigration.DropColumn(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Object)
        name: DropColumn
        nameWithType: DbMigration.DropColumn
        qualifiedName: System.Data.Entity.Migrations.DbMigration.DropColumn
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.Generic.IDictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.Migrations.DbMigration.DropColumn(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Object)
        name: DropColumn
        nameWithType: DbMigration.DropColumn
        qualifiedName: System.Data.Entity.Migrations.DbMigration.DropColumn
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.Generic.IDictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Data.Entity.Migrations.DbMigration
    commentId: M:System.Data.Entity.Migrations.DbMigration.DropColumn(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Object)
  ? System.Data.Entity.Migrations.DbMigration.AlterColumn(System.String,System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,System.Data.Entity.Migrations.Model.ColumnModel},System.Object)
  : name:
      CSharp:
      - id: System.Data.Entity.Migrations.DbMigration.AlterColumn(System.String,System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,System.Data.Entity.Migrations.Model.ColumnModel},System.Object)
        name: AlterColumn
        nameWithType: DbMigration.AlterColumn
        qualifiedName: System.Data.Entity.Migrations.DbMigration.AlterColumn
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Data.Entity.Migrations.Builders.ColumnBuilder
        name: ColumnBuilder
        nameWithType: ColumnBuilder
        qualifiedName: System.Data.Entity.Migrations.Builders.ColumnBuilder
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Data.Entity.Migrations.Model.ColumnModel
        name: ColumnModel
        nameWithType: ColumnModel
        qualifiedName: System.Data.Entity.Migrations.Model.ColumnModel
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.Migrations.DbMigration.AlterColumn(System.String,System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,System.Data.Entity.Migrations.Model.ColumnModel},System.Object)
        name: AlterColumn
        nameWithType: DbMigration.AlterColumn
        qualifiedName: System.Data.Entity.Migrations.DbMigration.AlterColumn
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Data.Entity.Migrations.Builders.ColumnBuilder
        name: ColumnBuilder
        nameWithType: ColumnBuilder
        qualifiedName: System.Data.Entity.Migrations.Builders.ColumnBuilder
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Data.Entity.Migrations.Model.ColumnModel
        name: ColumnModel
        nameWithType: ColumnModel
        qualifiedName: System.Data.Entity.Migrations.Model.ColumnModel
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Data.Entity.Migrations.DbMigration
    commentId: M:System.Data.Entity.Migrations.DbMigration.AlterColumn(System.String,System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,System.Data.Entity.Migrations.Model.ColumnModel},System.Object)
  System.Data.Entity.Migrations.DbMigration.AddPrimaryKey(System.String,System.String,System.String,System.Boolean,System.Object):
    name:
      CSharp:
      - id: System.Data.Entity.Migrations.DbMigration.AddPrimaryKey(System.String,System.String,System.String,System.Boolean,System.Object)
        name: AddPrimaryKey
        nameWithType: DbMigration.AddPrimaryKey
        qualifiedName: System.Data.Entity.Migrations.DbMigration.AddPrimaryKey
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.Migrations.DbMigration.AddPrimaryKey(System.String,System.String,System.String,System.Boolean,System.Object)
        name: AddPrimaryKey
        nameWithType: DbMigration.AddPrimaryKey
        qualifiedName: System.Data.Entity.Migrations.DbMigration.AddPrimaryKey
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Data.Entity.Migrations.DbMigration
    commentId: M:System.Data.Entity.Migrations.DbMigration.AddPrimaryKey(System.String,System.String,System.String,System.Boolean,System.Object)
  ? System.Data.Entity.Migrations.DbMigration.AddPrimaryKey(System.String,System.String[],System.String,System.Boolean,System.Object)
  : name:
      CSharp:
      - id: System.Data.Entity.Migrations.DbMigration.AddPrimaryKey(System.String,System.String[],System.String,System.Boolean,System.Object)
        name: AddPrimaryKey
        nameWithType: DbMigration.AddPrimaryKey
        qualifiedName: System.Data.Entity.Migrations.DbMigration.AddPrimaryKey
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.Migrations.DbMigration.AddPrimaryKey(System.String,System.String[],System.String,System.Boolean,System.Object)
        name: AddPrimaryKey
        nameWithType: DbMigration.AddPrimaryKey
        qualifiedName: System.Data.Entity.Migrations.DbMigration.AddPrimaryKey
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Data.Entity.Migrations.DbMigration
    commentId: M:System.Data.Entity.Migrations.DbMigration.AddPrimaryKey(System.String,System.String[],System.String,System.Boolean,System.Object)
  System.Data.Entity.Migrations.DbMigration.DropPrimaryKey(System.String,System.String,System.Object):
    name:
      CSharp:
      - id: System.Data.Entity.Migrations.DbMigration.DropPrimaryKey(System.String,System.String,System.Object)
        name: DropPrimaryKey
        nameWithType: DbMigration.DropPrimaryKey
        qualifiedName: System.Data.Entity.Migrations.DbMigration.DropPrimaryKey
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.Migrations.DbMigration.DropPrimaryKey(System.String,System.String,System.Object)
        name: DropPrimaryKey
        nameWithType: DbMigration.DropPrimaryKey
        qualifiedName: System.Data.Entity.Migrations.DbMigration.DropPrimaryKey
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Data.Entity.Migrations.DbMigration
    commentId: M:System.Data.Entity.Migrations.DbMigration.DropPrimaryKey(System.String,System.String,System.Object)
  System.Data.Entity.Migrations.DbMigration.DropPrimaryKey(System.String,System.Object):
    name:
      CSharp:
      - id: System.Data.Entity.Migrations.DbMigration.DropPrimaryKey(System.String,System.Object)
        name: DropPrimaryKey
        nameWithType: DbMigration.DropPrimaryKey
        qualifiedName: System.Data.Entity.Migrations.DbMigration.DropPrimaryKey
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.Migrations.DbMigration.DropPrimaryKey(System.String,System.Object)
        name: DropPrimaryKey
        nameWithType: DbMigration.DropPrimaryKey
        qualifiedName: System.Data.Entity.Migrations.DbMigration.DropPrimaryKey
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Data.Entity.Migrations.DbMigration
    commentId: M:System.Data.Entity.Migrations.DbMigration.DropPrimaryKey(System.String,System.Object)
  ? System.Data.Entity.Migrations.DbMigration.CreateIndex(System.String,System.String,System.Boolean,System.String,System.Boolean,System.Object)
  : name:
      CSharp:
      - id: System.Data.Entity.Migrations.DbMigration.CreateIndex(System.String,System.String,System.Boolean,System.String,System.Boolean,System.Object)
        name: CreateIndex
        nameWithType: DbMigration.CreateIndex
        qualifiedName: System.Data.Entity.Migrations.DbMigration.CreateIndex
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.Migrations.DbMigration.CreateIndex(System.String,System.String,System.Boolean,System.String,System.Boolean,System.Object)
        name: CreateIndex
        nameWithType: DbMigration.CreateIndex
        qualifiedName: System.Data.Entity.Migrations.DbMigration.CreateIndex
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Data.Entity.Migrations.DbMigration
    commentId: M:System.Data.Entity.Migrations.DbMigration.CreateIndex(System.String,System.String,System.Boolean,System.String,System.Boolean,System.Object)
  ? System.Data.Entity.Migrations.DbMigration.CreateIndex(System.String,System.String[],System.Boolean,System.String,System.Boolean,System.Object)
  : name:
      CSharp:
      - id: System.Data.Entity.Migrations.DbMigration.CreateIndex(System.String,System.String[],System.Boolean,System.String,System.Boolean,System.Object)
        name: CreateIndex
        nameWithType: DbMigration.CreateIndex
        qualifiedName: System.Data.Entity.Migrations.DbMigration.CreateIndex
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.Migrations.DbMigration.CreateIndex(System.String,System.String[],System.Boolean,System.String,System.Boolean,System.Object)
        name: CreateIndex
        nameWithType: DbMigration.CreateIndex
        qualifiedName: System.Data.Entity.Migrations.DbMigration.CreateIndex
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Data.Entity.Migrations.DbMigration
    commentId: M:System.Data.Entity.Migrations.DbMigration.CreateIndex(System.String,System.String[],System.Boolean,System.String,System.Boolean,System.Object)
  System.Data.Entity.Migrations.DbMigration.DropIndex(System.String,System.String,System.Object):
    name:
      CSharp:
      - id: System.Data.Entity.Migrations.DbMigration.DropIndex(System.String,System.String,System.Object)
        name: DropIndex
        nameWithType: DbMigration.DropIndex
        qualifiedName: System.Data.Entity.Migrations.DbMigration.DropIndex
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.Migrations.DbMigration.DropIndex(System.String,System.String,System.Object)
        name: DropIndex
        nameWithType: DbMigration.DropIndex
        qualifiedName: System.Data.Entity.Migrations.DbMigration.DropIndex
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Data.Entity.Migrations.DbMigration
    commentId: M:System.Data.Entity.Migrations.DbMigration.DropIndex(System.String,System.String,System.Object)
  System.Data.Entity.Migrations.DbMigration.DropIndex(System.String,System.String[],System.Object):
    name:
      CSharp:
      - id: System.Data.Entity.Migrations.DbMigration.DropIndex(System.String,System.String[],System.Object)
        name: DropIndex
        nameWithType: DbMigration.DropIndex
        qualifiedName: System.Data.Entity.Migrations.DbMigration.DropIndex
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.Migrations.DbMigration.DropIndex(System.String,System.String[],System.Object)
        name: DropIndex
        nameWithType: DbMigration.DropIndex
        qualifiedName: System.Data.Entity.Migrations.DbMigration.DropIndex
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Data.Entity.Migrations.DbMigration
    commentId: M:System.Data.Entity.Migrations.DbMigration.DropIndex(System.String,System.String[],System.Object)
  System.Data.Entity.Migrations.DbMigration.RenameIndex(System.String,System.String,System.String,System.Object):
    name:
      CSharp:
      - id: System.Data.Entity.Migrations.DbMigration.RenameIndex(System.String,System.String,System.String,System.Object)
        name: RenameIndex
        nameWithType: DbMigration.RenameIndex
        qualifiedName: System.Data.Entity.Migrations.DbMigration.RenameIndex
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.Migrations.DbMigration.RenameIndex(System.String,System.String,System.String,System.Object)
        name: RenameIndex
        nameWithType: DbMigration.RenameIndex
        qualifiedName: System.Data.Entity.Migrations.DbMigration.RenameIndex
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Data.Entity.Migrations.DbMigration
    commentId: M:System.Data.Entity.Migrations.DbMigration.RenameIndex(System.String,System.String,System.String,System.Object)
  System.Data.Entity.Migrations.DbMigration.Sql(System.String,System.Boolean,System.Object):
    name:
      CSharp:
      - id: System.Data.Entity.Migrations.DbMigration.Sql(System.String,System.Boolean,System.Object)
        name: Sql
        nameWithType: DbMigration.Sql
        qualifiedName: System.Data.Entity.Migrations.DbMigration.Sql
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.Migrations.DbMigration.Sql(System.String,System.Boolean,System.Object)
        name: Sql
        nameWithType: DbMigration.Sql
        qualifiedName: System.Data.Entity.Migrations.DbMigration.Sql
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Data.Entity.Migrations.DbMigration
    commentId: M:System.Data.Entity.Migrations.DbMigration.Sql(System.String,System.Boolean,System.Object)
  System.Data.Entity.Migrations.DbMigration.SqlFile(System.String,System.Boolean,System.Object):
    name:
      CSharp:
      - id: System.Data.Entity.Migrations.DbMigration.SqlFile(System.String,System.Boolean,System.Object)
        name: SqlFile
        nameWithType: DbMigration.SqlFile
        qualifiedName: System.Data.Entity.Migrations.DbMigration.SqlFile
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.Migrations.DbMigration.SqlFile(System.String,System.Boolean,System.Object)
        name: SqlFile
        nameWithType: DbMigration.SqlFile
        qualifiedName: System.Data.Entity.Migrations.DbMigration.SqlFile
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Data.Entity.Migrations.DbMigration
    commentId: M:System.Data.Entity.Migrations.DbMigration.SqlFile(System.String,System.Boolean,System.Object)
  System.Data.Entity.Migrations.DbMigration.SqlResource(System.String,System.Reflection.Assembly,System.Boolean,System.Object):
    name:
      CSharp:
      - id: System.Data.Entity.Migrations.DbMigration.SqlResource(System.String,System.Reflection.Assembly,System.Boolean,System.Object)
        name: SqlResource
        nameWithType: DbMigration.SqlResource
        qualifiedName: System.Data.Entity.Migrations.DbMigration.SqlResource
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.Migrations.DbMigration.SqlResource(System.String,System.Reflection.Assembly,System.Boolean,System.Object)
        name: SqlResource
        nameWithType: DbMigration.SqlResource
        qualifiedName: System.Data.Entity.Migrations.DbMigration.SqlResource
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Data.Entity.Migrations.DbMigration
    commentId: M:System.Data.Entity.Migrations.DbMigration.SqlResource(System.String,System.Reflection.Assembly,System.Boolean,System.Object)
  ? System.Data.Entity.Migrations.DbMigration.System#Data#Entity#Migrations#Infrastructure#IDbMigration#AddOperation(System.Data.Entity.Migrations.Model.MigrationOperation)
  : name:
      CSharp:
      - id: System.Data.Entity.Migrations.DbMigration.System#Data#Entity#Migrations#Infrastructure#IDbMigration#AddOperation(System.Data.Entity.Migrations.Model.MigrationOperation)
        name: IDbMigration.AddOperation
        nameWithType: DbMigration.IDbMigration.AddOperation
        qualifiedName: System.Data.Entity.Migrations.DbMigration.System.Data.Entity.Migrations.Infrastructure.IDbMigration.AddOperation
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Data.Entity.Migrations.Model.MigrationOperation
        name: MigrationOperation
        nameWithType: MigrationOperation
        qualifiedName: System.Data.Entity.Migrations.Model.MigrationOperation
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.Migrations.DbMigration.System#Data#Entity#Migrations#Infrastructure#IDbMigration#AddOperation(System.Data.Entity.Migrations.Model.MigrationOperation)
        name: System.Data.Entity.Migrations.Infrastructure.IDbMigration.AddOperation
        nameWithType: DbMigration.System.Data.Entity.Migrations.Infrastructure.IDbMigration.AddOperation
        qualifiedName: System.Data.Entity.Migrations.DbMigration.System.Data.Entity.Migrations.Infrastructure.IDbMigration.AddOperation
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Data.Entity.Migrations.Model.MigrationOperation
        name: MigrationOperation
        nameWithType: MigrationOperation
        qualifiedName: System.Data.Entity.Migrations.Model.MigrationOperation
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Data.Entity.Migrations.DbMigration
    commentId: M:System.Data.Entity.Migrations.DbMigration.System#Data#Entity#Migrations#Infrastructure#IDbMigration#AddOperation(System.Data.Entity.Migrations.Model.MigrationOperation)
  System.Data.Entity.Migrations.Infrastructure:
    name:
      CSharp:
      - name: System.Data.Entity.Migrations.Infrastructure
        nameWithType: System.Data.Entity.Migrations.Infrastructure
        qualifiedName: System.Data.Entity.Migrations.Infrastructure
        isExternal: true
      VB:
      - name: System.Data.Entity.Migrations.Infrastructure
        nameWithType: System.Data.Entity.Migrations.Infrastructure
        qualifiedName: System.Data.Entity.Migrations.Infrastructure
    isDefinition: true
    commentId: N:System.Data.Entity.Migrations.Infrastructure
  System.Data.Entity.Migrations.Infrastructure.IDbMigration:
    name:
      CSharp:
      - id: System.Data.Entity.Migrations.Infrastructure.IDbMigration
        name: IDbMigration
        nameWithType: IDbMigration
        qualifiedName: System.Data.Entity.Migrations.Infrastructure.IDbMigration
        isExternal: true
      VB:
      - id: System.Data.Entity.Migrations.Infrastructure.IDbMigration
        name: IDbMigration
        nameWithType: IDbMigration
        qualifiedName: System.Data.Entity.Migrations.Infrastructure.IDbMigration
        isExternal: true
    isDefinition: true
    parent: System.Data.Entity.Migrations.Infrastructure
    commentId: T:System.Data.Entity.Migrations.Infrastructure.IDbMigration
  System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata:
    name:
      CSharp:
      - id: System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata
        name: IMigrationMetadata
        nameWithType: IMigrationMetadata
        qualifiedName: System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata
        isExternal: true
      VB:
      - id: System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata
        name: IMigrationMetadata
        nameWithType: IMigrationMetadata
        qualifiedName: System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata
        isExternal: true
    isDefinition: true
    parent: System.Data.Entity.Migrations.Infrastructure
    commentId: T:System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata
  System.Data.Entity.Migrations.DbMigration.Up:
    name:
      CSharp:
      - id: System.Data.Entity.Migrations.DbMigration.Up
        name: Up
        nameWithType: DbMigration.Up
        qualifiedName: System.Data.Entity.Migrations.DbMigration.Up
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.Migrations.DbMigration.Up
        name: Up
        nameWithType: DbMigration.Up
        qualifiedName: System.Data.Entity.Migrations.DbMigration.Up
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Data.Entity.Migrations.DbMigration
    commentId: M:System.Data.Entity.Migrations.DbMigration.Up
  BookstoreProject.Migrations.bookproperties.Up*:
    name:
      CSharp:
      - id: BookstoreProject.Migrations.bookproperties.Up*
        name: Up
        nameWithType: bookproperties.Up
        qualifiedName: BookstoreProject.Migrations.bookproperties.Up
      VB:
      - id: BookstoreProject.Migrations.bookproperties.Up*
        name: Up
        nameWithType: bookproperties.Up
        qualifiedName: BookstoreProject.Migrations.bookproperties.Up
    isDefinition: true
    commentId: Overload:BookstoreProject.Migrations.bookproperties.Up
  System.Data.Entity.Migrations.DbMigration.Down:
    name:
      CSharp:
      - id: System.Data.Entity.Migrations.DbMigration.Down
        name: Down
        nameWithType: DbMigration.Down
        qualifiedName: System.Data.Entity.Migrations.DbMigration.Down
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.Migrations.DbMigration.Down
        name: Down
        nameWithType: DbMigration.Down
        qualifiedName: System.Data.Entity.Migrations.DbMigration.Down
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Data.Entity.Migrations.DbMigration
    commentId: M:System.Data.Entity.Migrations.DbMigration.Down
  BookstoreProject.Migrations.bookproperties.Down*:
    name:
      CSharp:
      - id: BookstoreProject.Migrations.bookproperties.Down*
        name: Down
        nameWithType: bookproperties.Down
        qualifiedName: BookstoreProject.Migrations.bookproperties.Down
      VB:
      - id: BookstoreProject.Migrations.bookproperties.Down*
        name: Down
        nameWithType: bookproperties.Down
        qualifiedName: BookstoreProject.Migrations.bookproperties.Down
    isDefinition: true
    commentId: Overload:BookstoreProject.Migrations.bookproperties.Down
  BookstoreProject.Migrations.bookproperties.System#Data#Entity#Migrations#Infrastructure#IMigrationMetadata#Id*:
    name:
      CSharp:
      - id: BookstoreProject.Migrations.bookproperties.System#Data#Entity#Migrations#Infrastructure#IMigrationMetadata#Id*
        name: IMigrationMetadata.Id
        nameWithType: bookproperties.IMigrationMetadata.Id
        qualifiedName: BookstoreProject.Migrations.bookproperties.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Id
      VB:
      - id: BookstoreProject.Migrations.bookproperties.System#Data#Entity#Migrations#Infrastructure#IMigrationMetadata#Id*
        name: System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Id
        nameWithType: bookproperties.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Id
        qualifiedName: BookstoreProject.Migrations.bookproperties.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Id
    isDefinition: true
    commentId: Overload:BookstoreProject.Migrations.bookproperties.System#Data#Entity#Migrations#Infrastructure#IMigrationMetadata#Id
  System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Id:
    name:
      CSharp:
      - id: System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Id
        name: Id
        nameWithType: IMigrationMetadata.Id
        qualifiedName: System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Id
        isExternal: true
      VB:
      - id: System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Id
        name: Id
        nameWithType: IMigrationMetadata.Id
        qualifiedName: System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Id
        isExternal: true
    isDefinition: true
    parent: System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata
    commentId: P:System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Id
  BookstoreProject.Migrations.bookproperties.System#Data#Entity#Migrations#Infrastructure#IMigrationMetadata#Source*:
    name:
      CSharp:
      - id: BookstoreProject.Migrations.bookproperties.System#Data#Entity#Migrations#Infrastructure#IMigrationMetadata#Source*
        name: IMigrationMetadata.Source
        nameWithType: bookproperties.IMigrationMetadata.Source
        qualifiedName: BookstoreProject.Migrations.bookproperties.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Source
      VB:
      - id: BookstoreProject.Migrations.bookproperties.System#Data#Entity#Migrations#Infrastructure#IMigrationMetadata#Source*
        name: System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Source
        nameWithType: bookproperties.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Source
        qualifiedName: BookstoreProject.Migrations.bookproperties.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Source
    isDefinition: true
    commentId: Overload:BookstoreProject.Migrations.bookproperties.System#Data#Entity#Migrations#Infrastructure#IMigrationMetadata#Source
  System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Source:
    name:
      CSharp:
      - id: System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Source
        name: Source
        nameWithType: IMigrationMetadata.Source
        qualifiedName: System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Source
        isExternal: true
      VB:
      - id: System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Source
        name: Source
        nameWithType: IMigrationMetadata.Source
        qualifiedName: System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Source
        isExternal: true
    isDefinition: true
    parent: System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata
    commentId: P:System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Source
  BookstoreProject.Migrations.bookproperties.System#Data#Entity#Migrations#Infrastructure#IMigrationMetadata#Target*:
    name:
      CSharp:
      - id: BookstoreProject.Migrations.bookproperties.System#Data#Entity#Migrations#Infrastructure#IMigrationMetadata#Target*
        name: IMigrationMetadata.Target
        nameWithType: bookproperties.IMigrationMetadata.Target
        qualifiedName: BookstoreProject.Migrations.bookproperties.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Target
      VB:
      - id: BookstoreProject.Migrations.bookproperties.System#Data#Entity#Migrations#Infrastructure#IMigrationMetadata#Target*
        name: System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Target
        nameWithType: bookproperties.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Target
        qualifiedName: BookstoreProject.Migrations.bookproperties.System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Target
    isDefinition: true
    commentId: Overload:BookstoreProject.Migrations.bookproperties.System#Data#Entity#Migrations#Infrastructure#IMigrationMetadata#Target
  System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Target:
    name:
      CSharp:
      - id: System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Target
        name: Target
        nameWithType: IMigrationMetadata.Target
        qualifiedName: System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Target
        isExternal: true
      VB:
      - id: System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Target
        name: Target
        nameWithType: IMigrationMetadata.Target
        qualifiedName: System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Target
        isExternal: true
    isDefinition: true
    parent: System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata
    commentId: P:System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Target
  BookstoreProject.Migrations.bookproperties:
    name:
      CSharp:
      - id: BookstoreProject.Migrations.bookproperties
        name: bookproperties
        nameWithType: bookproperties
        qualifiedName: BookstoreProject.Migrations.bookproperties
      VB:
      - id: BookstoreProject.Migrations.bookproperties
        name: bookproperties
        nameWithType: bookproperties
        qualifiedName: BookstoreProject.Migrations.bookproperties
    isDefinition: true
    commentId: T:BookstoreProject.Migrations.bookproperties
  BookstoreProject.Migrations:
    name:
      CSharp:
      - name: BookstoreProject.Migrations
        nameWithType: BookstoreProject.Migrations
        qualifiedName: BookstoreProject.Migrations
      VB:
      - name: BookstoreProject.Migrations
        nameWithType: BookstoreProject.Migrations
        qualifiedName: BookstoreProject.Migrations
    isDefinition: true
    commentId: N:BookstoreProject.Migrations
  BookstoreProject.Models.ExternalLoginConfirmationViewModel.Email*:
    name:
      CSharp:
      - id: BookstoreProject.Models.ExternalLoginConfirmationViewModel.Email*
        name: Email
        nameWithType: ExternalLoginConfirmationViewModel.Email
        qualifiedName: BookstoreProject.Models.ExternalLoginConfirmationViewModel.Email
      VB:
      - id: BookstoreProject.Models.ExternalLoginConfirmationViewModel.Email*
        name: Email
        nameWithType: ExternalLoginConfirmationViewModel.Email
        qualifiedName: BookstoreProject.Models.ExternalLoginConfirmationViewModel.Email
    isDefinition: true
    commentId: Overload:BookstoreProject.Models.ExternalLoginConfirmationViewModel.Email
  System.ComponentModel.DataAnnotations:
    name:
      CSharp:
      - name: System.ComponentModel.DataAnnotations
        nameWithType: System.ComponentModel.DataAnnotations
        qualifiedName: System.ComponentModel.DataAnnotations
        isExternal: true
      VB:
      - name: System.ComponentModel.DataAnnotations
        nameWithType: System.ComponentModel.DataAnnotations
        qualifiedName: System.ComponentModel.DataAnnotations
    isDefinition: true
    commentId: N:System.ComponentModel.DataAnnotations
  System.ComponentModel.DataAnnotations.RequiredAttribute:
    name:
      CSharp:
      - id: System.ComponentModel.DataAnnotations.RequiredAttribute
        name: RequiredAttribute
        nameWithType: RequiredAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.RequiredAttribute
        isExternal: true
      VB:
      - id: System.ComponentModel.DataAnnotations.RequiredAttribute
        name: RequiredAttribute
        nameWithType: RequiredAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.RequiredAttribute
        isExternal: true
    isDefinition: true
    parent: System.ComponentModel.DataAnnotations
    commentId: T:System.ComponentModel.DataAnnotations.RequiredAttribute
  System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor:
    name:
      CSharp:
      - id: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
        name: RequiredAttribute
        nameWithType: RequiredAttribute.RequiredAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.RequiredAttribute.RequiredAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
        name: RequiredAttribute
        nameWithType: RequiredAttribute.RequiredAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.RequiredAttribute.RequiredAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ComponentModel.DataAnnotations.RequiredAttribute
    commentId: M:System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
  System.ComponentModel.DataAnnotations.DisplayAttribute:
    name:
      CSharp:
      - id: System.ComponentModel.DataAnnotations.DisplayAttribute
        name: DisplayAttribute
        nameWithType: DisplayAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.DisplayAttribute
        isExternal: true
      VB:
      - id: System.ComponentModel.DataAnnotations.DisplayAttribute
        name: DisplayAttribute
        nameWithType: DisplayAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.DisplayAttribute
        isExternal: true
    isDefinition: true
    parent: System.ComponentModel.DataAnnotations
    commentId: T:System.ComponentModel.DataAnnotations.DisplayAttribute
  System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor:
    name:
      CSharp:
      - id: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
        name: DisplayAttribute
        nameWithType: DisplayAttribute.DisplayAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.DisplayAttribute.DisplayAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
        name: DisplayAttribute
        nameWithType: DisplayAttribute.DisplayAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.DisplayAttribute.DisplayAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ComponentModel.DataAnnotations.DisplayAttribute
    commentId: M:System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
  BookstoreProject.Models.ExternalLoginListViewModel.ReturnUrl*:
    name:
      CSharp:
      - id: BookstoreProject.Models.ExternalLoginListViewModel.ReturnUrl*
        name: ReturnUrl
        nameWithType: ExternalLoginListViewModel.ReturnUrl
        qualifiedName: BookstoreProject.Models.ExternalLoginListViewModel.ReturnUrl
      VB:
      - id: BookstoreProject.Models.ExternalLoginListViewModel.ReturnUrl*
        name: ReturnUrl
        nameWithType: ExternalLoginListViewModel.ReturnUrl
        qualifiedName: BookstoreProject.Models.ExternalLoginListViewModel.ReturnUrl
    isDefinition: true
    commentId: Overload:BookstoreProject.Models.ExternalLoginListViewModel.ReturnUrl
  BookstoreProject.Models.ExternalLoginListViewModel:
    name:
      CSharp:
      - id: BookstoreProject.Models.ExternalLoginListViewModel
        name: ExternalLoginListViewModel
        nameWithType: ExternalLoginListViewModel
        qualifiedName: BookstoreProject.Models.ExternalLoginListViewModel
      VB:
      - id: BookstoreProject.Models.ExternalLoginListViewModel
        name: ExternalLoginListViewModel
        nameWithType: ExternalLoginListViewModel
        qualifiedName: BookstoreProject.Models.ExternalLoginListViewModel
    isDefinition: true
    commentId: T:BookstoreProject.Models.ExternalLoginListViewModel
  BookstoreProject.Models.SendCodeViewModel.SelectedProvider*:
    name:
      CSharp:
      - id: BookstoreProject.Models.SendCodeViewModel.SelectedProvider*
        name: SelectedProvider
        nameWithType: SendCodeViewModel.SelectedProvider
        qualifiedName: BookstoreProject.Models.SendCodeViewModel.SelectedProvider
      VB:
      - id: BookstoreProject.Models.SendCodeViewModel.SelectedProvider*
        name: SelectedProvider
        nameWithType: SendCodeViewModel.SelectedProvider
        qualifiedName: BookstoreProject.Models.SendCodeViewModel.SelectedProvider
    isDefinition: true
    commentId: Overload:BookstoreProject.Models.SendCodeViewModel.SelectedProvider
  System.Collections.Generic.ICollection`1:
    name:
      CSharp:
      - id: System.Collections.Generic.ICollection`1
        name: ICollection
        nameWithType: ICollection
        qualifiedName: System.Collections.Generic.ICollection
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.ICollection`1
        name: ICollection
        nameWithType: ICollection
        qualifiedName: System.Collections.Generic.ICollection
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.ICollection`1
  System.Collections.Generic:
    name:
      CSharp:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
        isExternal: true
      VB:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
    isDefinition: true
    commentId: N:System.Collections.Generic
  System.Collections.Generic.ICollection{System.Web.Mvc.SelectListItem}:
    name:
      CSharp:
      - id: System.Collections.Generic.ICollection`1
        name: ICollection
        nameWithType: ICollection
        qualifiedName: System.Collections.Generic.ICollection
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Web.Mvc.SelectListItem
        name: SelectListItem
        nameWithType: SelectListItem
        qualifiedName: System.Web.Mvc.SelectListItem
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.ICollection`1
        name: ICollection
        nameWithType: ICollection
        qualifiedName: System.Collections.Generic.ICollection
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Web.Mvc.SelectListItem
        name: SelectListItem
        nameWithType: SelectListItem
        qualifiedName: System.Web.Mvc.SelectListItem
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.ICollection`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.ICollection{System.Web.Mvc.SelectListItem}
  BookstoreProject.Models.SendCodeViewModel.Providers*:
    name:
      CSharp:
      - id: BookstoreProject.Models.SendCodeViewModel.Providers*
        name: Providers
        nameWithType: SendCodeViewModel.Providers
        qualifiedName: BookstoreProject.Models.SendCodeViewModel.Providers
      VB:
      - id: BookstoreProject.Models.SendCodeViewModel.Providers*
        name: Providers
        nameWithType: SendCodeViewModel.Providers
        qualifiedName: BookstoreProject.Models.SendCodeViewModel.Providers
    isDefinition: true
    commentId: Overload:BookstoreProject.Models.SendCodeViewModel.Providers
  BookstoreProject.Models.SendCodeViewModel.ReturnUrl*:
    name:
      CSharp:
      - id: BookstoreProject.Models.SendCodeViewModel.ReturnUrl*
        name: ReturnUrl
        nameWithType: SendCodeViewModel.ReturnUrl
        qualifiedName: BookstoreProject.Models.SendCodeViewModel.ReturnUrl
      VB:
      - id: BookstoreProject.Models.SendCodeViewModel.ReturnUrl*
        name: ReturnUrl
        nameWithType: SendCodeViewModel.ReturnUrl
        qualifiedName: BookstoreProject.Models.SendCodeViewModel.ReturnUrl
    isDefinition: true
    commentId: Overload:BookstoreProject.Models.SendCodeViewModel.ReturnUrl
  BookstoreProject.Models.SendCodeViewModel.RememberMe*:
    name:
      CSharp:
      - id: BookstoreProject.Models.SendCodeViewModel.RememberMe*
        name: RememberMe
        nameWithType: SendCodeViewModel.RememberMe
        qualifiedName: BookstoreProject.Models.SendCodeViewModel.RememberMe
      VB:
      - id: BookstoreProject.Models.SendCodeViewModel.RememberMe*
        name: RememberMe
        nameWithType: SendCodeViewModel.RememberMe
        qualifiedName: BookstoreProject.Models.SendCodeViewModel.RememberMe
    isDefinition: true
    commentId: Overload:BookstoreProject.Models.SendCodeViewModel.RememberMe
  BookstoreProject.Models.VerifyCodeViewModel.Provider*:
    name:
      CSharp:
      - id: BookstoreProject.Models.VerifyCodeViewModel.Provider*
        name: Provider
        nameWithType: VerifyCodeViewModel.Provider
        qualifiedName: BookstoreProject.Models.VerifyCodeViewModel.Provider
      VB:
      - id: BookstoreProject.Models.VerifyCodeViewModel.Provider*
        name: Provider
        nameWithType: VerifyCodeViewModel.Provider
        qualifiedName: BookstoreProject.Models.VerifyCodeViewModel.Provider
    isDefinition: true
    commentId: Overload:BookstoreProject.Models.VerifyCodeViewModel.Provider
  BookstoreProject.Models.VerifyCodeViewModel.Code*:
    name:
      CSharp:
      - id: BookstoreProject.Models.VerifyCodeViewModel.Code*
        name: Code
        nameWithType: VerifyCodeViewModel.Code
        qualifiedName: BookstoreProject.Models.VerifyCodeViewModel.Code
      VB:
      - id: BookstoreProject.Models.VerifyCodeViewModel.Code*
        name: Code
        nameWithType: VerifyCodeViewModel.Code
        qualifiedName: BookstoreProject.Models.VerifyCodeViewModel.Code
    isDefinition: true
    commentId: Overload:BookstoreProject.Models.VerifyCodeViewModel.Code
  BookstoreProject.Models.VerifyCodeViewModel.ReturnUrl*:
    name:
      CSharp:
      - id: BookstoreProject.Models.VerifyCodeViewModel.ReturnUrl*
        name: ReturnUrl
        nameWithType: VerifyCodeViewModel.ReturnUrl
        qualifiedName: BookstoreProject.Models.VerifyCodeViewModel.ReturnUrl
      VB:
      - id: BookstoreProject.Models.VerifyCodeViewModel.ReturnUrl*
        name: ReturnUrl
        nameWithType: VerifyCodeViewModel.ReturnUrl
        qualifiedName: BookstoreProject.Models.VerifyCodeViewModel.ReturnUrl
    isDefinition: true
    commentId: Overload:BookstoreProject.Models.VerifyCodeViewModel.ReturnUrl
  BookstoreProject.Models.VerifyCodeViewModel.RememberBrowser*:
    name:
      CSharp:
      - id: BookstoreProject.Models.VerifyCodeViewModel.RememberBrowser*
        name: RememberBrowser
        nameWithType: VerifyCodeViewModel.RememberBrowser
        qualifiedName: BookstoreProject.Models.VerifyCodeViewModel.RememberBrowser
      VB:
      - id: BookstoreProject.Models.VerifyCodeViewModel.RememberBrowser*
        name: RememberBrowser
        nameWithType: VerifyCodeViewModel.RememberBrowser
        qualifiedName: BookstoreProject.Models.VerifyCodeViewModel.RememberBrowser
    isDefinition: true
    commentId: Overload:BookstoreProject.Models.VerifyCodeViewModel.RememberBrowser
  BookstoreProject.Models.VerifyCodeViewModel.RememberMe*:
    name:
      CSharp:
      - id: BookstoreProject.Models.VerifyCodeViewModel.RememberMe*
        name: RememberMe
        nameWithType: VerifyCodeViewModel.RememberMe
        qualifiedName: BookstoreProject.Models.VerifyCodeViewModel.RememberMe
      VB:
      - id: BookstoreProject.Models.VerifyCodeViewModel.RememberMe*
        name: RememberMe
        nameWithType: VerifyCodeViewModel.RememberMe
        qualifiedName: BookstoreProject.Models.VerifyCodeViewModel.RememberMe
    isDefinition: true
    commentId: Overload:BookstoreProject.Models.VerifyCodeViewModel.RememberMe
  BookstoreProject.Models.ForgotViewModel.Email*:
    name:
      CSharp:
      - id: BookstoreProject.Models.ForgotViewModel.Email*
        name: Email
        nameWithType: ForgotViewModel.Email
        qualifiedName: BookstoreProject.Models.ForgotViewModel.Email
      VB:
      - id: BookstoreProject.Models.ForgotViewModel.Email*
        name: Email
        nameWithType: ForgotViewModel.Email
        qualifiedName: BookstoreProject.Models.ForgotViewModel.Email
    isDefinition: true
    commentId: Overload:BookstoreProject.Models.ForgotViewModel.Email
  BookstoreProject.Models.ForgotViewModel:
    name:
      CSharp:
      - id: BookstoreProject.Models.ForgotViewModel
        name: ForgotViewModel
        nameWithType: ForgotViewModel
        qualifiedName: BookstoreProject.Models.ForgotViewModel
      VB:
      - id: BookstoreProject.Models.ForgotViewModel
        name: ForgotViewModel
        nameWithType: ForgotViewModel
        qualifiedName: BookstoreProject.Models.ForgotViewModel
    isDefinition: true
    commentId: T:BookstoreProject.Models.ForgotViewModel
  BookstoreProject.Models.LoginViewModel.Email*:
    name:
      CSharp:
      - id: BookstoreProject.Models.LoginViewModel.Email*
        name: Email
        nameWithType: LoginViewModel.Email
        qualifiedName: BookstoreProject.Models.LoginViewModel.Email
      VB:
      - id: BookstoreProject.Models.LoginViewModel.Email*
        name: Email
        nameWithType: LoginViewModel.Email
        qualifiedName: BookstoreProject.Models.LoginViewModel.Email
    isDefinition: true
    commentId: Overload:BookstoreProject.Models.LoginViewModel.Email
  System.ComponentModel.DataAnnotations.EmailAddressAttribute:
    name:
      CSharp:
      - id: System.ComponentModel.DataAnnotations.EmailAddressAttribute
        name: EmailAddressAttribute
        nameWithType: EmailAddressAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.EmailAddressAttribute
        isExternal: true
      VB:
      - id: System.ComponentModel.DataAnnotations.EmailAddressAttribute
        name: EmailAddressAttribute
        nameWithType: EmailAddressAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.EmailAddressAttribute
        isExternal: true
    isDefinition: true
    parent: System.ComponentModel.DataAnnotations
    commentId: T:System.ComponentModel.DataAnnotations.EmailAddressAttribute
  System.ComponentModel.DataAnnotations.EmailAddressAttribute.#ctor:
    name:
      CSharp:
      - id: System.ComponentModel.DataAnnotations.EmailAddressAttribute.#ctor
        name: EmailAddressAttribute
        nameWithType: EmailAddressAttribute.EmailAddressAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.EmailAddressAttribute.EmailAddressAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ComponentModel.DataAnnotations.EmailAddressAttribute.#ctor
        name: EmailAddressAttribute
        nameWithType: EmailAddressAttribute.EmailAddressAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.EmailAddressAttribute.EmailAddressAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ComponentModel.DataAnnotations.EmailAddressAttribute
    commentId: M:System.ComponentModel.DataAnnotations.EmailAddressAttribute.#ctor
  BookstoreProject.Models.LoginViewModel.Password*:
    name:
      CSharp:
      - id: BookstoreProject.Models.LoginViewModel.Password*
        name: Password
        nameWithType: LoginViewModel.Password
        qualifiedName: BookstoreProject.Models.LoginViewModel.Password
      VB:
      - id: BookstoreProject.Models.LoginViewModel.Password*
        name: Password
        nameWithType: LoginViewModel.Password
        qualifiedName: BookstoreProject.Models.LoginViewModel.Password
    isDefinition: true
    commentId: Overload:BookstoreProject.Models.LoginViewModel.Password
  System.ComponentModel.DataAnnotations.DataTypeAttribute:
    name:
      CSharp:
      - id: System.ComponentModel.DataAnnotations.DataTypeAttribute
        name: DataTypeAttribute
        nameWithType: DataTypeAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.DataTypeAttribute
        isExternal: true
      VB:
      - id: System.ComponentModel.DataAnnotations.DataTypeAttribute
        name: DataTypeAttribute
        nameWithType: DataTypeAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.DataTypeAttribute
        isExternal: true
    isDefinition: true
    parent: System.ComponentModel.DataAnnotations
    commentId: T:System.ComponentModel.DataAnnotations.DataTypeAttribute
  System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType):
    name:
      CSharp:
      - id: System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)
        name: DataTypeAttribute
        nameWithType: DataTypeAttribute.DataTypeAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.DataTypeAttribute.DataTypeAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.ComponentModel.DataAnnotations.DataType
        name: DataType
        nameWithType: DataType
        qualifiedName: System.ComponentModel.DataAnnotations.DataType
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)
        name: DataTypeAttribute
        nameWithType: DataTypeAttribute.DataTypeAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.DataTypeAttribute.DataTypeAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.ComponentModel.DataAnnotations.DataType
        name: DataType
        nameWithType: DataType
        qualifiedName: System.ComponentModel.DataAnnotations.DataType
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ComponentModel.DataAnnotations.DataTypeAttribute
    commentId: M:System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)
  System.ComponentModel.DataAnnotations.DataType:
    name:
      CSharp:
      - id: System.ComponentModel.DataAnnotations.DataType
        name: DataType
        nameWithType: DataType
        qualifiedName: System.ComponentModel.DataAnnotations.DataType
        isExternal: true
      VB:
      - id: System.ComponentModel.DataAnnotations.DataType
        name: DataType
        nameWithType: DataType
        qualifiedName: System.ComponentModel.DataAnnotations.DataType
        isExternal: true
    isDefinition: true
    parent: System.ComponentModel.DataAnnotations
    commentId: T:System.ComponentModel.DataAnnotations.DataType
  BookstoreProject.Models.LoginViewModel.RememberMe*:
    name:
      CSharp:
      - id: BookstoreProject.Models.LoginViewModel.RememberMe*
        name: RememberMe
        nameWithType: LoginViewModel.RememberMe
        qualifiedName: BookstoreProject.Models.LoginViewModel.RememberMe
      VB:
      - id: BookstoreProject.Models.LoginViewModel.RememberMe*
        name: RememberMe
        nameWithType: LoginViewModel.RememberMe
        qualifiedName: BookstoreProject.Models.LoginViewModel.RememberMe
    isDefinition: true
    commentId: Overload:BookstoreProject.Models.LoginViewModel.RememberMe
  BookstoreProject.Models.RegisterViewModel.Email*:
    name:
      CSharp:
      - id: BookstoreProject.Models.RegisterViewModel.Email*
        name: Email
        nameWithType: RegisterViewModel.Email
        qualifiedName: BookstoreProject.Models.RegisterViewModel.Email
      VB:
      - id: BookstoreProject.Models.RegisterViewModel.Email*
        name: Email
        nameWithType: RegisterViewModel.Email
        qualifiedName: BookstoreProject.Models.RegisterViewModel.Email
    isDefinition: true
    commentId: Overload:BookstoreProject.Models.RegisterViewModel.Email
  BookstoreProject.Models.RegisterViewModel.Password*:
    name:
      CSharp:
      - id: BookstoreProject.Models.RegisterViewModel.Password*
        name: Password
        nameWithType: RegisterViewModel.Password
        qualifiedName: BookstoreProject.Models.RegisterViewModel.Password
      VB:
      - id: BookstoreProject.Models.RegisterViewModel.Password*
        name: Password
        nameWithType: RegisterViewModel.Password
        qualifiedName: BookstoreProject.Models.RegisterViewModel.Password
    isDefinition: true
    commentId: Overload:BookstoreProject.Models.RegisterViewModel.Password
  System.ComponentModel.DataAnnotations.StringLengthAttribute:
    name:
      CSharp:
      - id: System.ComponentModel.DataAnnotations.StringLengthAttribute
        name: StringLengthAttribute
        nameWithType: StringLengthAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.StringLengthAttribute
        isExternal: true
      VB:
      - id: System.ComponentModel.DataAnnotations.StringLengthAttribute
        name: StringLengthAttribute
        nameWithType: StringLengthAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.StringLengthAttribute
        isExternal: true
    isDefinition: true
    parent: System.ComponentModel.DataAnnotations
    commentId: T:System.ComponentModel.DataAnnotations.StringLengthAttribute
  System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32):
    name:
      CSharp:
      - id: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
        name: StringLengthAttribute
        nameWithType: StringLengthAttribute.StringLengthAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.StringLengthAttribute.StringLengthAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
        name: StringLengthAttribute
        nameWithType: StringLengthAttribute.StringLengthAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.StringLengthAttribute.StringLengthAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ComponentModel.DataAnnotations.StringLengthAttribute
    commentId: M:System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
  BookstoreProject.Models.RegisterViewModel.ConfirmPassword*:
    name:
      CSharp:
      - id: BookstoreProject.Models.RegisterViewModel.ConfirmPassword*
        name: ConfirmPassword
        nameWithType: RegisterViewModel.ConfirmPassword
        qualifiedName: BookstoreProject.Models.RegisterViewModel.ConfirmPassword
      VB:
      - id: BookstoreProject.Models.RegisterViewModel.ConfirmPassword*
        name: ConfirmPassword
        nameWithType: RegisterViewModel.ConfirmPassword
        qualifiedName: BookstoreProject.Models.RegisterViewModel.ConfirmPassword
    isDefinition: true
    commentId: Overload:BookstoreProject.Models.RegisterViewModel.ConfirmPassword
  System.ComponentModel.DataAnnotations.CompareAttribute:
    name:
      CSharp:
      - id: System.ComponentModel.DataAnnotations.CompareAttribute
        name: CompareAttribute
        nameWithType: CompareAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.CompareAttribute
        isExternal: true
      VB:
      - id: System.ComponentModel.DataAnnotations.CompareAttribute
        name: CompareAttribute
        nameWithType: CompareAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.CompareAttribute
        isExternal: true
    isDefinition: true
    parent: System.ComponentModel.DataAnnotations
    commentId: T:System.ComponentModel.DataAnnotations.CompareAttribute
  System.ComponentModel.DataAnnotations.CompareAttribute.#ctor(System.String):
    name:
      CSharp:
      - id: System.ComponentModel.DataAnnotations.CompareAttribute.#ctor(System.String)
        name: CompareAttribute
        nameWithType: CompareAttribute.CompareAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.CompareAttribute.CompareAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ComponentModel.DataAnnotations.CompareAttribute.#ctor(System.String)
        name: CompareAttribute
        nameWithType: CompareAttribute.CompareAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.CompareAttribute.CompareAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ComponentModel.DataAnnotations.CompareAttribute
    commentId: M:System.ComponentModel.DataAnnotations.CompareAttribute.#ctor(System.String)
  BookstoreProject.Models.ResetPasswordViewModel.Email*:
    name:
      CSharp:
      - id: BookstoreProject.Models.ResetPasswordViewModel.Email*
        name: Email
        nameWithType: ResetPasswordViewModel.Email
        qualifiedName: BookstoreProject.Models.ResetPasswordViewModel.Email
      VB:
      - id: BookstoreProject.Models.ResetPasswordViewModel.Email*
        name: Email
        nameWithType: ResetPasswordViewModel.Email
        qualifiedName: BookstoreProject.Models.ResetPasswordViewModel.Email
    isDefinition: true
    commentId: Overload:BookstoreProject.Models.ResetPasswordViewModel.Email
  BookstoreProject.Models.ResetPasswordViewModel.Password*:
    name:
      CSharp:
      - id: BookstoreProject.Models.ResetPasswordViewModel.Password*
        name: Password
        nameWithType: ResetPasswordViewModel.Password
        qualifiedName: BookstoreProject.Models.ResetPasswordViewModel.Password
      VB:
      - id: BookstoreProject.Models.ResetPasswordViewModel.Password*
        name: Password
        nameWithType: ResetPasswordViewModel.Password
        qualifiedName: BookstoreProject.Models.ResetPasswordViewModel.Password
    isDefinition: true
    commentId: Overload:BookstoreProject.Models.ResetPasswordViewModel.Password
  BookstoreProject.Models.ResetPasswordViewModel.ConfirmPassword*:
    name:
      CSharp:
      - id: BookstoreProject.Models.ResetPasswordViewModel.ConfirmPassword*
        name: ConfirmPassword
        nameWithType: ResetPasswordViewModel.ConfirmPassword
        qualifiedName: BookstoreProject.Models.ResetPasswordViewModel.ConfirmPassword
      VB:
      - id: BookstoreProject.Models.ResetPasswordViewModel.ConfirmPassword*
        name: ConfirmPassword
        nameWithType: ResetPasswordViewModel.ConfirmPassword
        qualifiedName: BookstoreProject.Models.ResetPasswordViewModel.ConfirmPassword
    isDefinition: true
    commentId: Overload:BookstoreProject.Models.ResetPasswordViewModel.ConfirmPassword
  BookstoreProject.Models.ResetPasswordViewModel.Code*:
    name:
      CSharp:
      - id: BookstoreProject.Models.ResetPasswordViewModel.Code*
        name: Code
        nameWithType: ResetPasswordViewModel.Code
        qualifiedName: BookstoreProject.Models.ResetPasswordViewModel.Code
      VB:
      - id: BookstoreProject.Models.ResetPasswordViewModel.Code*
        name: Code
        nameWithType: ResetPasswordViewModel.Code
        qualifiedName: BookstoreProject.Models.ResetPasswordViewModel.Code
    isDefinition: true
    commentId: Overload:BookstoreProject.Models.ResetPasswordViewModel.Code
  BookstoreProject.Models.ForgotPasswordViewModel.Email*:
    name:
      CSharp:
      - id: BookstoreProject.Models.ForgotPasswordViewModel.Email*
        name: Email
        nameWithType: ForgotPasswordViewModel.Email
        qualifiedName: BookstoreProject.Models.ForgotPasswordViewModel.Email
      VB:
      - id: BookstoreProject.Models.ForgotPasswordViewModel.Email*
        name: Email
        nameWithType: ForgotPasswordViewModel.Email
        qualifiedName: BookstoreProject.Models.ForgotPasswordViewModel.Email
    isDefinition: true
    commentId: Overload:BookstoreProject.Models.ForgotPasswordViewModel.Email
  BookstoreProject.Models.Book.ID*:
    name:
      CSharp:
      - id: BookstoreProject.Models.Book.ID*
        name: ID
        nameWithType: Book.ID
        qualifiedName: BookstoreProject.Models.Book.ID
      VB:
      - id: BookstoreProject.Models.Book.ID*
        name: ID
        nameWithType: Book.ID
        qualifiedName: BookstoreProject.Models.Book.ID
    isDefinition: true
    commentId: Overload:BookstoreProject.Models.Book.ID
  BookstoreProject.Models.Book.Title*:
    name:
      CSharp:
      - id: BookstoreProject.Models.Book.Title*
        name: Title
        nameWithType: Book.Title
        qualifiedName: BookstoreProject.Models.Book.Title
      VB:
      - id: BookstoreProject.Models.Book.Title*
        name: Title
        nameWithType: Book.Title
        qualifiedName: BookstoreProject.Models.Book.Title
    isDefinition: true
    commentId: Overload:BookstoreProject.Models.Book.Title
  BookstoreProject.Models.Book.Author*:
    name:
      CSharp:
      - id: BookstoreProject.Models.Book.Author*
        name: Author
        nameWithType: Book.Author
        qualifiedName: BookstoreProject.Models.Book.Author
      VB:
      - id: BookstoreProject.Models.Book.Author*
        name: Author
        nameWithType: Book.Author
        qualifiedName: BookstoreProject.Models.Book.Author
    isDefinition: true
    commentId: Overload:BookstoreProject.Models.Book.Author
  System.Double:
    name:
      CSharp:
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      VB:
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Double
  BookstoreProject.Models.Book.Price*:
    name:
      CSharp:
      - id: BookstoreProject.Models.Book.Price*
        name: Price
        nameWithType: Book.Price
        qualifiedName: BookstoreProject.Models.Book.Price
      VB:
      - id: BookstoreProject.Models.Book.Price*
        name: Price
        nameWithType: Book.Price
        qualifiedName: BookstoreProject.Models.Book.Price
    isDefinition: true
    commentId: Overload:BookstoreProject.Models.Book.Price
  System.Nullable{System.DateTime}:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.DateTime
        name: DateTime
        nameWithType: DateTime
        qualifiedName: System.DateTime
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.DateTime
        name: DateTime
        nameWithType: DateTime
        qualifiedName: System.DateTime
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Nullable`1
    parent: System
    commentId: T:System.Nullable{System.DateTime}
  BookstoreProject.Models.Book.ReleaseDate*:
    name:
      CSharp:
      - id: BookstoreProject.Models.Book.ReleaseDate*
        name: ReleaseDate
        nameWithType: Book.ReleaseDate
        qualifiedName: BookstoreProject.Models.Book.ReleaseDate
      VB:
      - id: BookstoreProject.Models.Book.ReleaseDate*
        name: ReleaseDate
        nameWithType: Book.ReleaseDate
        qualifiedName: BookstoreProject.Models.Book.ReleaseDate
    isDefinition: true
    commentId: Overload:BookstoreProject.Models.Book.ReleaseDate
  System.ComponentModel.DataAnnotations.DisplayFormatAttribute:
    name:
      CSharp:
      - id: System.ComponentModel.DataAnnotations.DisplayFormatAttribute
        name: DisplayFormatAttribute
        nameWithType: DisplayFormatAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.DisplayFormatAttribute
        isExternal: true
      VB:
      - id: System.ComponentModel.DataAnnotations.DisplayFormatAttribute
        name: DisplayFormatAttribute
        nameWithType: DisplayFormatAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.DisplayFormatAttribute
        isExternal: true
    isDefinition: true
    parent: System.ComponentModel.DataAnnotations
    commentId: T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute
  System.ComponentModel.DataAnnotations.DisplayFormatAttribute.#ctor:
    name:
      CSharp:
      - id: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.#ctor
        name: DisplayFormatAttribute
        nameWithType: DisplayFormatAttribute.DisplayFormatAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DisplayFormatAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.#ctor
        name: DisplayFormatAttribute
        nameWithType: DisplayFormatAttribute.DisplayFormatAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DisplayFormatAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ComponentModel.DataAnnotations.DisplayFormatAttribute
    commentId: M:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.#ctor
  System.Data.Entity:
    name:
      CSharp:
      - name: System.Data.Entity
        nameWithType: System.Data.Entity
        qualifiedName: System.Data.Entity
        isExternal: true
      VB:
      - name: System.Data.Entity
        nameWithType: System.Data.Entity
        qualifiedName: System.Data.Entity
    isDefinition: true
    commentId: N:System.Data.Entity
  System.Data.Entity.DbContext:
    name:
      CSharp:
      - id: System.Data.Entity.DbContext
        name: DbContext
        nameWithType: DbContext
        qualifiedName: System.Data.Entity.DbContext
        isExternal: true
      VB:
      - id: System.Data.Entity.DbContext
        name: DbContext
        nameWithType: DbContext
        qualifiedName: System.Data.Entity.DbContext
        isExternal: true
    isDefinition: true
    parent: System.Data.Entity
    commentId: T:System.Data.Entity.DbContext
  System.Data.Entity.DbContext.OnModelCreating(System.Data.Entity.DbModelBuilder):
    name:
      CSharp:
      - id: System.Data.Entity.DbContext.OnModelCreating(System.Data.Entity.DbModelBuilder)
        name: OnModelCreating
        nameWithType: DbContext.OnModelCreating
        qualifiedName: System.Data.Entity.DbContext.OnModelCreating
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Data.Entity.DbModelBuilder
        name: DbModelBuilder
        nameWithType: DbModelBuilder
        qualifiedName: System.Data.Entity.DbModelBuilder
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.DbContext.OnModelCreating(System.Data.Entity.DbModelBuilder)
        name: OnModelCreating
        nameWithType: DbContext.OnModelCreating
        qualifiedName: System.Data.Entity.DbContext.OnModelCreating
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Data.Entity.DbModelBuilder
        name: DbModelBuilder
        nameWithType: DbModelBuilder
        qualifiedName: System.Data.Entity.DbModelBuilder
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Data.Entity.DbContext
    commentId: M:System.Data.Entity.DbContext.OnModelCreating(System.Data.Entity.DbModelBuilder)
  System.Data.Entity.DbContext.Set``1:
    name:
      CSharp:
      - id: System.Data.Entity.DbContext.Set``1
        name: Set<TEntity>
        nameWithType: DbContext.Set<TEntity>
        qualifiedName: System.Data.Entity.DbContext.Set<TEntity>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.DbContext.Set``1
        name: Set(Of TEntity)
        nameWithType: DbContext.Set(Of TEntity)
        qualifiedName: System.Data.Entity.DbContext.Set(Of TEntity)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Data.Entity.DbContext
    commentId: M:System.Data.Entity.DbContext.Set``1
  System.Data.Entity.DbContext.Set(System.Type):
    name:
      CSharp:
      - id: System.Data.Entity.DbContext.Set(System.Type)
        name: Set
        nameWithType: DbContext.Set
        qualifiedName: System.Data.Entity.DbContext.Set
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.DbContext.Set(System.Type)
        name: Set
        nameWithType: DbContext.Set
        qualifiedName: System.Data.Entity.DbContext.Set
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Data.Entity.DbContext
    commentId: M:System.Data.Entity.DbContext.Set(System.Type)
  System.Data.Entity.DbContext.SaveChanges:
    name:
      CSharp:
      - id: System.Data.Entity.DbContext.SaveChanges
        name: SaveChanges
        nameWithType: DbContext.SaveChanges
        qualifiedName: System.Data.Entity.DbContext.SaveChanges
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.DbContext.SaveChanges
        name: SaveChanges
        nameWithType: DbContext.SaveChanges
        qualifiedName: System.Data.Entity.DbContext.SaveChanges
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Data.Entity.DbContext
    commentId: M:System.Data.Entity.DbContext.SaveChanges
  System.Data.Entity.DbContext.SaveChangesAsync:
    name:
      CSharp:
      - id: System.Data.Entity.DbContext.SaveChangesAsync
        name: SaveChangesAsync
        nameWithType: DbContext.SaveChangesAsync
        qualifiedName: System.Data.Entity.DbContext.SaveChangesAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.DbContext.SaveChangesAsync
        name: SaveChangesAsync
        nameWithType: DbContext.SaveChangesAsync
        qualifiedName: System.Data.Entity.DbContext.SaveChangesAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Data.Entity.DbContext
    commentId: M:System.Data.Entity.DbContext.SaveChangesAsync
  System.Data.Entity.DbContext.SaveChangesAsync(System.Threading.CancellationToken):
    name:
      CSharp:
      - id: System.Data.Entity.DbContext.SaveChangesAsync(System.Threading.CancellationToken)
        name: SaveChangesAsync
        nameWithType: DbContext.SaveChangesAsync
        qualifiedName: System.Data.Entity.DbContext.SaveChangesAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Threading.CancellationToken
        name: CancellationToken
        nameWithType: CancellationToken
        qualifiedName: System.Threading.CancellationToken
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.DbContext.SaveChangesAsync(System.Threading.CancellationToken)
        name: SaveChangesAsync
        nameWithType: DbContext.SaveChangesAsync
        qualifiedName: System.Data.Entity.DbContext.SaveChangesAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Threading.CancellationToken
        name: CancellationToken
        nameWithType: CancellationToken
        qualifiedName: System.Threading.CancellationToken
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Data.Entity.DbContext
    commentId: M:System.Data.Entity.DbContext.SaveChangesAsync(System.Threading.CancellationToken)
  System.Data.Entity.DbContext.GetValidationErrors:
    name:
      CSharp:
      - id: System.Data.Entity.DbContext.GetValidationErrors
        name: GetValidationErrors
        nameWithType: DbContext.GetValidationErrors
        qualifiedName: System.Data.Entity.DbContext.GetValidationErrors
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.DbContext.GetValidationErrors
        name: GetValidationErrors
        nameWithType: DbContext.GetValidationErrors
        qualifiedName: System.Data.Entity.DbContext.GetValidationErrors
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Data.Entity.DbContext
    commentId: M:System.Data.Entity.DbContext.GetValidationErrors
  System.Data.Entity.DbContext.ShouldValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry):
    name:
      CSharp:
      - id: System.Data.Entity.DbContext.ShouldValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry)
        name: ShouldValidateEntity
        nameWithType: DbContext.ShouldValidateEntity
        qualifiedName: System.Data.Entity.DbContext.ShouldValidateEntity
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Data.Entity.Infrastructure.DbEntityEntry
        name: DbEntityEntry
        nameWithType: DbEntityEntry
        qualifiedName: System.Data.Entity.Infrastructure.DbEntityEntry
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.DbContext.ShouldValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry)
        name: ShouldValidateEntity
        nameWithType: DbContext.ShouldValidateEntity
        qualifiedName: System.Data.Entity.DbContext.ShouldValidateEntity
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Data.Entity.Infrastructure.DbEntityEntry
        name: DbEntityEntry
        nameWithType: DbEntityEntry
        qualifiedName: System.Data.Entity.Infrastructure.DbEntityEntry
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Data.Entity.DbContext
    commentId: M:System.Data.Entity.DbContext.ShouldValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry)
  ? System.Data.Entity.DbContext.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})
  : name:
      CSharp:
      - id: System.Data.Entity.DbContext.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})
        name: ValidateEntity
        nameWithType: DbContext.ValidateEntity
        qualifiedName: System.Data.Entity.DbContext.ValidateEntity
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Data.Entity.Infrastructure.DbEntityEntry
        name: DbEntityEntry
        nameWithType: DbEntityEntry
        qualifiedName: System.Data.Entity.Infrastructure.DbEntityEntry
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.Generic.IDictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.DbContext.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})
        name: ValidateEntity
        nameWithType: DbContext.ValidateEntity
        qualifiedName: System.Data.Entity.DbContext.ValidateEntity
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Data.Entity.Infrastructure.DbEntityEntry
        name: DbEntityEntry
        nameWithType: DbEntityEntry
        qualifiedName: System.Data.Entity.Infrastructure.DbEntityEntry
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.Generic.IDictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Data.Entity.DbContext
    commentId: M:System.Data.Entity.DbContext.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})
  System.Data.Entity.DbContext.Entry``1(``0):
    name:
      CSharp:
      - id: System.Data.Entity.DbContext.Entry``1(``0)
        name: Entry<TEntity>
        nameWithType: DbContext.Entry<TEntity>
        qualifiedName: System.Data.Entity.DbContext.Entry<TEntity>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TEntity
        nameWithType: TEntity
        qualifiedName: TEntity
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.DbContext.Entry``1(``0)
        name: Entry(Of TEntity)
        nameWithType: DbContext.Entry(Of TEntity)
        qualifiedName: System.Data.Entity.DbContext.Entry(Of TEntity)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TEntity
        nameWithType: TEntity
        qualifiedName: TEntity
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Data.Entity.DbContext.Entry``1(``0)
  System.Data.Entity.DbContext.Entry``1({TEntity}):
    name:
      CSharp:
      - id: System.Data.Entity.DbContext.Entry``1(``0)
        name: Entry<TEntity>
        nameWithType: DbContext.Entry<TEntity>
        qualifiedName: System.Data.Entity.DbContext.Entry<TEntity>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TEntity
        nameWithType: TEntity
        qualifiedName: TEntity
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.DbContext.Entry``1(``0)
        name: Entry(Of TEntity)
        nameWithType: DbContext.Entry(Of TEntity)
        qualifiedName: System.Data.Entity.DbContext.Entry(Of TEntity)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TEntity
        nameWithType: TEntity
        qualifiedName: TEntity
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Data.Entity.DbContext.Entry``1(``0)
    parent: System.Data.Entity.DbContext
    commentId: M:System.Data.Entity.DbContext.Entry``1(``0)
  System.Data.Entity.DbContext.Entry(System.Object):
    name:
      CSharp:
      - id: System.Data.Entity.DbContext.Entry(System.Object)
        name: Entry
        nameWithType: DbContext.Entry
        qualifiedName: System.Data.Entity.DbContext.Entry
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.DbContext.Entry(System.Object)
        name: Entry
        nameWithType: DbContext.Entry
        qualifiedName: System.Data.Entity.DbContext.Entry
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Data.Entity.DbContext
    commentId: M:System.Data.Entity.DbContext.Entry(System.Object)
  System.Data.Entity.DbContext.Dispose:
    name:
      CSharp:
      - id: System.Data.Entity.DbContext.Dispose
        name: Dispose
        nameWithType: DbContext.Dispose
        qualifiedName: System.Data.Entity.DbContext.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.DbContext.Dispose
        name: Dispose
        nameWithType: DbContext.Dispose
        qualifiedName: System.Data.Entity.DbContext.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Data.Entity.DbContext
    commentId: M:System.Data.Entity.DbContext.Dispose
  System.Data.Entity.DbContext.Dispose(System.Boolean):
    name:
      CSharp:
      - id: System.Data.Entity.DbContext.Dispose(System.Boolean)
        name: Dispose
        nameWithType: DbContext.Dispose
        qualifiedName: System.Data.Entity.DbContext.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Data.Entity.DbContext.Dispose(System.Boolean)
        name: Dispose
        nameWithType: DbContext.Dispose
        qualifiedName: System.Data.Entity.DbContext.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Data.Entity.DbContext
    commentId: M:System.Data.Entity.DbContext.Dispose(System.Boolean)
  System.Data.Entity.DbContext.Database:
    name:
      CSharp:
      - id: System.Data.Entity.DbContext.Database
        name: Database
        nameWithType: DbContext.Database
        qualifiedName: System.Data.Entity.DbContext.Database
        isExternal: true
      VB:
      - id: System.Data.Entity.DbContext.Database
        name: Database
        nameWithType: DbContext.Database
        qualifiedName: System.Data.Entity.DbContext.Database
        isExternal: true
    isDefinition: true
    parent: System.Data.Entity.DbContext
    commentId: P:System.Data.Entity.DbContext.Database
  System.Data.Entity.DbContext.System#Data#Entity#Infrastructure#IObjectContextAdapter#ObjectContext:
    name:
      CSharp:
      - id: System.Data.Entity.DbContext.System#Data#Entity#Infrastructure#IObjectContextAdapter#ObjectContext
        name: IObjectContextAdapter.ObjectContext
        nameWithType: DbContext.IObjectContextAdapter.ObjectContext
        qualifiedName: System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.ObjectContext
        isExternal: true
      VB:
      - id: System.Data.Entity.DbContext.System#Data#Entity#Infrastructure#IObjectContextAdapter#ObjectContext
        name: System.Data.Entity.Infrastructure.IObjectContextAdapter.ObjectContext
        nameWithType: DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.ObjectContext
        qualifiedName: System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.ObjectContext
        isExternal: true
    isDefinition: true
    parent: System.Data.Entity.DbContext
    commentId: P:System.Data.Entity.DbContext.System#Data#Entity#Infrastructure#IObjectContextAdapter#ObjectContext
  System.Data.Entity.DbContext.ChangeTracker:
    name:
      CSharp:
      - id: System.Data.Entity.DbContext.ChangeTracker
        name: ChangeTracker
        nameWithType: DbContext.ChangeTracker
        qualifiedName: System.Data.Entity.DbContext.ChangeTracker
        isExternal: true
      VB:
      - id: System.Data.Entity.DbContext.ChangeTracker
        name: ChangeTracker
        nameWithType: DbContext.ChangeTracker
        qualifiedName: System.Data.Entity.DbContext.ChangeTracker
        isExternal: true
    isDefinition: true
    parent: System.Data.Entity.DbContext
    commentId: P:System.Data.Entity.DbContext.ChangeTracker
  System.Data.Entity.DbContext.Configuration:
    name:
      CSharp:
      - id: System.Data.Entity.DbContext.Configuration
        name: Configuration
        nameWithType: DbContext.Configuration
        qualifiedName: System.Data.Entity.DbContext.Configuration
        isExternal: true
      VB:
      - id: System.Data.Entity.DbContext.Configuration
        name: Configuration
        nameWithType: DbContext.Configuration
        qualifiedName: System.Data.Entity.DbContext.Configuration
        isExternal: true
    isDefinition: true
    parent: System.Data.Entity.DbContext
    commentId: P:System.Data.Entity.DbContext.Configuration
  System.Data.Entity.Infrastructure:
    name:
      CSharp:
      - name: System.Data.Entity.Infrastructure
        nameWithType: System.Data.Entity.Infrastructure
        qualifiedName: System.Data.Entity.Infrastructure
        isExternal: true
      VB:
      - name: System.Data.Entity.Infrastructure
        nameWithType: System.Data.Entity.Infrastructure
        qualifiedName: System.Data.Entity.Infrastructure
    isDefinition: true
    commentId: N:System.Data.Entity.Infrastructure
  System.Data.Entity.Infrastructure.IObjectContextAdapter:
    name:
      CSharp:
      - id: System.Data.Entity.Infrastructure.IObjectContextAdapter
        name: IObjectContextAdapter
        nameWithType: IObjectContextAdapter
        qualifiedName: System.Data.Entity.Infrastructure.IObjectContextAdapter
        isExternal: true
      VB:
      - id: System.Data.Entity.Infrastructure.IObjectContextAdapter
        name: IObjectContextAdapter
        nameWithType: IObjectContextAdapter
        qualifiedName: System.Data.Entity.Infrastructure.IObjectContextAdapter
        isExternal: true
    isDefinition: true
    parent: System.Data.Entity.Infrastructure
    commentId: T:System.Data.Entity.Infrastructure.IObjectContextAdapter
  System.Data.Entity.DbSet`1:
    name:
      CSharp:
      - id: System.Data.Entity.DbSet`1
        name: DbSet
        nameWithType: DbSet
        qualifiedName: System.Data.Entity.DbSet
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TEntity
        nameWithType: TEntity
        qualifiedName: TEntity
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Data.Entity.DbSet`1
        name: DbSet
        nameWithType: DbSet
        qualifiedName: System.Data.Entity.DbSet
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TEntity
        nameWithType: TEntity
        qualifiedName: TEntity
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Data.Entity.DbSet`1
  System.Data.Entity.DbSet{BookstoreProject.Models.Book}:
    name:
      CSharp:
      - id: System.Data.Entity.DbSet`1
        name: DbSet
        nameWithType: DbSet
        qualifiedName: System.Data.Entity.DbSet
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: BookstoreProject.Models.Book
        name: Book
        nameWithType: Book
        qualifiedName: BookstoreProject.Models.Book
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Data.Entity.DbSet`1
        name: DbSet
        nameWithType: DbSet
        qualifiedName: System.Data.Entity.DbSet
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: BookstoreProject.Models.Book
        name: Book
        nameWithType: Book
        qualifiedName: BookstoreProject.Models.Book
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Data.Entity.DbSet`1
    parent: System.Data.Entity
    commentId: T:System.Data.Entity.DbSet{BookstoreProject.Models.Book}
  BookstoreProject.Models.BookDBContext.Books*:
    name:
      CSharp:
      - id: BookstoreProject.Models.BookDBContext.Books*
        name: Books
        nameWithType: BookDBContext.Books
        qualifiedName: BookstoreProject.Models.BookDBContext.Books
      VB:
      - id: BookstoreProject.Models.BookDBContext.Books*
        name: Books
        nameWithType: BookDBContext.Books
        qualifiedName: BookstoreProject.Models.BookDBContext.Books
    isDefinition: true
    commentId: Overload:BookstoreProject.Models.BookDBContext.Books
  BookstoreProject.Models.BookDBContext:
    name:
      CSharp:
      - id: BookstoreProject.Models.BookDBContext
        name: BookDBContext
        nameWithType: BookDBContext
        qualifiedName: BookstoreProject.Models.BookDBContext
      VB:
      - id: BookstoreProject.Models.BookDBContext
        name: BookDBContext
        nameWithType: BookDBContext
        qualifiedName: BookstoreProject.Models.BookDBContext
    isDefinition: true
    commentId: T:BookstoreProject.Models.BookDBContext
  Microsoft.AspNet.Identity.EntityFramework:
    name:
      CSharp:
      - name: Microsoft.AspNet.Identity.EntityFramework
        nameWithType: Microsoft.AspNet.Identity.EntityFramework
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework
        isExternal: true
      VB:
      - name: Microsoft.AspNet.Identity.EntityFramework
        nameWithType: Microsoft.AspNet.Identity.EntityFramework
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework
    isDefinition: true
    commentId: N:Microsoft.AspNet.Identity.EntityFramework
  Microsoft.AspNet.Identity.EntityFramework.IdentityUser:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser
        name: IdentityUser
        nameWithType: IdentityUser
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser
        name: IdentityUser
        nameWithType: IdentityUser
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser
        isExternal: true
    isDefinition: true
    parent: Microsoft.AspNet.Identity.EntityFramework
    commentId: T:Microsoft.AspNet.Identity.EntityFramework.IdentityUser
  Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4
        name: IdentityUser
        nameWithType: IdentityUser
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TLogin
        nameWithType: TLogin
        qualifiedName: TLogin
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TClaim
        nameWithType: TClaim
        qualifiedName: TClaim
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4
        name: IdentityUser
        nameWithType: IdentityUser
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TLogin
        nameWithType: TLogin
        qualifiedName: TLogin
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TClaim
        nameWithType: TClaim
        qualifiedName: TClaim
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4
  ? Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4
        name: IdentityUser
        nameWithType: IdentityUser
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin
        name: IdentityUserLogin
        nameWithType: IdentityUserLogin
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole
        name: IdentityUserRole
        nameWithType: IdentityUserRole
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim
        name: IdentityUserClaim
        nameWithType: IdentityUserClaim
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4
        name: IdentityUser
        nameWithType: IdentityUser
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin
        name: IdentityUserLogin
        nameWithType: IdentityUserLogin
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole
        name: IdentityUserRole
        nameWithType: IdentityUserRole
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim
        name: IdentityUserClaim
        nameWithType: IdentityUserClaim
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4
    parent: Microsoft.AspNet.Identity.EntityFramework
    commentId: T:Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}
  Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.Email:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.Email
        name: Email
        nameWithType: IdentityUser<TKey, TLogin, TRole, TClaim>.Email
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser<TKey, TLogin, TRole, TClaim>.Email
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.Email
        name: Email
        nameWithType: IdentityUser(Of TKey, TLogin, TRole, TClaim).Email
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser(Of TKey, TLogin, TRole, TClaim).Email
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.Email
  ? Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.Email
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.Email
        name: Email
        nameWithType: IdentityUser<String, IdentityUserLogin, IdentityUserRole, IdentityUserClaim>.Email
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser<System.String, Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin, Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole, Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim>.Email
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.Email
        name: Email
        nameWithType: IdentityUser(Of String, IdentityUserLogin, IdentityUserRole, IdentityUserClaim).Email
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser(Of System.String, Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin, Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole, Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim).Email
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.Email
    parent: Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}
    commentId: P:Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.Email
  Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.EmailConfirmed:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.EmailConfirmed
        name: EmailConfirmed
        nameWithType: IdentityUser<TKey, TLogin, TRole, TClaim>.EmailConfirmed
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser<TKey, TLogin, TRole, TClaim>.EmailConfirmed
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.EmailConfirmed
        name: EmailConfirmed
        nameWithType: IdentityUser(Of TKey, TLogin, TRole, TClaim).EmailConfirmed
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser(Of TKey, TLogin, TRole, TClaim).EmailConfirmed
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.EmailConfirmed
  ? Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.EmailConfirmed
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.EmailConfirmed
        name: EmailConfirmed
        nameWithType: IdentityUser<String, IdentityUserLogin, IdentityUserRole, IdentityUserClaim>.EmailConfirmed
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser<System.String, Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin, Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole, Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim>.EmailConfirmed
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.EmailConfirmed
        name: EmailConfirmed
        nameWithType: IdentityUser(Of String, IdentityUserLogin, IdentityUserRole, IdentityUserClaim).EmailConfirmed
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser(Of System.String, Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin, Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole, Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim).EmailConfirmed
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.EmailConfirmed
    parent: Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}
    commentId: P:Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.EmailConfirmed
  Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.PasswordHash:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.PasswordHash
        name: PasswordHash
        nameWithType: IdentityUser<TKey, TLogin, TRole, TClaim>.PasswordHash
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser<TKey, TLogin, TRole, TClaim>.PasswordHash
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.PasswordHash
        name: PasswordHash
        nameWithType: IdentityUser(Of TKey, TLogin, TRole, TClaim).PasswordHash
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser(Of TKey, TLogin, TRole, TClaim).PasswordHash
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.PasswordHash
  ? Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.PasswordHash
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.PasswordHash
        name: PasswordHash
        nameWithType: IdentityUser<String, IdentityUserLogin, IdentityUserRole, IdentityUserClaim>.PasswordHash
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser<System.String, Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin, Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole, Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim>.PasswordHash
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.PasswordHash
        name: PasswordHash
        nameWithType: IdentityUser(Of String, IdentityUserLogin, IdentityUserRole, IdentityUserClaim).PasswordHash
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser(Of System.String, Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin, Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole, Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim).PasswordHash
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.PasswordHash
    parent: Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}
    commentId: P:Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.PasswordHash
  Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.SecurityStamp:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.SecurityStamp
        name: SecurityStamp
        nameWithType: IdentityUser<TKey, TLogin, TRole, TClaim>.SecurityStamp
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser<TKey, TLogin, TRole, TClaim>.SecurityStamp
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.SecurityStamp
        name: SecurityStamp
        nameWithType: IdentityUser(Of TKey, TLogin, TRole, TClaim).SecurityStamp
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser(Of TKey, TLogin, TRole, TClaim).SecurityStamp
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.SecurityStamp
  ? Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.SecurityStamp
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.SecurityStamp
        name: SecurityStamp
        nameWithType: IdentityUser<String, IdentityUserLogin, IdentityUserRole, IdentityUserClaim>.SecurityStamp
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser<System.String, Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin, Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole, Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim>.SecurityStamp
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.SecurityStamp
        name: SecurityStamp
        nameWithType: IdentityUser(Of String, IdentityUserLogin, IdentityUserRole, IdentityUserClaim).SecurityStamp
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser(Of System.String, Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin, Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole, Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim).SecurityStamp
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.SecurityStamp
    parent: Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}
    commentId: P:Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.SecurityStamp
  Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.PhoneNumber:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.PhoneNumber
        name: PhoneNumber
        nameWithType: IdentityUser<TKey, TLogin, TRole, TClaim>.PhoneNumber
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser<TKey, TLogin, TRole, TClaim>.PhoneNumber
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.PhoneNumber
        name: PhoneNumber
        nameWithType: IdentityUser(Of TKey, TLogin, TRole, TClaim).PhoneNumber
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser(Of TKey, TLogin, TRole, TClaim).PhoneNumber
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.PhoneNumber
  ? Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.PhoneNumber
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.PhoneNumber
        name: PhoneNumber
        nameWithType: IdentityUser<String, IdentityUserLogin, IdentityUserRole, IdentityUserClaim>.PhoneNumber
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser<System.String, Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin, Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole, Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim>.PhoneNumber
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.PhoneNumber
        name: PhoneNumber
        nameWithType: IdentityUser(Of String, IdentityUserLogin, IdentityUserRole, IdentityUserClaim).PhoneNumber
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser(Of System.String, Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin, Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole, Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim).PhoneNumber
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.PhoneNumber
    parent: Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}
    commentId: P:Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.PhoneNumber
  Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.PhoneNumberConfirmed:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.PhoneNumberConfirmed
        name: PhoneNumberConfirmed
        nameWithType: IdentityUser<TKey, TLogin, TRole, TClaim>.PhoneNumberConfirmed
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser<TKey, TLogin, TRole, TClaim>.PhoneNumberConfirmed
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.PhoneNumberConfirmed
        name: PhoneNumberConfirmed
        nameWithType: IdentityUser(Of TKey, TLogin, TRole, TClaim).PhoneNumberConfirmed
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser(Of TKey, TLogin, TRole, TClaim).PhoneNumberConfirmed
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.PhoneNumberConfirmed
  ? Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.PhoneNumberConfirmed
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.PhoneNumberConfirmed
        name: PhoneNumberConfirmed
        nameWithType: IdentityUser<String, IdentityUserLogin, IdentityUserRole, IdentityUserClaim>.PhoneNumberConfirmed
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser<System.String, Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin, Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole, Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim>.PhoneNumberConfirmed
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.PhoneNumberConfirmed
        name: PhoneNumberConfirmed
        nameWithType: IdentityUser(Of String, IdentityUserLogin, IdentityUserRole, IdentityUserClaim).PhoneNumberConfirmed
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser(Of System.String, Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin, Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole, Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim).PhoneNumberConfirmed
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.PhoneNumberConfirmed
    parent: Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}
    commentId: P:Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.PhoneNumberConfirmed
  Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.TwoFactorEnabled:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.TwoFactorEnabled
        name: TwoFactorEnabled
        nameWithType: IdentityUser<TKey, TLogin, TRole, TClaim>.TwoFactorEnabled
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser<TKey, TLogin, TRole, TClaim>.TwoFactorEnabled
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.TwoFactorEnabled
        name: TwoFactorEnabled
        nameWithType: IdentityUser(Of TKey, TLogin, TRole, TClaim).TwoFactorEnabled
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser(Of TKey, TLogin, TRole, TClaim).TwoFactorEnabled
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.TwoFactorEnabled
  ? Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.TwoFactorEnabled
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.TwoFactorEnabled
        name: TwoFactorEnabled
        nameWithType: IdentityUser<String, IdentityUserLogin, IdentityUserRole, IdentityUserClaim>.TwoFactorEnabled
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser<System.String, Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin, Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole, Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim>.TwoFactorEnabled
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.TwoFactorEnabled
        name: TwoFactorEnabled
        nameWithType: IdentityUser(Of String, IdentityUserLogin, IdentityUserRole, IdentityUserClaim).TwoFactorEnabled
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser(Of System.String, Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin, Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole, Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim).TwoFactorEnabled
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.TwoFactorEnabled
    parent: Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}
    commentId: P:Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.TwoFactorEnabled
  Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.LockoutEndDateUtc:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.LockoutEndDateUtc
        name: LockoutEndDateUtc
        nameWithType: IdentityUser<TKey, TLogin, TRole, TClaim>.LockoutEndDateUtc
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser<TKey, TLogin, TRole, TClaim>.LockoutEndDateUtc
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.LockoutEndDateUtc
        name: LockoutEndDateUtc
        nameWithType: IdentityUser(Of TKey, TLogin, TRole, TClaim).LockoutEndDateUtc
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser(Of TKey, TLogin, TRole, TClaim).LockoutEndDateUtc
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.LockoutEndDateUtc
  ? Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.LockoutEndDateUtc
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.LockoutEndDateUtc
        name: LockoutEndDateUtc
        nameWithType: IdentityUser<String, IdentityUserLogin, IdentityUserRole, IdentityUserClaim>.LockoutEndDateUtc
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser<System.String, Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin, Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole, Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim>.LockoutEndDateUtc
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.LockoutEndDateUtc
        name: LockoutEndDateUtc
        nameWithType: IdentityUser(Of String, IdentityUserLogin, IdentityUserRole, IdentityUserClaim).LockoutEndDateUtc
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser(Of System.String, Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin, Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole, Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim).LockoutEndDateUtc
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.LockoutEndDateUtc
    parent: Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}
    commentId: P:Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.LockoutEndDateUtc
  Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.LockoutEnabled:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.LockoutEnabled
        name: LockoutEnabled
        nameWithType: IdentityUser<TKey, TLogin, TRole, TClaim>.LockoutEnabled
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser<TKey, TLogin, TRole, TClaim>.LockoutEnabled
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.LockoutEnabled
        name: LockoutEnabled
        nameWithType: IdentityUser(Of TKey, TLogin, TRole, TClaim).LockoutEnabled
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser(Of TKey, TLogin, TRole, TClaim).LockoutEnabled
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.LockoutEnabled
  ? Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.LockoutEnabled
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.LockoutEnabled
        name: LockoutEnabled
        nameWithType: IdentityUser<String, IdentityUserLogin, IdentityUserRole, IdentityUserClaim>.LockoutEnabled
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser<System.String, Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin, Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole, Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim>.LockoutEnabled
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.LockoutEnabled
        name: LockoutEnabled
        nameWithType: IdentityUser(Of String, IdentityUserLogin, IdentityUserRole, IdentityUserClaim).LockoutEnabled
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser(Of System.String, Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin, Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole, Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim).LockoutEnabled
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.LockoutEnabled
    parent: Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}
    commentId: P:Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.LockoutEnabled
  Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.AccessFailedCount:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.AccessFailedCount
        name: AccessFailedCount
        nameWithType: IdentityUser<TKey, TLogin, TRole, TClaim>.AccessFailedCount
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser<TKey, TLogin, TRole, TClaim>.AccessFailedCount
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.AccessFailedCount
        name: AccessFailedCount
        nameWithType: IdentityUser(Of TKey, TLogin, TRole, TClaim).AccessFailedCount
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser(Of TKey, TLogin, TRole, TClaim).AccessFailedCount
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.AccessFailedCount
  ? Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.AccessFailedCount
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.AccessFailedCount
        name: AccessFailedCount
        nameWithType: IdentityUser<String, IdentityUserLogin, IdentityUserRole, IdentityUserClaim>.AccessFailedCount
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser<System.String, Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin, Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole, Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim>.AccessFailedCount
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.AccessFailedCount
        name: AccessFailedCount
        nameWithType: IdentityUser(Of String, IdentityUserLogin, IdentityUserRole, IdentityUserClaim).AccessFailedCount
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser(Of System.String, Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin, Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole, Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim).AccessFailedCount
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.AccessFailedCount
    parent: Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}
    commentId: P:Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.AccessFailedCount
  Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.Roles:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.Roles
        name: Roles
        nameWithType: IdentityUser<TKey, TLogin, TRole, TClaim>.Roles
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser<TKey, TLogin, TRole, TClaim>.Roles
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.Roles
        name: Roles
        nameWithType: IdentityUser(Of TKey, TLogin, TRole, TClaim).Roles
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser(Of TKey, TLogin, TRole, TClaim).Roles
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.Roles
  ? Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.Roles
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.Roles
        name: Roles
        nameWithType: IdentityUser<String, IdentityUserLogin, IdentityUserRole, IdentityUserClaim>.Roles
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser<System.String, Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin, Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole, Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim>.Roles
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.Roles
        name: Roles
        nameWithType: IdentityUser(Of String, IdentityUserLogin, IdentityUserRole, IdentityUserClaim).Roles
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser(Of System.String, Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin, Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole, Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim).Roles
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.Roles
    parent: Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}
    commentId: P:Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.Roles
  Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.Claims:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.Claims
        name: Claims
        nameWithType: IdentityUser<TKey, TLogin, TRole, TClaim>.Claims
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser<TKey, TLogin, TRole, TClaim>.Claims
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.Claims
        name: Claims
        nameWithType: IdentityUser(Of TKey, TLogin, TRole, TClaim).Claims
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser(Of TKey, TLogin, TRole, TClaim).Claims
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.Claims
  ? Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.Claims
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.Claims
        name: Claims
        nameWithType: IdentityUser<String, IdentityUserLogin, IdentityUserRole, IdentityUserClaim>.Claims
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser<System.String, Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin, Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole, Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim>.Claims
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.Claims
        name: Claims
        nameWithType: IdentityUser(Of String, IdentityUserLogin, IdentityUserRole, IdentityUserClaim).Claims
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser(Of System.String, Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin, Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole, Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim).Claims
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.Claims
    parent: Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}
    commentId: P:Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.Claims
  Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.Logins:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.Logins
        name: Logins
        nameWithType: IdentityUser<TKey, TLogin, TRole, TClaim>.Logins
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser<TKey, TLogin, TRole, TClaim>.Logins
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.Logins
        name: Logins
        nameWithType: IdentityUser(Of TKey, TLogin, TRole, TClaim).Logins
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser(Of TKey, TLogin, TRole, TClaim).Logins
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.Logins
  ? Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.Logins
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.Logins
        name: Logins
        nameWithType: IdentityUser<String, IdentityUserLogin, IdentityUserRole, IdentityUserClaim>.Logins
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser<System.String, Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin, Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole, Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim>.Logins
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.Logins
        name: Logins
        nameWithType: IdentityUser(Of String, IdentityUserLogin, IdentityUserRole, IdentityUserClaim).Logins
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser(Of System.String, Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin, Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole, Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim).Logins
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.Logins
    parent: Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}
    commentId: P:Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.Logins
  Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.Id:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.Id
        name: Id
        nameWithType: IdentityUser<TKey, TLogin, TRole, TClaim>.Id
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser<TKey, TLogin, TRole, TClaim>.Id
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.Id
        name: Id
        nameWithType: IdentityUser(Of TKey, TLogin, TRole, TClaim).Id
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser(Of TKey, TLogin, TRole, TClaim).Id
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.Id
  ? Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.Id
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.Id
        name: Id
        nameWithType: IdentityUser<String, IdentityUserLogin, IdentityUserRole, IdentityUserClaim>.Id
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser<System.String, Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin, Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole, Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim>.Id
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.Id
        name: Id
        nameWithType: IdentityUser(Of String, IdentityUserLogin, IdentityUserRole, IdentityUserClaim).Id
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser(Of System.String, Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin, Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole, Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim).Id
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.Id
    parent: Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}
    commentId: P:Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.Id
  Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.UserName:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.UserName
        name: UserName
        nameWithType: IdentityUser<TKey, TLogin, TRole, TClaim>.UserName
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser<TKey, TLogin, TRole, TClaim>.UserName
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.UserName
        name: UserName
        nameWithType: IdentityUser(Of TKey, TLogin, TRole, TClaim).UserName
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser(Of TKey, TLogin, TRole, TClaim).UserName
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.UserName
  ? Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.UserName
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.UserName
        name: UserName
        nameWithType: IdentityUser<String, IdentityUserLogin, IdentityUserRole, IdentityUserClaim>.UserName
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser<System.String, Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin, Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole, Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim>.UserName
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.UserName
        name: UserName
        nameWithType: IdentityUser(Of String, IdentityUserLogin, IdentityUserRole, IdentityUserClaim).UserName
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUser(Of System.String, Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin, Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole, Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim).UserName
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNet.Identity.EntityFramework.IdentityUser`4.UserName
    parent: Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}
    commentId: P:Microsoft.AspNet.Identity.EntityFramework.IdentityUser{System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.UserName
  Microsoft.AspNet.Identity.IUser:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.IUser
        name: IUser
        nameWithType: IUser
        qualifiedName: Microsoft.AspNet.Identity.IUser
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.IUser
        name: IUser
        nameWithType: IUser
        qualifiedName: Microsoft.AspNet.Identity.IUser
        isExternal: true
    isDefinition: true
    parent: Microsoft.AspNet.Identity
    commentId: T:Microsoft.AspNet.Identity.IUser
  Microsoft.AspNet.Identity.IUser`1:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.IUser`1
        name: IUser
        nameWithType: IUser
        qualifiedName: Microsoft.AspNet.Identity.IUser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.AspNet.Identity.IUser`1
        name: IUser
        nameWithType: IUser
        qualifiedName: Microsoft.AspNet.Identity.IUser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:Microsoft.AspNet.Identity.IUser`1
  Microsoft.AspNet.Identity.IUser{System.String}:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.IUser`1
        name: IUser
        nameWithType: IUser
        qualifiedName: Microsoft.AspNet.Identity.IUser
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.AspNet.Identity.IUser`1
        name: IUser
        nameWithType: IUser
        qualifiedName: Microsoft.AspNet.Identity.IUser
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.IUser`1
    parent: Microsoft.AspNet.Identity
    commentId: T:Microsoft.AspNet.Identity.IUser{System.String}
  BookstoreProject.Models.ApplicationUser.GenerateUserIdentityAsync*:
    name:
      CSharp:
      - id: BookstoreProject.Models.ApplicationUser.GenerateUserIdentityAsync*
        name: GenerateUserIdentityAsync
        nameWithType: ApplicationUser.GenerateUserIdentityAsync
        qualifiedName: BookstoreProject.Models.ApplicationUser.GenerateUserIdentityAsync
      VB:
      - id: BookstoreProject.Models.ApplicationUser.GenerateUserIdentityAsync*
        name: GenerateUserIdentityAsync
        nameWithType: ApplicationUser.GenerateUserIdentityAsync
        qualifiedName: BookstoreProject.Models.ApplicationUser.GenerateUserIdentityAsync
    isDefinition: true
    commentId: Overload:BookstoreProject.Models.ApplicationUser.GenerateUserIdentityAsync
  Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`1:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`1
        name: IdentityDbContext
        nameWithType: IdentityDbContext
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`1
        name: IdentityDbContext
        nameWithType: IdentityDbContext
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`1
  Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{BookstoreProject.Models.ApplicationUser}:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`1
        name: IdentityDbContext
        nameWithType: IdentityDbContext
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: BookstoreProject.Models.ApplicationUser
        name: ApplicationUser
        nameWithType: ApplicationUser
        qualifiedName: BookstoreProject.Models.ApplicationUser
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`1
        name: IdentityDbContext
        nameWithType: IdentityDbContext
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: BookstoreProject.Models.ApplicationUser
        name: ApplicationUser
        nameWithType: ApplicationUser
        qualifiedName: BookstoreProject.Models.ApplicationUser
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`1
    parent: Microsoft.AspNet.Identity.EntityFramework
    commentId: T:Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{BookstoreProject.Models.ApplicationUser}
  Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6
        name: IdentityDbContext
        nameWithType: IdentityDbContext
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TUserLogin
        nameWithType: TUserLogin
        qualifiedName: TUserLogin
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TUserRole
        nameWithType: TUserRole
        qualifiedName: TUserRole
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TUserClaim
        nameWithType: TUserClaim
        qualifiedName: TUserClaim
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6
        name: IdentityDbContext
        nameWithType: IdentityDbContext
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TUser
        nameWithType: TUser
        qualifiedName: TUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TRole
        nameWithType: TRole
        qualifiedName: TRole
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TUserLogin
        nameWithType: TUserLogin
        qualifiedName: TUserLogin
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TUserRole
        nameWithType: TUserRole
        qualifiedName: TUserRole
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TUserClaim
        nameWithType: TUserClaim
        qualifiedName: TUserClaim
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6
  ? Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{BookstoreProject.Models.ApplicationUser,Microsoft.AspNet.Identity.EntityFramework.IdentityRole,System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6
        name: IdentityDbContext
        nameWithType: IdentityDbContext
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: BookstoreProject.Models.ApplicationUser
        name: ApplicationUser
        nameWithType: ApplicationUser
        qualifiedName: BookstoreProject.Models.ApplicationUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityRole
        name: IdentityRole
        nameWithType: IdentityRole
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityRole
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin
        name: IdentityUserLogin
        nameWithType: IdentityUserLogin
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole
        name: IdentityUserRole
        nameWithType: IdentityUserRole
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim
        name: IdentityUserClaim
        nameWithType: IdentityUserClaim
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6
        name: IdentityDbContext
        nameWithType: IdentityDbContext
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: BookstoreProject.Models.ApplicationUser
        name: ApplicationUser
        nameWithType: ApplicationUser
        qualifiedName: BookstoreProject.Models.ApplicationUser
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityRole
        name: IdentityRole
        nameWithType: IdentityRole
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityRole
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin
        name: IdentityUserLogin
        nameWithType: IdentityUserLogin
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole
        name: IdentityUserRole
        nameWithType: IdentityUserRole
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim
        name: IdentityUserClaim
        nameWithType: IdentityUserClaim
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6
    parent: Microsoft.AspNet.Identity.EntityFramework
    commentId: T:Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{BookstoreProject.Models.ApplicationUser,Microsoft.AspNet.Identity.EntityFramework.IdentityRole,System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}
  Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.OnModelCreating(System.Data.Entity.DbModelBuilder):
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.OnModelCreating(System.Data.Entity.DbModelBuilder)
        name: OnModelCreating
        nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.OnModelCreating
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.OnModelCreating
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Data.Entity.DbModelBuilder
        name: DbModelBuilder
        nameWithType: DbModelBuilder
        qualifiedName: System.Data.Entity.DbModelBuilder
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.OnModelCreating(System.Data.Entity.DbModelBuilder)
        name: OnModelCreating
        nameWithType: IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).OnModelCreating
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).OnModelCreating
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Data.Entity.DbModelBuilder
        name: DbModelBuilder
        nameWithType: DbModelBuilder
        qualifiedName: System.Data.Entity.DbModelBuilder
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.OnModelCreating(System.Data.Entity.DbModelBuilder)
  ? Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{BookstoreProject.Models.ApplicationUser,Microsoft.AspNet.Identity.EntityFramework.IdentityRole,System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.OnModelCreating(System.Data.Entity.DbModelBuilder)
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.OnModelCreating(System.Data.Entity.DbModelBuilder)
        name: OnModelCreating
        nameWithType: IdentityDbContext<ApplicationUser, IdentityRole, String, IdentityUserLogin, IdentityUserRole, IdentityUserClaim>.OnModelCreating
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext<BookstoreProject.Models.ApplicationUser, Microsoft.AspNet.Identity.EntityFramework.IdentityRole, System.String, Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin, Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole, Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim>.OnModelCreating
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Data.Entity.DbModelBuilder
        name: DbModelBuilder
        nameWithType: DbModelBuilder
        qualifiedName: System.Data.Entity.DbModelBuilder
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.OnModelCreating(System.Data.Entity.DbModelBuilder)
        name: OnModelCreating
        nameWithType: IdentityDbContext(Of ApplicationUser, IdentityRole, String, IdentityUserLogin, IdentityUserRole, IdentityUserClaim).OnModelCreating
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext(Of BookstoreProject.Models.ApplicationUser, Microsoft.AspNet.Identity.EntityFramework.IdentityRole, System.String, Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin, Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole, Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim).OnModelCreating
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Data.Entity.DbModelBuilder
        name: DbModelBuilder
        nameWithType: DbModelBuilder
        qualifiedName: System.Data.Entity.DbModelBuilder
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.OnModelCreating(System.Data.Entity.DbModelBuilder)
    parent: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{BookstoreProject.Models.ApplicationUser,Microsoft.AspNet.Identity.EntityFramework.IdentityRole,System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}
    commentId: M:Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{BookstoreProject.Models.ApplicationUser,Microsoft.AspNet.Identity.EntityFramework.IdentityRole,System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.OnModelCreating(System.Data.Entity.DbModelBuilder)
  ? Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})
        name: ValidateEntity
        nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.ValidateEntity
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.ValidateEntity
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Data.Entity.Infrastructure.DbEntityEntry
        name: DbEntityEntry
        nameWithType: DbEntityEntry
        qualifiedName: System.Data.Entity.Infrastructure.DbEntityEntry
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.Generic.IDictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})
        name: ValidateEntity
        nameWithType: IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).ValidateEntity
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).ValidateEntity
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Data.Entity.Infrastructure.DbEntityEntry
        name: DbEntityEntry
        nameWithType: DbEntityEntry
        qualifiedName: System.Data.Entity.Infrastructure.DbEntityEntry
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.Generic.IDictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})
  ? Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{BookstoreProject.Models.ApplicationUser,Microsoft.AspNet.Identity.EntityFramework.IdentityRole,System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})
        name: ValidateEntity
        nameWithType: IdentityDbContext<ApplicationUser, IdentityRole, String, IdentityUserLogin, IdentityUserRole, IdentityUserClaim>.ValidateEntity
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext<BookstoreProject.Models.ApplicationUser, Microsoft.AspNet.Identity.EntityFramework.IdentityRole, System.String, Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin, Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole, Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim>.ValidateEntity
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Data.Entity.Infrastructure.DbEntityEntry
        name: DbEntityEntry
        nameWithType: DbEntityEntry
        qualifiedName: System.Data.Entity.Infrastructure.DbEntityEntry
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.Generic.IDictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})
        name: ValidateEntity
        nameWithType: IdentityDbContext(Of ApplicationUser, IdentityRole, String, IdentityUserLogin, IdentityUserRole, IdentityUserClaim).ValidateEntity
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext(Of BookstoreProject.Models.ApplicationUser, Microsoft.AspNet.Identity.EntityFramework.IdentityRole, System.String, Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin, Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole, Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim).ValidateEntity
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Data.Entity.Infrastructure.DbEntityEntry
        name: DbEntityEntry
        nameWithType: DbEntityEntry
        qualifiedName: System.Data.Entity.Infrastructure.DbEntityEntry
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.Generic.IDictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})
    parent: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{BookstoreProject.Models.ApplicationUser,Microsoft.AspNet.Identity.EntityFramework.IdentityRole,System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}
    commentId: M:Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{BookstoreProject.Models.ApplicationUser,Microsoft.AspNet.Identity.EntityFramework.IdentityRole,System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})
  Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.Users:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.Users
        name: Users
        nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.Users
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.Users
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.Users
        name: Users
        nameWithType: IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).Users
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).Users
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.Users
  ? Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{BookstoreProject.Models.ApplicationUser,Microsoft.AspNet.Identity.EntityFramework.IdentityRole,System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.Users
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.Users
        name: Users
        nameWithType: IdentityDbContext<ApplicationUser, IdentityRole, String, IdentityUserLogin, IdentityUserRole, IdentityUserClaim>.Users
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext<BookstoreProject.Models.ApplicationUser, Microsoft.AspNet.Identity.EntityFramework.IdentityRole, System.String, Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin, Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole, Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim>.Users
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.Users
        name: Users
        nameWithType: IdentityDbContext(Of ApplicationUser, IdentityRole, String, IdentityUserLogin, IdentityUserRole, IdentityUserClaim).Users
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext(Of BookstoreProject.Models.ApplicationUser, Microsoft.AspNet.Identity.EntityFramework.IdentityRole, System.String, Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin, Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole, Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim).Users
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.Users
    parent: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{BookstoreProject.Models.ApplicationUser,Microsoft.AspNet.Identity.EntityFramework.IdentityRole,System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}
    commentId: P:Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{BookstoreProject.Models.ApplicationUser,Microsoft.AspNet.Identity.EntityFramework.IdentityRole,System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.Users
  Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.Roles:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.Roles
        name: Roles
        nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.Roles
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.Roles
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.Roles
        name: Roles
        nameWithType: IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).Roles
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).Roles
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.Roles
  ? Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{BookstoreProject.Models.ApplicationUser,Microsoft.AspNet.Identity.EntityFramework.IdentityRole,System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.Roles
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.Roles
        name: Roles
        nameWithType: IdentityDbContext<ApplicationUser, IdentityRole, String, IdentityUserLogin, IdentityUserRole, IdentityUserClaim>.Roles
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext<BookstoreProject.Models.ApplicationUser, Microsoft.AspNet.Identity.EntityFramework.IdentityRole, System.String, Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin, Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole, Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim>.Roles
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.Roles
        name: Roles
        nameWithType: IdentityDbContext(Of ApplicationUser, IdentityRole, String, IdentityUserLogin, IdentityUserRole, IdentityUserClaim).Roles
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext(Of BookstoreProject.Models.ApplicationUser, Microsoft.AspNet.Identity.EntityFramework.IdentityRole, System.String, Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin, Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole, Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim).Roles
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.Roles
    parent: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{BookstoreProject.Models.ApplicationUser,Microsoft.AspNet.Identity.EntityFramework.IdentityRole,System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}
    commentId: P:Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{BookstoreProject.Models.ApplicationUser,Microsoft.AspNet.Identity.EntityFramework.IdentityRole,System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.Roles
  Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.RequireUniqueEmail:
    name:
      CSharp:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.RequireUniqueEmail
        name: RequireUniqueEmail
        nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.RequireUniqueEmail
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.RequireUniqueEmail
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.RequireUniqueEmail
        name: RequireUniqueEmail
        nameWithType: IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).RequireUniqueEmail
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).RequireUniqueEmail
        isExternal: true
    isDefinition: true
    commentId: P:Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.RequireUniqueEmail
  ? Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{BookstoreProject.Models.ApplicationUser,Microsoft.AspNet.Identity.EntityFramework.IdentityRole,System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.RequireUniqueEmail
  : name:
      CSharp:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.RequireUniqueEmail
        name: RequireUniqueEmail
        nameWithType: IdentityDbContext<ApplicationUser, IdentityRole, String, IdentityUserLogin, IdentityUserRole, IdentityUserClaim>.RequireUniqueEmail
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext<BookstoreProject.Models.ApplicationUser, Microsoft.AspNet.Identity.EntityFramework.IdentityRole, System.String, Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin, Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole, Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim>.RequireUniqueEmail
        isExternal: true
      VB:
      - id: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.RequireUniqueEmail
        name: RequireUniqueEmail
        nameWithType: IdentityDbContext(Of ApplicationUser, IdentityRole, String, IdentityUserLogin, IdentityUserRole, IdentityUserClaim).RequireUniqueEmail
        qualifiedName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext(Of BookstoreProject.Models.ApplicationUser, Microsoft.AspNet.Identity.EntityFramework.IdentityRole, System.String, Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin, Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole, Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim).RequireUniqueEmail
        isExternal: true
    isDefinition: false
    definition: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.RequireUniqueEmail
    parent: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{BookstoreProject.Models.ApplicationUser,Microsoft.AspNet.Identity.EntityFramework.IdentityRole,System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}
    commentId: P:Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{BookstoreProject.Models.ApplicationUser,Microsoft.AspNet.Identity.EntityFramework.IdentityRole,System.String,Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin,Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole,Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim}.RequireUniqueEmail
  BookstoreProject.Models.ApplicationDbContext.#ctor*:
    name:
      CSharp:
      - id: BookstoreProject.Models.ApplicationDbContext.#ctor*
        name: ApplicationDbContext
        nameWithType: ApplicationDbContext.ApplicationDbContext
        qualifiedName: BookstoreProject.Models.ApplicationDbContext.ApplicationDbContext
      VB:
      - id: BookstoreProject.Models.ApplicationDbContext.#ctor*
        name: ApplicationDbContext
        nameWithType: ApplicationDbContext.ApplicationDbContext
        qualifiedName: BookstoreProject.Models.ApplicationDbContext.ApplicationDbContext
    isDefinition: true
    commentId: Overload:BookstoreProject.Models.ApplicationDbContext.#ctor
  BookstoreProject.Models.ApplicationDbContext:
    name:
      CSharp:
      - id: BookstoreProject.Models.ApplicationDbContext
        name: ApplicationDbContext
        nameWithType: ApplicationDbContext
        qualifiedName: BookstoreProject.Models.ApplicationDbContext
      VB:
      - id: BookstoreProject.Models.ApplicationDbContext
        name: ApplicationDbContext
        nameWithType: ApplicationDbContext
        qualifiedName: BookstoreProject.Models.ApplicationDbContext
    isDefinition: true
    parent: BookstoreProject.Models
    commentId: T:BookstoreProject.Models.ApplicationDbContext
  BookstoreProject.Models.ApplicationDbContext.Create*:
    name:
      CSharp:
      - id: BookstoreProject.Models.ApplicationDbContext.Create*
        name: Create
        nameWithType: ApplicationDbContext.Create
        qualifiedName: BookstoreProject.Models.ApplicationDbContext.Create
      VB:
      - id: BookstoreProject.Models.ApplicationDbContext.Create*
        name: Create
        nameWithType: ApplicationDbContext.Create
        qualifiedName: BookstoreProject.Models.ApplicationDbContext.Create
    isDefinition: true
    commentId: Overload:BookstoreProject.Models.ApplicationDbContext.Create
  BookstoreProject.Models.IndexViewModel.HasPassword*:
    name:
      CSharp:
      - id: BookstoreProject.Models.IndexViewModel.HasPassword*
        name: HasPassword
        nameWithType: IndexViewModel.HasPassword
        qualifiedName: BookstoreProject.Models.IndexViewModel.HasPassword
      VB:
      - id: BookstoreProject.Models.IndexViewModel.HasPassword*
        name: HasPassword
        nameWithType: IndexViewModel.HasPassword
        qualifiedName: BookstoreProject.Models.IndexViewModel.HasPassword
    isDefinition: true
    commentId: Overload:BookstoreProject.Models.IndexViewModel.HasPassword
  System.Collections.Generic.IList`1:
    name:
      CSharp:
      - id: System.Collections.Generic.IList`1
        name: IList
        nameWithType: IList
        qualifiedName: System.Collections.Generic.IList
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IList`1
        name: IList
        nameWithType: IList
        qualifiedName: System.Collections.Generic.IList
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.IList`1
  System.Collections.Generic.IList{Microsoft.AspNet.Identity.UserLoginInfo}:
    name:
      CSharp:
      - id: System.Collections.Generic.IList`1
        name: IList
        nameWithType: IList
        qualifiedName: System.Collections.Generic.IList
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Microsoft.AspNet.Identity.UserLoginInfo
        name: UserLoginInfo
        nameWithType: UserLoginInfo
        qualifiedName: Microsoft.AspNet.Identity.UserLoginInfo
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IList`1
        name: IList
        nameWithType: IList
        qualifiedName: System.Collections.Generic.IList
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Microsoft.AspNet.Identity.UserLoginInfo
        name: UserLoginInfo
        nameWithType: UserLoginInfo
        qualifiedName: Microsoft.AspNet.Identity.UserLoginInfo
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IList`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IList{Microsoft.AspNet.Identity.UserLoginInfo}
  BookstoreProject.Models.IndexViewModel.Logins*:
    name:
      CSharp:
      - id: BookstoreProject.Models.IndexViewModel.Logins*
        name: Logins
        nameWithType: IndexViewModel.Logins
        qualifiedName: BookstoreProject.Models.IndexViewModel.Logins
      VB:
      - id: BookstoreProject.Models.IndexViewModel.Logins*
        name: Logins
        nameWithType: IndexViewModel.Logins
        qualifiedName: BookstoreProject.Models.IndexViewModel.Logins
    isDefinition: true
    commentId: Overload:BookstoreProject.Models.IndexViewModel.Logins
  BookstoreProject.Models.IndexViewModel.PhoneNumber*:
    name:
      CSharp:
      - id: BookstoreProject.Models.IndexViewModel.PhoneNumber*
        name: PhoneNumber
        nameWithType: IndexViewModel.PhoneNumber
        qualifiedName: BookstoreProject.Models.IndexViewModel.PhoneNumber
      VB:
      - id: BookstoreProject.Models.IndexViewModel.PhoneNumber*
        name: PhoneNumber
        nameWithType: IndexViewModel.PhoneNumber
        qualifiedName: BookstoreProject.Models.IndexViewModel.PhoneNumber
    isDefinition: true
    commentId: Overload:BookstoreProject.Models.IndexViewModel.PhoneNumber
  BookstoreProject.Models.IndexViewModel.TwoFactor*:
    name:
      CSharp:
      - id: BookstoreProject.Models.IndexViewModel.TwoFactor*
        name: TwoFactor
        nameWithType: IndexViewModel.TwoFactor
        qualifiedName: BookstoreProject.Models.IndexViewModel.TwoFactor
      VB:
      - id: BookstoreProject.Models.IndexViewModel.TwoFactor*
        name: TwoFactor
        nameWithType: IndexViewModel.TwoFactor
        qualifiedName: BookstoreProject.Models.IndexViewModel.TwoFactor
    isDefinition: true
    commentId: Overload:BookstoreProject.Models.IndexViewModel.TwoFactor
  BookstoreProject.Models.IndexViewModel.BrowserRemembered*:
    name:
      CSharp:
      - id: BookstoreProject.Models.IndexViewModel.BrowserRemembered*
        name: BrowserRemembered
        nameWithType: IndexViewModel.BrowserRemembered
        qualifiedName: BookstoreProject.Models.IndexViewModel.BrowserRemembered
      VB:
      - id: BookstoreProject.Models.IndexViewModel.BrowserRemembered*
        name: BrowserRemembered
        nameWithType: IndexViewModel.BrowserRemembered
        qualifiedName: BookstoreProject.Models.IndexViewModel.BrowserRemembered
    isDefinition: true
    commentId: Overload:BookstoreProject.Models.IndexViewModel.BrowserRemembered
  BookstoreProject.Models.IndexViewModel:
    name:
      CSharp:
      - id: BookstoreProject.Models.IndexViewModel
        name: IndexViewModel
        nameWithType: IndexViewModel
        qualifiedName: BookstoreProject.Models.IndexViewModel
      VB:
      - id: BookstoreProject.Models.IndexViewModel
        name: IndexViewModel
        nameWithType: IndexViewModel
        qualifiedName: BookstoreProject.Models.IndexViewModel
    isDefinition: true
    commentId: T:BookstoreProject.Models.IndexViewModel
  BookstoreProject.Models.ManageLoginsViewModel.CurrentLogins*:
    name:
      CSharp:
      - id: BookstoreProject.Models.ManageLoginsViewModel.CurrentLogins*
        name: CurrentLogins
        nameWithType: ManageLoginsViewModel.CurrentLogins
        qualifiedName: BookstoreProject.Models.ManageLoginsViewModel.CurrentLogins
      VB:
      - id: BookstoreProject.Models.ManageLoginsViewModel.CurrentLogins*
        name: CurrentLogins
        nameWithType: ManageLoginsViewModel.CurrentLogins
        qualifiedName: BookstoreProject.Models.ManageLoginsViewModel.CurrentLogins
    isDefinition: true
    commentId: Overload:BookstoreProject.Models.ManageLoginsViewModel.CurrentLogins
  System.Collections.Generic.IList{Microsoft.Owin.Security.AuthenticationDescription}:
    name:
      CSharp:
      - id: System.Collections.Generic.IList`1
        name: IList
        nameWithType: IList
        qualifiedName: System.Collections.Generic.IList
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Microsoft.Owin.Security.AuthenticationDescription
        name: AuthenticationDescription
        nameWithType: AuthenticationDescription
        qualifiedName: Microsoft.Owin.Security.AuthenticationDescription
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IList`1
        name: IList
        nameWithType: IList
        qualifiedName: System.Collections.Generic.IList
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Microsoft.Owin.Security.AuthenticationDescription
        name: AuthenticationDescription
        nameWithType: AuthenticationDescription
        qualifiedName: Microsoft.Owin.Security.AuthenticationDescription
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IList`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IList{Microsoft.Owin.Security.AuthenticationDescription}
  BookstoreProject.Models.ManageLoginsViewModel.OtherLogins*:
    name:
      CSharp:
      - id: BookstoreProject.Models.ManageLoginsViewModel.OtherLogins*
        name: OtherLogins
        nameWithType: ManageLoginsViewModel.OtherLogins
        qualifiedName: BookstoreProject.Models.ManageLoginsViewModel.OtherLogins
      VB:
      - id: BookstoreProject.Models.ManageLoginsViewModel.OtherLogins*
        name: OtherLogins
        nameWithType: ManageLoginsViewModel.OtherLogins
        qualifiedName: BookstoreProject.Models.ManageLoginsViewModel.OtherLogins
    isDefinition: true
    commentId: Overload:BookstoreProject.Models.ManageLoginsViewModel.OtherLogins
  BookstoreProject.Models.ManageLoginsViewModel:
    name:
      CSharp:
      - id: BookstoreProject.Models.ManageLoginsViewModel
        name: ManageLoginsViewModel
        nameWithType: ManageLoginsViewModel
        qualifiedName: BookstoreProject.Models.ManageLoginsViewModel
      VB:
      - id: BookstoreProject.Models.ManageLoginsViewModel
        name: ManageLoginsViewModel
        nameWithType: ManageLoginsViewModel
        qualifiedName: BookstoreProject.Models.ManageLoginsViewModel
    isDefinition: true
    commentId: T:BookstoreProject.Models.ManageLoginsViewModel
  BookstoreProject.Models.FactorViewModel.Purpose*:
    name:
      CSharp:
      - id: BookstoreProject.Models.FactorViewModel.Purpose*
        name: Purpose
        nameWithType: FactorViewModel.Purpose
        qualifiedName: BookstoreProject.Models.FactorViewModel.Purpose
      VB:
      - id: BookstoreProject.Models.FactorViewModel.Purpose*
        name: Purpose
        nameWithType: FactorViewModel.Purpose
        qualifiedName: BookstoreProject.Models.FactorViewModel.Purpose
    isDefinition: true
    commentId: Overload:BookstoreProject.Models.FactorViewModel.Purpose
  BookstoreProject.Models.FactorViewModel:
    name:
      CSharp:
      - id: BookstoreProject.Models.FactorViewModel
        name: FactorViewModel
        nameWithType: FactorViewModel
        qualifiedName: BookstoreProject.Models.FactorViewModel
      VB:
      - id: BookstoreProject.Models.FactorViewModel
        name: FactorViewModel
        nameWithType: FactorViewModel
        qualifiedName: BookstoreProject.Models.FactorViewModel
    isDefinition: true
    commentId: T:BookstoreProject.Models.FactorViewModel
  BookstoreProject.Models.SetPasswordViewModel.NewPassword*:
    name:
      CSharp:
      - id: BookstoreProject.Models.SetPasswordViewModel.NewPassword*
        name: NewPassword
        nameWithType: SetPasswordViewModel.NewPassword
        qualifiedName: BookstoreProject.Models.SetPasswordViewModel.NewPassword
      VB:
      - id: BookstoreProject.Models.SetPasswordViewModel.NewPassword*
        name: NewPassword
        nameWithType: SetPasswordViewModel.NewPassword
        qualifiedName: BookstoreProject.Models.SetPasswordViewModel.NewPassword
    isDefinition: true
    commentId: Overload:BookstoreProject.Models.SetPasswordViewModel.NewPassword
  BookstoreProject.Models.SetPasswordViewModel.ConfirmPassword*:
    name:
      CSharp:
      - id: BookstoreProject.Models.SetPasswordViewModel.ConfirmPassword*
        name: ConfirmPassword
        nameWithType: SetPasswordViewModel.ConfirmPassword
        qualifiedName: BookstoreProject.Models.SetPasswordViewModel.ConfirmPassword
      VB:
      - id: BookstoreProject.Models.SetPasswordViewModel.ConfirmPassword*
        name: ConfirmPassword
        nameWithType: SetPasswordViewModel.ConfirmPassword
        qualifiedName: BookstoreProject.Models.SetPasswordViewModel.ConfirmPassword
    isDefinition: true
    commentId: Overload:BookstoreProject.Models.SetPasswordViewModel.ConfirmPassword
  BookstoreProject.Models.ChangePasswordViewModel.OldPassword*:
    name:
      CSharp:
      - id: BookstoreProject.Models.ChangePasswordViewModel.OldPassword*
        name: OldPassword
        nameWithType: ChangePasswordViewModel.OldPassword
        qualifiedName: BookstoreProject.Models.ChangePasswordViewModel.OldPassword
      VB:
      - id: BookstoreProject.Models.ChangePasswordViewModel.OldPassword*
        name: OldPassword
        nameWithType: ChangePasswordViewModel.OldPassword
        qualifiedName: BookstoreProject.Models.ChangePasswordViewModel.OldPassword
    isDefinition: true
    commentId: Overload:BookstoreProject.Models.ChangePasswordViewModel.OldPassword
  BookstoreProject.Models.ChangePasswordViewModel.NewPassword*:
    name:
      CSharp:
      - id: BookstoreProject.Models.ChangePasswordViewModel.NewPassword*
        name: NewPassword
        nameWithType: ChangePasswordViewModel.NewPassword
        qualifiedName: BookstoreProject.Models.ChangePasswordViewModel.NewPassword
      VB:
      - id: BookstoreProject.Models.ChangePasswordViewModel.NewPassword*
        name: NewPassword
        nameWithType: ChangePasswordViewModel.NewPassword
        qualifiedName: BookstoreProject.Models.ChangePasswordViewModel.NewPassword
    isDefinition: true
    commentId: Overload:BookstoreProject.Models.ChangePasswordViewModel.NewPassword
  BookstoreProject.Models.ChangePasswordViewModel.ConfirmPassword*:
    name:
      CSharp:
      - id: BookstoreProject.Models.ChangePasswordViewModel.ConfirmPassword*
        name: ConfirmPassword
        nameWithType: ChangePasswordViewModel.ConfirmPassword
        qualifiedName: BookstoreProject.Models.ChangePasswordViewModel.ConfirmPassword
      VB:
      - id: BookstoreProject.Models.ChangePasswordViewModel.ConfirmPassword*
        name: ConfirmPassword
        nameWithType: ChangePasswordViewModel.ConfirmPassword
        qualifiedName: BookstoreProject.Models.ChangePasswordViewModel.ConfirmPassword
    isDefinition: true
    commentId: Overload:BookstoreProject.Models.ChangePasswordViewModel.ConfirmPassword
  BookstoreProject.Models.AddPhoneNumberViewModel.Number*:
    name:
      CSharp:
      - id: BookstoreProject.Models.AddPhoneNumberViewModel.Number*
        name: Number
        nameWithType: AddPhoneNumberViewModel.Number
        qualifiedName: BookstoreProject.Models.AddPhoneNumberViewModel.Number
      VB:
      - id: BookstoreProject.Models.AddPhoneNumberViewModel.Number*
        name: Number
        nameWithType: AddPhoneNumberViewModel.Number
        qualifiedName: BookstoreProject.Models.AddPhoneNumberViewModel.Number
    isDefinition: true
    commentId: Overload:BookstoreProject.Models.AddPhoneNumberViewModel.Number
  System.ComponentModel.DataAnnotations.PhoneAttribute:
    name:
      CSharp:
      - id: System.ComponentModel.DataAnnotations.PhoneAttribute
        name: PhoneAttribute
        nameWithType: PhoneAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.PhoneAttribute
        isExternal: true
      VB:
      - id: System.ComponentModel.DataAnnotations.PhoneAttribute
        name: PhoneAttribute
        nameWithType: PhoneAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.PhoneAttribute
        isExternal: true
    isDefinition: true
    parent: System.ComponentModel.DataAnnotations
    commentId: T:System.ComponentModel.DataAnnotations.PhoneAttribute
  System.ComponentModel.DataAnnotations.PhoneAttribute.#ctor:
    name:
      CSharp:
      - id: System.ComponentModel.DataAnnotations.PhoneAttribute.#ctor
        name: PhoneAttribute
        nameWithType: PhoneAttribute.PhoneAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.PhoneAttribute.PhoneAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ComponentModel.DataAnnotations.PhoneAttribute.#ctor
        name: PhoneAttribute
        nameWithType: PhoneAttribute.PhoneAttribute
        qualifiedName: System.ComponentModel.DataAnnotations.PhoneAttribute.PhoneAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ComponentModel.DataAnnotations.PhoneAttribute
    commentId: M:System.ComponentModel.DataAnnotations.PhoneAttribute.#ctor
  BookstoreProject.Models.VerifyPhoneNumberViewModel.Code*:
    name:
      CSharp:
      - id: BookstoreProject.Models.VerifyPhoneNumberViewModel.Code*
        name: Code
        nameWithType: VerifyPhoneNumberViewModel.Code
        qualifiedName: BookstoreProject.Models.VerifyPhoneNumberViewModel.Code
      VB:
      - id: BookstoreProject.Models.VerifyPhoneNumberViewModel.Code*
        name: Code
        nameWithType: VerifyPhoneNumberViewModel.Code
        qualifiedName: BookstoreProject.Models.VerifyPhoneNumberViewModel.Code
    isDefinition: true
    commentId: Overload:BookstoreProject.Models.VerifyPhoneNumberViewModel.Code
  BookstoreProject.Models.VerifyPhoneNumberViewModel.PhoneNumber*:
    name:
      CSharp:
      - id: BookstoreProject.Models.VerifyPhoneNumberViewModel.PhoneNumber*
        name: PhoneNumber
        nameWithType: VerifyPhoneNumberViewModel.PhoneNumber
        qualifiedName: BookstoreProject.Models.VerifyPhoneNumberViewModel.PhoneNumber
      VB:
      - id: BookstoreProject.Models.VerifyPhoneNumberViewModel.PhoneNumber*
        name: PhoneNumber
        nameWithType: VerifyPhoneNumberViewModel.PhoneNumber
        qualifiedName: BookstoreProject.Models.VerifyPhoneNumberViewModel.PhoneNumber
    isDefinition: true
    commentId: Overload:BookstoreProject.Models.VerifyPhoneNumberViewModel.PhoneNumber
  BookstoreProject.Models.ConfigureTwoFactorViewModel.SelectedProvider*:
    name:
      CSharp:
      - id: BookstoreProject.Models.ConfigureTwoFactorViewModel.SelectedProvider*
        name: SelectedProvider
        nameWithType: ConfigureTwoFactorViewModel.SelectedProvider
        qualifiedName: BookstoreProject.Models.ConfigureTwoFactorViewModel.SelectedProvider
      VB:
      - id: BookstoreProject.Models.ConfigureTwoFactorViewModel.SelectedProvider*
        name: SelectedProvider
        nameWithType: ConfigureTwoFactorViewModel.SelectedProvider
        qualifiedName: BookstoreProject.Models.ConfigureTwoFactorViewModel.SelectedProvider
    isDefinition: true
    commentId: Overload:BookstoreProject.Models.ConfigureTwoFactorViewModel.SelectedProvider
  BookstoreProject.Models.ConfigureTwoFactorViewModel.Providers*:
    name:
      CSharp:
      - id: BookstoreProject.Models.ConfigureTwoFactorViewModel.Providers*
        name: Providers
        nameWithType: ConfigureTwoFactorViewModel.Providers
        qualifiedName: BookstoreProject.Models.ConfigureTwoFactorViewModel.Providers
      VB:
      - id: BookstoreProject.Models.ConfigureTwoFactorViewModel.Providers*
        name: Providers
        nameWithType: ConfigureTwoFactorViewModel.Providers
        qualifiedName: BookstoreProject.Models.ConfigureTwoFactorViewModel.Providers
    isDefinition: true
    commentId: Overload:BookstoreProject.Models.ConfigureTwoFactorViewModel.Providers
  BookstoreProject.Models.ConfigureTwoFactorViewModel:
    name:
      CSharp:
      - id: BookstoreProject.Models.ConfigureTwoFactorViewModel
        name: ConfigureTwoFactorViewModel
        nameWithType: ConfigureTwoFactorViewModel
        qualifiedName: BookstoreProject.Models.ConfigureTwoFactorViewModel
      VB:
      - id: BookstoreProject.Models.ConfigureTwoFactorViewModel
        name: ConfigureTwoFactorViewModel
        nameWithType: ConfigureTwoFactorViewModel
        qualifiedName: BookstoreProject.Models.ConfigureTwoFactorViewModel
    isDefinition: true
    commentId: T:BookstoreProject.Models.ConfigureTwoFactorViewModel
